{"version":3,"file":"static/js/90692.4d8ce303.chunk.js","mappings":"4IAImC,MAAMA,EAAE,iBAAiB,SAASC,EAAED,EAAEC,GAAG,IAAID,EAAEE,KAAK,MAAM,IAAIC,EAAAA,QAAE,GAAGF,uBAAuB,4CAA4C,GAAGD,EAAEI,cAAc,MAAM,IAAID,EAAAA,QAAE,GAAGF,uBAAuB,0DAA0D,GAAG,OAAOD,EAAEE,KAAKG,KAAK,MAAM,IAAIF,EAAAA,QAAE,GAAGF,uBAAuB,uCAAuC,C,sHCA+L,MAAMK,EAAE,IAAIC,EAAAA,GAAE,eAAeP,EAAAA,cAA8zDQ,eAAeC,EAAER,GAAG,MAAMS,aAAaV,KAAKG,SAAv2DK,eAAiBR,GAAG,IAAIA,GAAGW,SAASX,EAAEY,OAAOZ,EAAEa,iBAAiBb,EAAEI,eAAe,MAAM,IAAIH,EAAAA,QAAE,+BAA+B,qFAAqF,GAAGD,EAAEa,kBAAkBb,EAAEI,gBAAgBJ,EAAEE,KAAK,MAAM,IAAID,EAAAA,QAAE,+BAA+B,wDAAwDD,EAAEc,aAAYC,EAAAA,EAAAA,GAAEf,EAAE,aAAa,MAAMW,MAAMJ,KAAKS,GAAGhB,EAAES,EAAET,EAAEc,WAAWG,EAAAA,GAAEC,EAAAA,GAAEC,GAAEC,EAAAA,EAAAA,IAAEb,EAAEE,EAAET,EAAEc,YAAY,IAAIK,EAAE,MAAM,IAAIlB,EAAAA,QAAE,+BAA+B,wCAAuCoB,EAAAA,EAAAA,IAAEZ,GAAGa,KAAK,OAAO,MAAMC,EAAE,CAACb,aAAaS,KAAKH,GAAGO,EAAEC,mBAAkBC,EAAAA,EAAAA,IAAEF,GAAG,MAAMG,EAAE,MAAMH,EAAEI,OAAO,CAACA,OAAOJ,EAAEI,QAAQ,WAAWR,EAAES,KAAKF,GAAG,MAAMG,EAAEN,EAAEV,iBAAiBU,EAAEnB,cAAc0B,EAAEP,EAAEX,MAAMmB,EAAED,EAAEX,EAAEa,SAASF,GAAG,KAAKG,GAAGV,EAAEW,sBAAsB,mBAAmBX,EAAEW,qBAAqBC,QAAQC,EAAAA,EAAAA,IAAE,CAACxB,MAAMkB,EAAEO,mBAAmBd,EAAEc,mBAAmBxB,gBAAgBU,EAAEV,kBAAkByB,GAAEC,EAAAA,EAAAA,IAAEpB,EAAEgB,EAAE,gCAAgC,GAAGG,EAAE,MAAMA,EAAE,GAAGP,EAAE,CAAC,MAAM/B,GAAEwC,EAAAA,EAAAA,GAAErB,EAAEY,EAAE,+BAA+BzB,GAAG,GAAGN,EAAE,MAAMA,EAAE,IAAGyC,EAAAA,EAAAA,IAAEV,KAAI5B,EAAAA,EAAAA,iBAAE4B,GAAG,CAAC,GAAGR,EAAEC,kBAAkB,MAAM,IAAIvB,EAAAA,QAAE,+BAA+B,gDAAgD,IAAIgC,EAAE,MAAM,IAAIhC,EAAAA,QAAE,+BAA+B,oFAAoF,CAAC,MAAM,GAAG4B,EAAE,CAAC,GAAGN,EAAEC,kBAAkB,MAAM,IAAIvB,EAAAA,QAAE,+BAA+B,uFAAuF,IAAIgC,EAAE,MAAM,IAAIhC,EAAAA,QAAE,+BAA+B,2HAA2H,CAACsB,EAAEmB,SAASnB,EAAEmB,OAAOC,sBAAsBpB,EAAEmB,OAAOC,oBAAoB,cAAc,MAAMC,GAAEC,EAAAA,EAAAA,IAAEtB,EAAEmB,OAAO,gCAAgC,GAAGE,EAAE,MAAMA,EAAE,OAAO,MAAMrB,EAAEuB,wBAAwBvB,EAAEuB,uBAAsB,GAAIvB,CAAC,CAAsDP,CAAEf,GAAG,OAAOD,EAAE+C,UAAU5C,EAAE,C","sources":["../node_modules/@arcgis/core/smartMapping/support/binningUtils.js","../node_modules/@arcgis/core/smartMapping/statistics/histogram.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from\"../../core/Error.js\";const e=\"aggregateCount\";function i(e,i){if(!e.view)throw new r(`${i}:missing-parameters`,\"'view' parameter is required for binning\");if(e.sqlExpression)throw new r(`${i}:invalid-parameters`,\"'sqlExpression' parameter is not supported for binning\");if(\"3d\"===e.view.type)throw new r(`${i}:invalid-parameters`,\"3d view is not supported for binning\")}export{e as aggregateCountField,i as verifyBinningParams};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport i from\"../../core/Error.js\";import{numericTypes as e,isTimeOnlyField as r}from\"../../layers/support/fieldUtils.js\";import{verifyBasicFieldValidity as s,verifyFieldType as a,verifyFilterValidity as t}from\"./support/utils.js\";import{verifyBinningParams as o}from\"../support/binningUtils.js\";import{dateTypes as n,getNormalizationType as l,getFieldsList as p,isAnyDateField as f}from\"../support/utils.js\";import{binningCapableLayerTypes as m,defaultSupportedLayerTypes as d,createLayerAdapter as u,getLayerTypeLabels as h}from\"../support/adapters/support/layerUtils.js\";const w=[...n,\"time-only\",...e];async function c(e){if(!e?.layer||!(e.field||e.valueExpression||e.sqlExpression))throw new i(\"histogram:missing-parameters\",\"'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required\");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i(\"histogram:missing-parameters\",\"View is required when 'valueExpression' is specified\");e.forBinning&&o(e,\"histogram\");const{layer:n,...c}=e,g=e.forBinning?m:d,v=u(n,g,e.forBinning);if(!v)throw new i(\"histogram:invalid-parameters\",\"'layer' must be one of these types: \"+h(g).join(\", \"));const y={layerAdapter:v,...c};y.normalizationType=l(y);const x=null!=y.signal?{signal:y.signal}:null;await v.load(x);const E=y.valueExpression||y.sqlExpression,q=y.field,j=q?v.getField(q):null,z=!y.classificationMethod||\"equal-interval\"===y.classificationMethod,B=await p({field:q,normalizationField:y.normalizationField,valueExpression:y.valueExpression}),b=s(v,B,\"histogram:invalid-parameters\");if(b)throw b;if(j){const e=a(v,j,\"histogram:invalid-parameters\",w);if(e)throw e;if(f(j)||r(j)){if(y.normalizationType)throw new i(\"histogram:invalid-parameters\",\"Normalization is not allowed for date fields\");if(!z)throw new i(\"histogram:invalid-parameters\",\"'classificationMethod' other than 'equal-interval' is not allowed for date fields\")}}else if(E){if(y.normalizationType)throw new i(\"histogram:invalid-parameters\",\"Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified\");if(!z)throw new i(\"histogram:invalid-parameters\",\"'classificationMethod' other than 'equal-interval' is not allowed when 'valueExpression' or 'sqlExpression' is specified\")}y.filter&&!y.filter.spatialRelationship&&(y.filter.spatialRelationship=\"intersects\");const A=t(y.filter,\"histogram:invalid-parameters\");if(A)throw A;return null==y.useQueryAttributeBins&&(y.useQueryAttributeBins=!0),y}async function g(i){const{layerAdapter:e,...r}=await c(i);return e.histogram(r)}export{g as default};\n"],"names":["e","i","view","r","sqlExpression","type","w","n","async","g","layerAdapter","layer","field","valueExpression","forBinning","o","c","m","d","v","u","h","join","y","normalizationType","l","x","signal","load","E","q","j","getField","z","classificationMethod","B","p","normalizationField","b","s","a","f","filter","spatialRelationship","A","t","useQueryAttributeBins","histogram"],"sourceRoot":""}