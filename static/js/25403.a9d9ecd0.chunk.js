"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[25403],{25403:(t,e,i)=>{i.r(e),i.d(e,{default:()=>w});var o=i(35143),n=i(48053),l=i(50076),s=i(54099),r=i(46053),a=(i(81806),i(76460),i(47249),i(85842)),h=i(79535);let p=class extends((0,h.A)(s.A.EventedAccessor)){constructor(t){super(t),this._initialViewpoint=null,this._goingHomeController=null,this.go=this.go.bind(this)}destroy(){this._cancelGo(),this.view=null}get state(){return this.view?.ready?this._goingHomeController?"going-home":"ready":"disabled"}set view(t){this._initialViewpoint=null,this._set("view",t),t&&t.when().then((()=>{this.view===t&&(this._initialViewpoint=t.viewpoint.clone(),this.notifyChange("viewpoint"))}))}get viewpoint(){return this._get("viewpoint")||this._initialViewpoint}set viewpoint(t){this._set("viewpoint",t)}async go(){if(!this.view?.ready)throw new l.default("home:disabled-state","Cannot go when disabled.");this._cancelGo(),this.emit("go");const t=new AbortController;this._goingHomeController=t;try{await(this.view?.when()),await this.callGoTo({target:this.viewpoint,options:{signal:t.signal}})}catch(e){}this._goingHomeController=null}cancelGo(){this._cancelGo()}_cancelGo(){const{_goingHomeController:t}=this;t&&t.abort(),this._goingHomeController=null}};(0,o._)([(0,r.MZ)()],p.prototype,"_goingHomeController",void 0),(0,o._)([(0,r.MZ)({readOnly:!0})],p.prototype,"state",null),(0,o._)([(0,r.MZ)()],p.prototype,"view",null),(0,o._)([(0,r.MZ)({type:n.default})],p.prototype,"viewpoint",null),(0,o._)([(0,r.MZ)()],p.prototype,"go",null),(0,o._)([(0,r.MZ)()],p.prototype,"cancelGo",null),p=(0,o._)([(0,a.$)("esri.widgets.Home.HomeViewModel")],p);const w=p}}]);
//# sourceMappingURL=25403.a9d9ecd0.chunk.js.map