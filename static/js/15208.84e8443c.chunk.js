"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[15208],{15208:(e,t,i)=>{i.d(t,{default:()=>c});var o=i(39356),r=i(18690),a=i(76460),s=i(50346),n=i(65215),l=i(97572),u=i(19562);class c{constructor(e){this.viewModel=e,this.createFootprints=async e=>{await(0,s.waitTick)(e);const{coveragePolygons:t,currentBestFeature:i,isAdditionalCoverageVisible:r}=this.viewModel;for(const a of t)a?.imageID===i.attributes.objectId?this.viewModel.bestFeatureFootprint=new o.default({attributes:{imageID:a?.imageID},geometry:a,symbol:u.Fz,visible:!1}):this.viewModel.additionalFootprints.push(new o.default({attributes:{imageID:a?.imageID},geometry:a,symbol:u.P1.clone(),visible:r}))},this.updateFootprint=async(e,t)=>{const{activeViewer:i,currentBestFeature:l,currentCoverageVisible:c,footprintExtent:d}=this.viewModel,g=i?.imageSize;if(l&&g&&d)try{const i=await this.viewModel.getMapPoint(e,{feature:l,mode:"default",imageSize:g});(0,s.throwIfAborted)(t);const a=i.filter(r.Ru);if(!a.length)return;const d=[a.map((e=>{let{x:t,y:i}=e;return[t,i,1]}))];d[0].push(d[0][0]);const p=new n.default({rings:d,spatialReference:a[0].spatialReference});this.viewModel.updateCurrentCoveragePolygon(new o.default({geometry:p,attributes:{imageID:l.attributes.objectId},symbol:u.Fz,visible:c}))}catch(p){(0,s.isAbortError)(p)||a.A.getLogger(this.viewModel).error("update-footprint",p)}else this.viewModel.updateCurrentCoveragePolygon(null)},this.updateFootprintPanorama=async(e,t)=>{const{horizontalFieldOfView:i,pitch:r,verticalFieldOfView:a,yaw:c}=e,{activeViewer:d,currentBestFeature:g,currentCoverageVisible:p,footprintExtent:h}=this.viewModel,f=d?.imageSize;if(!g||!f||!h)return void this.viewModel.updateCurrentCoveragePolygon(null);const{cameraPitch:v,objectId:w}=g.attributes;if(r+v-a/2>180)return void this.viewModel.updateCurrentCoveragePolygon(null);let b=[];if(r+v+a/2<180)b=[[-i/2,a/2],[i/2,a/2],...r-a/2<0?[[-i/2,-a/2],[i/2,-a/2]]:[[i/2,-a/2],[-i/2,-a/2]]];else if(r+v-a/2<180&&r+v+a/2>180){b=[[-i/2,-a/2]];const e=Math.floor(i/6),t=i/e;for(let o=0;o<=e;o++)b.push([o*t-i/2,90-r]);b.push([i/2,-a/2]),r-a/2<0&&([b[0],b[b.length-1]]=[b[b.length-1],b[0]])}const m=b.map((e=>{let[t,i]=e;return(0,l._H)(c+t,r+i,f[0],f[1])})),y=await this.viewModel.getMapPoint(m,{feature:g,mode:"panorama",imageSize:f});(0,s.throwIfAborted)(t);const M=[y.map((e=>{let{x:t,y:i}=e;return[t,i,1]}))];M[0].push(M[0][0]);const C=new n.default({rings:M,spatialReference:y[0].spatialReference});this.viewModel.updateCurrentCoveragePolygon(new o.default({geometry:C,attributes:{imageID:w},symbol:u.Fz.clone(),visible:p}))}}}}}]);
//# sourceMappingURL=15208.84e8443c.chunk.js.map