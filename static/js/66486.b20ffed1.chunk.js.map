{"version":3,"file":"static/js/66486.b20ffed1.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/SimpleBandStatistics.js","../node_modules/@arcgis/core/layers/support/PixelBlock.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass l{constructor(l=null,a=null,t=null){this.minValue=l,this.maxValue=a,this.noDataValue=t}}export{l as SimpleBandStatistics};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import e from\"../../core/Error.js\";import s from\"../../core/JSONSupport.js\";import{clone as i}from\"../../core/lang.js\";import l from\"../../core/Logger.js\";import{property as r}from\"../../core/accessorSupport/decorators/property.js\";import{cast as o}from\"../../core/accessorSupport/decorators/cast.js\";import{subclass as n}from\"../../core/accessorSupport/decorators/subclass.js\";import{SimpleBandStatistics as a}from\"./SimpleBandStatistics.js\";import{getPixelValueRange as h}from\"./rasterFormats/pixelRangeUtils.js\";var p;let c=p=class extends s{static createEmptyBand(t,e){return new(p.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,s=new Uint8Array(e).fill(255);for(let i=0;i<t.length;i++){const l=t[i];for(let t=0;t<e;t++)l[t]||(s[t]=0)}return s}static getPixelArrayConstructor(t){let e;switch(t){case\"u1\":case\"u2\":case\"u4\":case\"u8\":e=Uint8Array;break;case\"u16\":e=Uint16Array;break;case\"u32\":e=Uint32Array;break;case\"s8\":e=Int8Array;break;case\"s16\":e=Int16Array;break;case\"s32\":e=Int32Array;break;case\"f32\":case\"c64\":case\"c128\":case\"unknown\":e=Float32Array;break;case\"f64\":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType=\"f32\",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return\"f32\";let e=t.toLowerCase();return[\"u1\",\"u2\",\"u4\"].includes(e)?e=\"u8\":[\"unknown\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"].includes(e)||(e=\"f32\"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new e(\"pixelblock:invalid-or-missing-pixels\",\"add data requires valid pixels array that has same length defined by pixel block width * height\");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new a)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case\"s8\":case\"s16\":case\"u16\":case\"s32\":case\"u32\":case\"f32\":case\"f64\":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>u(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let s=0;s<t.length;s++)t[s]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||\"f64\"===t||\"f32\"===t||!this.pixels)return;const[e,s]=h(t),i=this.pixels,l=this.width*this.height,r=i.length;let o,n,a;const c=[];for(let h=0;h<r;h++){a=p.createEmptyBand(t,l),o=i[h];for(let t=0;t<l;t++)n=o[t],a[t]=n>s?s:n<e?e:n;c.push(a)}this.pixels=c,this.pixelType=t}extractBands(t){const{pixels:e,statistics:s}=this;if(null==t||0===t.length||!e||0===e.length)return this;const i=e.length,l=t.some((t=>t>=e.length)),r=i===t.length&&!t.some(((t,e)=>t!==e));if(l||r)return this;const o=this.bandMasks?.length===i?t.map((t=>this.bandMasks[t])):void 0;let{mask:n,validPixelCount:a}=this;const{width:h,height:c}=this;return o?.length&&(n=p.combineBandMasks(o),a=n.filter((t=>!!t)).length),new p({pixelType:this.pixelType,width:h,height:c,mask:n,bandMasks:o,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:s&&t.map((t=>s[t]))})}clone(){const t=new p({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const s=p.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice():new s(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=i(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:s,premultiplyAlpha:i,pixels:r}=this;if(!t||!r?.length)return void l.getLogger(this).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let o,n,a,h;o=n=a=r[0],r.length>=3?(n=r[1],a=r[2]):2===r.length&&(n=r[1]);const p=new Uint32Array(t),c=this.width*this.height;if(o.length===c)if(null!=e&&e.length===c)if(s)for(h=0;h<c;h++){const t=e[h];if(t){const e=t/255;p[h]=i?t<<24|a[h]*e<<16|n[h]*e<<8|o[h]*e:t<<24|a[h]<<16|n[h]<<8|o[h]}}else for(h=0;h<c;h++)e[h]&&(p[h]=255<<24|a[h]<<16|n[h]<<8|o[h]);else for(h=0;h<c;h++)p[h]=255<<24|a[h]<<16|n[h]<<8|o[h];else l.getLogger(this).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\")}_fillFromNon8Bit(t){const{pixels:e,mask:s,statistics:i}=this;if(!t||!e?.length)return void l.getLogger(this).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");const r=this.pixelType;let o=1,n=0,a=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(n=Math.min(n,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;a=Math.max(a,e)}o=255/a}else{let t=255;\"s8\"===r?(n=-128,t=127):\"u16\"===r?t=65535:\"s16\"===r?(n=-32768,t=32767):\"u32\"===r?t=4294967295:\"s32\"===r?(n=-2147483648,t=2147483647):\"f32\"===r?(n=-34e38,t=34e38):\"f64\"===r&&(n=-Number.MAX_VALUE,t=Number.MAX_VALUE),o=255/(t-n)}const h=new Uint32Array(t),p=this.width*this.height;let c,u,g,f,m;if(c=u=g=e[0],c.length!==p)return l.getLogger(this).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");if(e.length>=2)if(u=e[1],e.length>=3&&(g=e[2]),null!=s&&s.length===p)for(f=0;f<p;f++)s[f]&&(h[f]=255<<24|(g[f]-n)*o<<16|(u[f]-n)*o<<8|(c[f]-n)*o);else for(f=0;f<p;f++)h[f]=255<<24|(g[f]-n)*o<<16|(u[f]-n)*o<<8|(c[f]-n)*o;else if(null!=s&&s.length===p)for(f=0;f<p;f++)m=(c[f]-n)*o,s[f]&&(h[f]=255<<24|m<<16|m<<8|m);else for(f=0;f<p;f++)m=(c[f]-n)*o,h[f]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:s}=this;if(!t||!e?.length)return l.getLogger(this).error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let i,r,o,n;i=r=o=e[0],e.length>=3?(r=e[1],o=e[2]):2===e.length&&(r=e[1]);const a=this.width*this.height;if(i.length!==a)return l.getLogger(this).error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");let h=0;if(null!=s&&s.length===a)for(n=0;n<a;n++)t[h++]=i[n],t[h++]=r[n],t[h++]=o[n],t[h++]=1&s[n];else for(n=0;n<a;n++)t[h++]=i[n],t[h++]=r[n],t[h++]=o[n],t[h++]=1}};function u(t,e){let s=1/0,i=-1/0;const l=t.length;let r,o=0;if(null!=e)for(r=0;r<l;r++)e[r]&&(o=t[r],s=o<s?o:s,i=o>i?o:i);else for(r=0;r<l;r++)o=t[r],s=o<s?o:s,i=o>i?o:i;return new a(s,i)}t([r({json:{write:!0}})],c.prototype,\"width\",void 0),t([r({json:{write:!0}})],c.prototype,\"height\",void 0),t([r({json:{write:!0}})],c.prototype,\"pixelType\",void 0),t([o(\"pixelType\")],c.prototype,\"castPixelType\",null),t([r({json:{write:!0}})],c.prototype,\"validPixelCount\",void 0),t([r({json:{write:!0}})],c.prototype,\"mask\",void 0),t([r({json:{write:!0}})],c.prototype,\"maskIsAlpha\",void 0),t([r({json:{write:!0}})],c.prototype,\"pixels\",void 0),t([r()],c.prototype,\"premultiplyAlpha\",void 0),t([r({json:{write:!0}})],c.prototype,\"statistics\",void 0),t([r({json:{write:!0}})],c.prototype,\"depthCount\",void 0),t([r({json:{write:!0}})],c.prototype,\"noDataValues\",void 0),t([r({json:{write:!0}})],c.prototype,\"bandMasks\",void 0),c=p=t([n(\"esri.layers.support.PixelBlock\")],c);const g=c;export{g as default};\n"],"names":["l","constructor","arguments","length","undefined","a","t","this","minValue","maxValue","noDataValue","p","c","s","createEmptyBand","e","getPixelArrayConstructor","combineBandMasks","Uint8Array","fill","i","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","super","width","height","pixelType","validPixelCount","mask","maskIsAlpha","premultiplyAlpha","statistics","depthCount","castPixelType","toLowerCase","includes","getPlaneCount","pixels","addData","push","getAsRGBA","ArrayBuffer","_fillFromNon8Bit","_fillFrom8Bit","Uint8ClampedArray","getAsRGBAFloat","_fillFrom32Bit","updateStatistics","map","r","o","u","clamp","h","n","extractBands","some","bandMasks","filter","clone","slice","getLogger","error","Math","min","max","Number","MAX_VALUE","g","f","m","json","write","prototype"],"sourceRoot":""}