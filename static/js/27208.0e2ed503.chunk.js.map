{"version":3,"file":"static/js/27208.0e2ed503.chunk.js","mappings":"2NAIiM,MAAMA,EAAE,IAAIC,IAAI,CAAC,OAAO,WAAWC,EAAE,CAAC,QAAQ,SAAS,OAAO,QAAQ,UAAU,WAAW,SAASC,EAAEC,EAAEC,EAAEH,EAAEC,GAAG,MAAMG,EAAE,GAAG,IAAIC,EAAE,KAAK,MAAM,CAACF,EAAEH,GAAGM,OAAOC,IAAI,MAAMJ,GAAEK,EAAAA,EAAAA,IAAEN,EAAEK,GAAG,OAAOJ,GAAGC,EAAEK,KAAKN,KAAKA,CAAC,IAAIC,EAAE,KAAKA,EAAE,GAAG,UAAUA,EAAE,GAAGD,IAAIH,IAAIK,EAAE,IAAIE,EAAAA,QAAEN,EAAE,6DAA6DI,EAAE,IAAIE,EAAAA,QAAEN,EAAE,+DAA+DH,EAAEY,IAAIN,EAAE,KAAKN,EAAEY,IAAIN,EAAE,MAAMC,EAAE,IAAIE,EAAAA,QAAEN,EAAE,gEAAgEI,EAAE,IAAIE,EAAAA,QAAEN,EAAE,yIAAyII,CAAC,CAA4F,SAASA,EAAEE,EAAEC,EAAEN,GAAG,IAAIC,EAAE,OAAOA,EAAE,WAAWK,EAAED,EAAE,SAASC,EAAED,EAAEI,UAAU,aAAaJ,EAAE,KAAK,OAAOL,EAAE,MAAMC,EAAE,GAAG,CAAC,SAASS,EAAEL,EAAEL,EAAEC,EAAEL,GAAG,MAAME,GAAEQ,EAAAA,EAAAA,IAAED,EAAEL,GAAGD,GAAEO,EAAAA,EAAAA,IAAED,EAAEJ,GAAGS,EAAE,CAACP,EAAEH,EAAEF,EAAE,aAAaK,EAAEF,EAAEF,EAAE,WAAW,2LAA2LH,qCAAqCe,EAAE,GAAG,MAAM,UAAUb,GAAGa,EAAEJ,KAAKP,GAAG,UAAUD,GAAGY,EAAEJ,KAAKN,GAApjB,SAAWI,GAAG,MAAMC,EAAED,EAAEO,KAAKP,GAAG,aAAaA,SAAS,OAAOC,EAAEO,OAAOP,EAAEQ,KAAK,MAAM,KAAK,EAAE,CAA6dZ,CAAES,GAAGD,EAAEI,KAAK,KAAK,CAAC,SAASH,EAAEN,GAAG,MAAMU,MAAMT,EAAEU,UAAUpB,EAAEqB,QAAQnB,GAAGO,EAAEN,GAAEE,EAAAA,EAAAA,IAAEK,GAAGJ,EAAEG,EAAEa,MAAM,OAAOf,GAAEH,EAAAA,EAAAA,IAAED,EAAEH,EAAEE,EAAEI,GAAG,MAAM,CAACiB,gBAAgBT,EAAEX,EAAEH,EAAEE,EAAEI,GAAGkB,gBAAgBjB,EAAEkB,eAAelB,EAAE,C","sources":["../node_modules/@arcgis/core/smartMapping/statistics/support/ageUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import{getDateType as t,getDateDiffSQL as n}from\"../../support/utils.js\";import{createLayerAdapter as r}from\"../../support/adapters/support/layerUtils.js\";const a=new Set([\"date\",\"number\"]),i=[\"years\",\"months\",\"days\",\"hours\",\"minutes\",\"seconds\"];function s(n,r,i,s){const o=[];let m=null;return[r,i].every((e=>{const r=t(n,e);return r&&o.push(r),!!r}))?o[0]===o[1]?\"field\"===o[0]?r===i&&(m=new e(s,\"'startTime' and 'endTime' parameters cannot be identical\")):m=new e(s,\"Invalid combination of 'startTime' and 'endTime' parameters\"):a.has(o[0])&&a.has(o[1])&&(m=new e(s,\"Invalid combination of 'startTime' and 'endTime' parameters\")):m=new e(s,\"'startTime' and 'endTime' parameters must be one of these values: a date object, unix epoch time, name of a valid date field or <now>\"),m}function o(e){const t=e.map((e=>`$feature[\"${e}\"];`));return t.length?t.join(\"\\n\")+\"\\n\":\"\"}function m(e,t,n){let r;return r=\"number\"===t?e:\"date\"===t?e.getTime():'$feature[\"'+e+'\"]',\"var \"+n+\" = \"+r+\";\"}function u(e,n,r,a){const i=t(e,n),s=t(e,r),u=[m(n,i,\"startTime\"),m(r,s,\"endTime\"),`var retVal = null;\\n\\n    if (startTime != null && endTime != null) {\\n      startTime = Date(startTime);\\n      endTime = Date(endTime);\\n      retVal = DateDiff(endTime, startTime, \"${a}\");\\n    }\\n\\n    return retVal;`],d=[];return\"field\"===i&&d.push(n),\"field\"===s&&d.push(r),o(d)+u.join(\"\\n\")}function d(e){const{layer:t,startTime:a,endTime:i}=e,s=r(t),o=e.unit||\"days\",m=n(s,a,i,o);return{valueExpression:u(s,a,i,o),statisticsQuery:m,histogramQuery:m}}export{d as getAgeExpressions,i as supportedAgeUnits,s as verifyDates};\n"],"names":["a","Set","i","s","n","r","o","m","every","e","t","push","has","getTime","u","d","map","length","join","layer","startTime","endTime","unit","valueExpression","statisticsQuery","histogramQuery"],"sourceRoot":""}