"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[78018,91720],{4955:(e,t,i)=>{function s(e,t){return t?"xoffset"in t&&t.xoffset?Math.max(e,Math.abs(t.xoffset)):"yoffset"in t&&t.yoffset?Math.max(e,Math.abs(t.yoffset||0)):e:e}function n(e,t){return"number"==typeof e?e:e?.stops?.length?function(e){let t=0,i=0;for(let s=0;s<e.length;s++){const n=e[s].size;"number"==typeof n&&(t+=n,i++)}return t/i}(e.stops):t}function a(e,t){if(!t)return e;const i=t.filter((e=>"size"===e.type)).map((t=>{const{maxSize:i,minSize:s}=t;return(n(i,e)+n(s,e))/2}));let s=0;const a=i.length;if(0===a)return e;for(let n=0;n<a;n++)s+=i[n];const r=Math.floor(s/a);return Math.max(r,e)}function r(e){const t=e?.renderer,i=e?.pointerType,n="touch"===i?9:6;if(!t)return n;const r="visualVariables"in t?a(n,t.visualVariables):n;if("simple"===t.type)return s(r,t.symbol);if("unique-value"===t.type){let e=r;return t.uniqueValueInfos?.forEach((t=>{e=s(e,t.symbol)})),e}if("class-breaks"===t.type){let e=r;return t.classBreakInfos.forEach((t=>{e=s(e,t.symbol)})),e}return"dot-density"===t.type||t.type,r}i.d(t,{o:()=>r})},22579:(e,t,i)=>{i.d(t,{T:()=>n});var s=i(76931);function n(e){let t=0,i=0,n=0;return e?("cim"===e.type&&e.data.symbol&&"symbolLayers"in e.data.symbol&&e.data.symbol.symbolLayers&&e.data.symbol.symbolLayers.map((e=>{"CIMVectorMarker"===e.type&&e.anchorPoint&&(Math.abs(e.anchorPoint.x)>t&&(t=e.anchorPoint.x),Math.abs(e.anchorPoint.y)>i&&(i=e.anchorPoint.y),null!=e.size&&e.size>n&&(n=e.size))})),t=(0,s.Lz)(t),i=(0,s.Lz)(i),n=(0,s.Lz)(n),{offsetX:t,offsetY:i,size:n}):{offsetX:t,offsetY:i,size:n}}},55754:(e,t,i)=>{i.d(t,{V:()=>r,t:()=>o});var s=i(31633),n=i(76797),a=i(4955);function r(e,t,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new n.default,r=0;if("2d"===i.type)r=t*(i.resolution??0);else if("3d"===i.type){const n=i.overlayPixelSizeInMapUnits(e),a=i.basemapSpatialReference;r=null==a||a.equals(i.spatialReference)?t*n:(0,s.GA)(a)/(0,s.GA)(i.spatialReference)}const o=e.x-r,l=e.y-r,h=e.x+r,c=e.y+r,{spatialReference:p}=i;return a.xmin=Math.min(o,h),a.ymin=Math.min(l,c),a.xmax=Math.max(o,h),a.ymax=Math.max(l,c),a.spatialReference=p,a}function o(e,t,i){const s=i.toMap(e);return null!=s&&r(s,(0,a.o)(),i,l).intersects(t)}const l=new n.default},78018:(e,t,i)=>{i.r(t),i.d(t,{default:()=>N});var s=i(35143),n=i(30726),a=i(68134),r=i(31633),o=i(46053),l=(i(81806),i(76460),i(47249),i(85842)),h=i(9624),c=i(16159),p=i(64344),u=i(83973),d=i(39356),m=(i(11265),i(59784)),y=i(54901),g=i(96820),_=i(19451),f=i(63391),v=i(19247),b=i(23701),w=i(13312),M=i(7137),S=i(63733),L=i(89465),C=i(61425),x=i(76940),Z=i(86659),R=i(64465),z=i(53181),A=i(48280),D=i(89238),G=i(17046),O=i(91720),k=i(56829),P=i(974),I=i(59833),E=i(13284),T=i(61237),H=i(70330),U=i(63860),V=i(38042);const W=1e5;let j=class extends k.g{constructor(e){super(e),this._measurementLayer=new S.default({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new S.default({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new S.default({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new _.U,this._vertices=[],this._drawActive=!1,this.measurement=null,this.measurementLabel=null}initialize(){(0,U.ud)("esri/core/t9n/Units").then((e=>{this.messages=e}));const e=this.view;this._draw=new A.default({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this.addHandles([(0,V.oQ)((async()=>{this.messages=await(0,U.ud)("esri/core/t9n/Units")})),(0,a.watch)((()=>[this.unit,this.messages]),(()=>{this._updatePolylines()}),a.initial),(0,a.watch)((()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor]),(()=>{if(!this._vertices.length)return;const e=this._vertices.map((e=>{let{coord:t}=e;return t}));for(const{handle:t}of this._vertices)t.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)}))]),(0,H.BY)(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=(0,n.pR)(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=(0,n.pR)(this._measurementLayer),this._manipulatorLayer=(0,n.pR)(this._manipulatorLayer),this._snappingLayer=(0,n.pR)(this._snappingLayer),this._updatingHandles=(0,n.pR)(this._updatingHandles),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this.snappingManager.options}get updating(){return this._updatingHandles.updating||this.snappingManager.updating}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}_getSnappingContext(e){return new E.e({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new I.p(new P.ZE("point",(0,D.BV)(!1,!1,this.view.spatialReference)),R.RT.Local),visualizer:new z.J(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const{snappingManager:e}=this,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),t.on("draw-complete",(()=>{this._stopSketch()}))}_stopSketch(){this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let o=this._vertices.length;o<e.length;o++){const[i,s]=e[o],n=new v.default({x:i,y:s,spatialReference:t}),a=B(n,this.view,this._manipulatorLayer);this.manipulators.add(a);const r=I.p.fromGeometry(n,R.RT.Local),l=[r.on("vertex-update",(e=>{const t=e.vertices.at(0);t&&(this._vertices[o].coord=[t.pos[0],t.pos[1]],this._updatePolylines())})),(0,G.Xt)(a,((e,t,i,s)=>{const n=this._getSnappingContext(s),{snappingManager:a}=this,o=this._updatingHandles,{snappingStep:l}=(0,T.L)({snappingContext:n,snappingManager:a,updatingHandles:o});t.next((0,G.y$)(this.view)).next((t=>{if("start"===t.action){const i=new v.default(t.mapStart);e.graphic.geometry=i,r.trySetGeometry(i)}return t})).next(...l).next((0,G.Wp)({operations:r})).next((()=>{e.graphic.geometry=r.data.geometry}))}))];this._vertices.push({manipulator:a,coord:[i,s],handle:(0,y.vE)(l)})}const i=this._vertices.length-1,s=this._vertices[i],[n,a]=e[i];s.coord[0]===n&&s.coord[1]===a||(s.coord=[n,a],s.manipulator.graphic.geometry=new v.default({x:n,y:a,spatialReference:t}));const r=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=null==r||t!==r})),this._updatePolylines()}_updatePolylines(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=this._vertices.map((e=>{let{coord:t}=e;return t})),{measurement:t,drawing:i,original:s}=function(e,t){const i=new b.default({paths:[e],spatialReference:t});let s,n;if(t.isGeographic)if((0,M.isSupported)(t))s=(0,M.geodesicLengths)([i],"meters")[0],n=(0,M.geodesicDensify)(i,W);else{const e=(0,h.project)(i,w.default.WGS84),a=(0,M.geodesicDensify)(e,W);s=(0,M.geodesicLengths)([e],"meters")[0],n=(0,h.project)(a,t)}else t.isWebMercator?(s=(0,f.geodesicLength)(i,"meters"),n=(0,f.geodesicDensify)(i,W,"meters")):(s=(0,f.planarLength)(i,"meters"),n=i);return{measurement:{geometry:n,length:s},original:i,drawing:n}}(e,this.view.spatialReference);this._set("measurement",t);const n=function(e,t,i){if(!t||!e)return"";switch(i){case"metric":return(0,g.Ee)(e,t.length,"meters");case"imperial":return(0,g.tr)(e,t.length,"meters");default:return(0,g.zJ)(e,(0,r.oU)(t.length,"meters",i),i)}}(this.messages,t,this.unit);let a,o;this._set("measurementLabel",n);const{graphics:l}=this._measurementLayer,c=2===l.length,{effectiveTheme:p}=this.view;c?(a=l.at(0),o=l.at(1)):(a=new d.default({symbol:new L.default({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:(0,m.bJ)(p.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:p.accentColor.toArray()}]}}})}),o=new d.default({symbol:new Z.default({color:p.textColor,haloColor:(0,m._L)((0,m.bJ)(p.textColor,m.pW.Low),.5),haloSize:2,font:new C.default({size:14,family:"sans-serif"})})}),l.removeAll(),l.addMany([a,o])),a.geometry=i,o.geometry=s.extent?.center,o.symbol.text=n}};function B(e,t,i){const s=(0,m._L)(t.effectiveTheme.accentColor,.5),n={type:"simple-line",width:0},a=new x.default({style:"circle",color:s,size:8,outline:n}),r=new x.default({style:"circle",color:s,size:12,outline:n}),o=new d.default({geometry:e,symbol:a});return new O.l({view:t,layer:i,graphic:o,focusedSymbol:r})}(0,s._)([(0,o.MZ)()],j.prototype,"_drawActive",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],j.prototype,"cursor",null),(0,s._)([(0,o.MZ)({value:!0})],j.prototype,"editable",null),(0,s._)([(0,o.MZ)({readOnly:!0})],j.prototype,"measurement",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],j.prototype,"measurementLabel",void 0),(0,s._)([(0,o.MZ)()],j.prototype,"messages",void 0),(0,s._)([(0,o.MZ)({constructOnly:!0})],j.prototype,"snappingManager",void 0),(0,s._)([(0,o.MZ)()],j.prototype,"unit",void 0),(0,s._)([(0,o.MZ)()],j.prototype,"updating",null),(0,s._)([(0,o.MZ)({constructOnly:!0})],j.prototype,"view",void 0),j=(0,s._)([(0,l.$)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],j);var q=i(69124);let J=class extends q.j{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views.",this._snappingManager=null,this.snappingOptions=new u.default}initialize(){this.addHandles([(0,a.watch)((()=>this.view?.spatialReference),(()=>this.clear())),(0,a.watch)((()=>this.unit),(e=>{this.tool&&(this.tool.unit=e)}),a.initial),(0,a.watch)((()=>this.view),(e=>{this._snappingManager=(0,n.pR)(this._snappingManager),e&&(this._snappingManager=new p.g({view:e,options:this.snappingOptions}))}),a.syncAndInitial),(0,a.watch)((()=>this.snappingOptions),(e=>{this._snappingManager&&e&&(this._snappingManager.options=e)}))])}destroy(){this._snappingManager=(0,n.pR)(this._snappingManager)}get measurement(){return this.tool?.measurement??null}get measurementLabel(){return this.tool?.measurementLabel??null}get state(){return this.disabled||null==this.view||(e=this.view?.spatialReference,null==e)?"disabled":null!=this.tool&&this.measurement?this.tool.active?"measuring":"measured":"ready";var e}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return r.GB}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;null!=e&&(await(0,a.whenOnce)((()=>e.ready)),function(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:s}=e;return t&&!s&&!(0,M.isSupported)(e)||!t&&!i}(e.spatialReference)&&await(0,h.load)()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new j({snappingManager:this._snappingManager,unit:this.unit,view:this.view,visible:this.visible})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return null!=e&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(null==e)return[];const t=e.filter((e=>r.GB.includes(e)));return 0===t.length?r.GB.slice():t}};(0,s._)([(0,o.MZ)()],J.prototype,"_snappingManager",void 0),(0,s._)([(0,o.MZ)(c.q)],J.prototype,"defaultUnit",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],J.prototype,"measurement",null),(0,s._)([(0,o.MZ)({readOnly:!0})],J.prototype,"measurementLabel",null),(0,s._)([(0,o.MZ)({type:u.default,nonNullable:!0})],J.prototype,"snappingOptions",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],J.prototype,"state",null),(0,s._)([(0,o.MZ)({type:String})],J.prototype,"unit",null),(0,s._)([(0,o.MZ)({type:[String]})],J.prototype,"unitOptions",null),J=(0,s._)([(0,l.$)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],J);const N=J},91720:(e,t,i)=>{i.d(t,{l:()=>b});var s=i(35143),n=i(91967),a=i(54099),r=i(68134),o=i(76931),l=i(46053),h=(i(81806),i(76460),i(47249),i(85842)),c=i(19555),p=i(20664),u=i(9392),d=i(9624),m=i(64232),y=i(12482),g=i(84202),_=i(731),f=i(22579),v=i(55754);let b=class extends n.default{set graphic(e){this._circleCollisionCache=null,this._originalSymbol=e.symbol,this._set("graphic",e),this.attachSymbolChanged()}get elevationInfo(){const{layer:e}=this.graphic,t=e&&"elevationInfo"in e?e.elevationInfo:null,i=(0,y.ky)(this.graphic),s=t?t.offset:0;return new _.A({mode:i,offset:s})}set focusedSymbol(e){e!==this._get("focusedSymbol")&&(this._set("focusedSymbol",e),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(e){e!==this._get("grabbing")&&(this._set("grabbing",e),this._updateGraphicSymbol())}set hovering(e){e!==this._get("hovering")&&(this._set("hovering",e),this._updateGraphicSymbol())}set selected(e){e!==this._get("selected")&&(this._set("selected",e),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:e?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}constructor(e){super(e),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.consumesClicks=!0,this.events=new a.A.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(e){const t=this.graphic;if(!1===t.visible)return null;const i=t.geometry;if(null==i)return null;const s=this._get("focusedSymbol"),n=null!=s?s:t.symbol;return"2d"===this.view.type?this._intersectDistance2D(this.view,e,i,n):this._intersectDistance3D(this.view,e,t)}attach(){this.attachSymbolChanged(),null!=this.layer&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),null!=this.layer&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=(0,r.watch)((()=>this.graphic?.symbol),(e=>{null!=e&&e!==this.focusedSymbol&&e!==this._originalSymbol&&(this._originalSymbol=e,this._focused&&null!=this.focusedSymbol&&(this.graphic.symbol=this.focusedSymbol))}),r.sync)}detachSymbolChanged(){null!=this._graphicSymbolChangedHandle&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}onElevationChange(){}onViewChange(){}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&null!=this.focusedSymbol?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(e,t,i,s){if(null==(s=s||(0,g.SF)(i)))return null;let n=this._circleCollisionCache;if("point"===i.type&&"cim"===s.type&&"CIMPointSymbol"===s.data.symbol?.type&&s.data.symbol.symbolLayers){const{offsetX:n,offsetY:a,size:r}=(0,f.T)(s),l=(0,o.WA)(t,M),h=r/2,p=e.toScreen(i),u=p.x+n,d=p.y+a;return(0,c.hG)(l,[u,d])<h*h?1:null}if("point"!==i.type||"simple-marker"!==s.type)return(0,v.t)(t,i,e)?1:null;if(null==n||!n.originalPoint.equals(i)){const t=i,a=e.spatialReference;if((0,d.canProjectWithoutEngine)(t.spatialReference,a)){const e=(0,d.project)(t,a);n={originalPoint:t.clone(),mapPoint:e,radiusPx:(0,o.Lz)(s.size)},this._circleCollisionCache=n}}if(null!=n){const i=(0,o.WA)(t,M),a=e.toScreen?.(n.mapPoint);if(!a)return null;const r=n.radiusPx,l=a.x+(0,o.Lz)(s.xoffset),h=a.y-(0,o.Lz)(s.yoffset);return(0,c.hG)(i,[l,h])<r*r?1:null}return null}_intersectDistance3D(e,t,i){const s=e.toMap(t,{include:[i]});return s&&(0,m.g)(s,w,e.renderSpatialReference)?(0,p.j)(w,e.state.camera.eye):null}};(0,s._)([(0,l.MZ)({constructOnly:!0,nonNullable:!0})],b.prototype,"graphic",null),(0,s._)([(0,l.MZ)()],b.prototype,"elevationInfo",null),(0,s._)([(0,l.MZ)({constructOnly:!0,nonNullable:!0})],b.prototype,"view",void 0),(0,s._)([(0,l.MZ)({value:null})],b.prototype,"focusedSymbol",null),(0,s._)([(0,l.MZ)({constructOnly:!0})],b.prototype,"layer",void 0),(0,s._)([(0,l.MZ)()],b.prototype,"interactive",void 0),(0,s._)([(0,l.MZ)()],b.prototype,"selectable",void 0),(0,s._)([(0,l.MZ)()],b.prototype,"grabbable",void 0),(0,s._)([(0,l.MZ)({value:!1})],b.prototype,"grabbing",null),(0,s._)([(0,l.MZ)()],b.prototype,"dragging",void 0),(0,s._)([(0,l.MZ)()],b.prototype,"hovering",null),(0,s._)([(0,l.MZ)({value:!1})],b.prototype,"selected",null),(0,s._)([(0,l.MZ)()],b.prototype,"cursor",void 0),b=(0,s._)([(0,h.$)("esri.views.interactive.GraphicManipulator")],b);const w=(0,u.vt)(),M=(0,o.gs)()}}]);
//# sourceMappingURL=78018.14043f22.chunk.js.map