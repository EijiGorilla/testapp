"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[75691],{75691:(t,r,e)=>{e.r(r),e.d(r,{default:()=>h});var i=e(35143),o=e(91967),a=e(50076),s=e(76460),l=e(68134),n=e(46053),d=(e(81806),e(47249),e(85842)),u=e(19451);let c=class extends o.default{constructor(t){super(t),this._updatingHandlesLoad=new u.U,this._updatingHandlesExecute=new u.U}initialize(){this.addHandles([(0,l.watch)((()=>[this.utilityNetwork,this.view]),(()=>{this._setUp()}),{initial:!0})])}destroy(){this._updatingHandlesLoad.destroy(),this._updatingHandlesExecute.destroy()}get executionError(){return this._executionError}get loadError(){return this._loadError}get state(){return this._updatingHandlesLoad.updating?"loading":this.loadError?"disabled":this._updatingHandlesExecute.updating?"executing":this.executionError?"failed":"ready"}get utilityNetwork(){return this.utilityNetwork}set utilityNetwork(t){this._get("utilityNetwork")!==t&&this._set("utilityNetwork",t)}get view(){return this.view}set view(t){this._get("view")!==t&&this._set("view",t)}async executeNamedTraceConfiguration(t){return this._updatingHandlesExecute.addPromise(this._executeNamedTraceConfiguration(t))}async executeTraceConfiguration(t){return this._updatingHandlesExecute.addPromise(this._executeTraceConfiguration(t))}async _executeNamedTraceConfiguration(t){if("disabled"===this.state)throw this._logError("trace-analysis-view-model:load-error",this.loadError),new a.default("trace-analysis-view-model:load-error",this.loadError);return this._executionError=null,await this.utilityNetwork.trace(t).catch((t=>{throw this._executionError="trace-error",this._logError("trace-analysis-view-model:execution-error",this._executionError),t}))}async _executeTraceConfiguration(t){if("disabled"===this.state)throw this._logError("trace-analysis-view-model:load-error",this.loadError),new a.default("trace-analysis-view-model:load-error",this.loadError);return this._executionError=null,await this.utilityNetwork.trace(t).catch((t=>{throw this._executionError="trace-error",this._logError("trace-analysis-view-model:execution-error",this._executionError),t}))}_logError(t,r){s.A.getLogger(this).error(new a.default(t,r))}async _setUp(){const{utilityNetwork:t,view:r}=this;this._updatingHandlesLoad.addPromise((async()=>(this._loadError=null,r?"2d"!==r.type?(this._loadError="sceneView-not-supported",void this._logError("trace-analysis-view-model:load-error",this._loadError)):t?void 0:(this._loadError="no-utility-network",void this._logError("trace-analysis-view-model:load-error",this._loadError)):(this._loadError="no-view",void this._logError("trace-analysis-view-model:load-error",this._loadError))))())}};(0,i._)([(0,n.MZ)()],c.prototype,"_executionError",void 0),(0,i._)([(0,n.MZ)()],c.prototype,"_loadError",void 0),(0,i._)([(0,n.MZ)()],c.prototype,"executionError",null),(0,i._)([(0,n.MZ)()],c.prototype,"loadError",null),(0,i._)([(0,n.MZ)({readOnly:!0})],c.prototype,"state",null),(0,i._)([(0,n.MZ)()],c.prototype,"utilityNetwork",null),(0,i._)([(0,n.MZ)()],c.prototype,"view",null),c=(0,i._)([(0,d.$)("esri.widgets.UtilityNetworkTraceAnalysis.UtilityNetworkTraceAnalysisViewModel")],c);const h=c}}]);
//# sourceMappingURL=75691.d02c021a.chunk.js.map