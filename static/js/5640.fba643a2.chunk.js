"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[3428,5640,48630,50410,82615,97200],{3428:(t,e,n)=>{n.r(e),n.d(e,{default:()=>c});var o=n(35143),i=n(69539),a=n(42553),s=n(46053),r=n(40565),l=(n(81806),n(47249),n(85842));let u=class extends a.A{constructor(){super(...arguments),this.value=null,this.label=null,this.color=null}};(0,o._)([(0,s.MZ)({type:Number,json:{write:{isRequired:!0}}})],u.prototype,"value",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],u.prototype,"label",void 0),(0,o._)([(0,s.MZ)({type:i.default,json:{type:[r.jz],write:{isRequired:!0}}})],u.prototype,"color",void 0),u=(0,o._)([(0,l.$)("esri.renderers.support.ColormapInfo")],u);const c=u},48630:(t,e,n)=>{n.r(e),n.d(e,{default:()=>y});var o,i=n(35143),a=n(63241),s=n(42553),r=n(53084),l=n(76460),u=n(46053),c=(n(81806),n(6409)),m=n(28379),p=n(85842),d=n(17707),f=n(74916),h=n(22471);let g=o=class extends s.A{constructor(t){super(t),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.histograms=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(t){if(t)return(0,h.r)(t)}get statistics(){return this._get("statistics")}set statistics(t){(0,a.Lx)(l.A.getLogger(this),"statistics",{replacement:"customStatistics",version:"4.31",warnOnce:!0}),this._set("statistics",t)}get customStatistics(){const t=this.statistics;return t&&Array.isArray(t[0])?t.map((t=>({min:t[0],max:t[1],avg:t[2],stddev:t[3]}))):t}set customStatistics(t){this._set("statistics",t?.map((t=>[t.min,t.max,t.avg??0,t.stddev??1])))}readCustomStatistics(t){return t?.map((t=>({min:t[0],max:t[1],avg:t[2],stddev:t[3]})))}writeCustomStatistics(t,e,n){t?.length&&(e[n]=t.map((t=>[t.min,t.max,t.avg??0,t.stddev??1])))}readStretchType(t,e){let n=e.stretchType;return"number"==typeof n&&(n=f.x[n]),f.u.read(n)}clone(){const t=new o({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,gamma:(0,r.clone)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:(0,r.clone)(this.colorRamp),histograms:(0,r.clone)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment});return t._set("statistics",(0,r.clone)(this.statistics)),t}};(0,i._)([(0,u.MZ)({types:h.g,json:{write:!0}})],g.prototype,"colorRamp",void 0),(0,i._)([(0,m.w)("colorRamp")],g.prototype,"readColorRamp",null),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"computeGamma",void 0),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],g.prototype,"dynamicRangeAdjustment",void 0),(0,i._)([(0,u.MZ)({type:[Number],json:{write:!0}})],g.prototype,"gamma",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],g.prototype,"maxPercent",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],g.prototype,"minPercent",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],g.prototype,"numberOfStandardDeviations",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],g.prototype,"outputMax",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],g.prototype,"outputMin",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],g.prototype,"sigmoidStrengthLevel",void 0),(0,i._)([(0,u.MZ)({})],g.prototype,"statistics",null),(0,i._)([(0,u.MZ)()],g.prototype,"histograms",void 0),(0,i._)([(0,u.MZ)({json:{type:[[Number]],name:"statistics",write:!0}})],g.prototype,"customStatistics",null),(0,i._)([(0,m.w)("customStatistics")],g.prototype,"readCustomStatistics",null),(0,i._)([(0,d.K)("customStatistics")],g.prototype,"writeCustomStatistics",null),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"useGamma",void 0),(0,i._)([(0,u.MZ)({type:f.u.apiValues,json:{type:f.u.jsonValues,write:f.u.write}})],g.prototype,"stretchType",void 0),(0,i._)([(0,m.w)("stretchType",["stretchType"])],g.prototype,"readStretchType",null),(0,i._)([(0,c.e)({rasterStretch:"raster-stretch"})],g.prototype,"type",void 0),g=o=(0,i._)([(0,p.$)("esri.renderers.RasterStretchRenderer")],g);const y=g},50410:(t,e,n)=>{n.r(e),n.d(e,{default:()=>p});var o,i=n(35143),a=n(42553),s=n(46053),r=(n(81806),n(76460),n(47249),n(6409)),l=n(85842),u=n(3428),c=n(93187);let m=o=class extends a.A{constructor(t){super(t),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(t,e){if(!t)return null;const n=5===t[0].length,i=[...t].sort(((t,e)=>t[0]-e[0])).map((t=>u.default.fromJSON({value:t[0],color:n?t.slice(1,5):t.slice(1,4).concat([255]),label:e?e[t[0]]??"":t[0]})));return new o({colormapInfos:i})}static createFromColorramp(t){const e=(0,c.R8)(t);return o.createFromColormap(e)}clone(){return new o({colormapInfos:this.colormapInfos.map((t=>t.toJSON()))})}extractColormap(){return this.colormapInfos.map((t=>{let{value:e,color:n}=t;return[e,n.r,n.g,n.b,n.a>1?n.a:255*n.a&255]})).sort(((t,e)=>t[0]-e[0]))}};(0,i._)([(0,s.MZ)({type:[u.default],json:{write:{isRequired:!0}}})],m.prototype,"colormapInfos",void 0),(0,i._)([(0,r.e)({rasterColormap:"raster-colormap"}),(0,s.MZ)({json:{write:{isRequired:!0}}})],m.prototype,"type",void 0),m=o=(0,i._)([(0,l.$)("esri.renderers.RasterColormapRenderer")],m);const p=m},70816:(t,e,n)=>{function o(t){return["u8","s8"].includes(t.pixelType)&&null!=t.statistics?.[0]?.min&&null!=t.statistics[0]?.max&&1===t.bandCount}function i(t,e){const{attributeTable:n,bandCount:i}=t;return!(null!=n||!o(t))||!(null==n||i>1)&&(!e||null!=n.fields.find((t=>t.name.toLowerCase()===e.toLowerCase())))}function a(t){const{bandCount:e,dataType:n,pixelType:o}=t;return"elevation"===n||"generic"===n&&1===e&&("s16"===o||"s32"===o||"f32"===o||"f64"===o)}function s(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{bandCount:n,colormap:o,pixelType:i}=t;return 1===n&&(!!o?.length||!e&&"u8"===i)}function r(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{attributeTable:n,bandCount:o}=t;return 1===o&&(!e||null!=n||null!=t.histograms)}function l(t){const{dataType:e}=t;return"vector-uv"===e||"vector-magdir"===e}function u(t){const{dataType:e}=t;return"vector-uv"===e||"vector-magdir"===e}function c(t){return!!t?.length&&t.length<=16384}n.d(e,{FA:()=>s,QJ:()=>u,WN:()=>c,bo:()=>o,hu:()=>i,iL:()=>a,rd:()=>l,xX:()=>r})},74916:(t,e,n)=>{n.d(e,{u:()=>o,x:()=>i});const o=new(n(45802).J)({none:"none",standardDeviation:"standard-deviation",histogramEqualization:"histogram-equalization",minMax:"min-max",percentClip:"percent-clip",sigmoid:"sigmoid"}),i={0:"none",3:"standardDeviation",4:"histogramEqualization",5:"minMax",6:"percentClip",9:"sigmoid"}},78937:(t,e,n)=>{n.d(e,{$P:()=>U,I8:()=>z,Ix:()=>W,Mm:()=>O,NI:()=>N,Ny:()=>q,PD:()=>Z,VI:()=>F,ci:()=>A,dY:()=>B,fp:()=>k,iG:()=>$,m7:()=>I,sp:()=>E,tj:()=>V,un:()=>J,w6:()=>L,zd:()=>P});var o=n(69539),i=n(31633),a=n(44135),s=n(63844),r=n(97200),l=n(50410),u=n(82615),c=n(48630),m=n(84596),p=n(6745),d=n(9922),f=n(29380),h=n(93187),g=n(70816),y=n(28731),v=n(64694),b=n(43996),w=n(77718),x=n(30674),M=n(15498),C=n(63068),S=n(86875);const R=.25,_=C.default.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),T=C.default.fromJSON(h.vj[0]),j=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function z(t){return t.presetRenderers?.find((e=>{let{method:n,value:o}=e;return"raster-function-template"===n?o===t.rasterFunctionName:"variable"===n&&o===t.variableName}))}function Z(t,e){const{attributeTable:n,colormap:o}=t;if((0,g.rd)(t)){const e=B(t);if(null!=e)return e}if(e?.rasterFunctionColorRamp){const n=N(t,e);return n.colorRamp=e.rasterFunctionColorRamp,n}if(null!=o){const e=q(t);if(null!=e)return e}if(null!=n){const e=P(t);if(null!=e)return e}return N(t,e)}function k(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=["raster-stretch"];return(0,g.FA)(t,e)&&n.push("raster-colormap"),(0,g.hu)(t)&&n.push("unique-value"),(0,g.xX)(t,e)&&n.push("class-breaks"),(0,g.iL)(t)&&n.push("raster-shaded-relief"),(0,g.rd)(t)&&n.push("vector-field"),(0,g.QJ)(t)&&n.push("flow"),n}function O(t){return"Function"===t.datasetFormat&&"Colormap"===t.rasterFunction.functionName?t.rasterFunction.colorRamp:void 0}function L(t,e,n){const o=n?.toLowerCase().replace("bicubic","cubic"),i=["nearest","bilinear","cubic","majority"].find((t=>t===o));return"Map"===e?i??"bilinear":"standard-time"===t.dataType?i??"nearest":"thematic"===t.dataType||t.attributeTable||t.colormap?"nearest"===i||"majority"===i?i:"nearest":i??"bilinear"}function N(t,e){t=I(t,e?.variableName);const{bandCount:n}=t;let{bandIds:o,stretchType:i}=e||{};o?.some((t=>t>=n))&&(o=null);let a=t.statistics,s=t.histograms;n>1?(o=o?.length?o:A(t),a=null==a?null:o?.map((t=>a[t])),s=null==s?null:o?.map((t=>s[t]))):o=[0],null==i&&(i=function(t){let e="percent-clip";const{pixelType:n,dataType:o,histograms:i,statistics:a,multidimensionalInfo:s}=t,r=j.has(o)||"generic"===o&&null!=s;return"u8"!==n||"processed"!==o&&null!=i&&null!=a?"u8"===n||"elevation"===o||r?e="min-max":null!=i?e="percent-clip":null!=a&&(e="min-max"):e="none",e}(t)),e?.includeStatisticsInStretch&&("percent-clip"===i||"histogram-equalization"===i)&&t.statistics?.length&&(i="min-max");let r=!1;switch(i){case"none":r=!1;break;case"percent-clip":r=!s?.length;break;default:r=!a?.length}const{dataType:l}=t,u=1===o?.length&&j.has(l)?_:null,m=new c.default({stretchType:i,dynamicRangeAdjustment:r,colorRamp:u,outputMin:0,outputMax:255,gamma:1===o?.length?[1]:[1,1,1],useGamma:!1});return"percent-clip"===i?m.maxPercent=m.minPercent=R:"standard-deviation"===i&&(m.numberOfStandardDeviations=2),r||null==t.multidimensionalInfo&&!e?.includeStatisticsInStretch||("percent-clip"===i?m.histograms=s:"min-max"!==i&&"standard-deviation"!==i||(m.statistics=a)),m}function I(t,e){const{multidimensionalInfo:n}=t;if(!e||!n)return t;const o=n.variables.find((t=>t.name===e));if(!o)return t;if(t=t.clone(),o){const{statistics:e,histograms:n}=o;e?.length&&(t.statistics=e.map((t=>({min:t.min,max:t.max,avg:t.avg,stddev:t.stddev})))),n?.length&&(t.histograms=n)}return t}function A(t){const e=t.bandCount;if(1===e)return null;if(2===e)return[0];const{bandInfos:n}=t;let o;if(n.length===e){const{red:t,green:e,blue:i,nir:a}=function(t){const e={};for(let n=0;n<t.length;n++){const o=t[n],i=o.name.toLowerCase();if("red"===i)e.red=n;else if("green"===i)e.green=n;else if("blue"===i)e.blue=n;else if("nearinfrared"===i||"nearinfrared_1"===i||"nir"===i)e.nir=n;else if(o.maxWavelength&&o.minWavelength){const t=o.minWavelength,i=o.maxWavelength;null==e.blue&&t>=410&&t<=480&&i>=480&&i<=540?e.blue=n:null==e.green&&t>=490&&t<=560&&i>=560&&i<=610?e.green=n:null==e.red&&t>=595&&t<=670&&i>=660&&i<=730?e.red=n:null==e.nir&&t>=700&&t<=860&&i>=800&&i<=950&&(e.nir=n)}}return e}(n);null!=t&&null!=e&&null!=i?o=[t,e,i]:null!=a&&null!=t&&null!=e&&(o=[a,t,e])}return!o&&e>=3&&(o=[0,1,2]),o}function P(t,e,n,i){if(!(0,g.hu)(t,e))return null;const{attributeTable:a,statistics:s}=t,r=V(a,e),l=F(a,"red"),u=F(a,"green"),c=F(a,"blue"),p=new d.default,f=[],v=new Set,b=!!(l&&u&&c);if(null!=a)a.features.forEach((t=>{const e=t.attributes[r.name];if(!v.has(t.attributes[r.name])&&null!=e){v.add(e);const n=b&&("single"===l.type||"double"===l.type)&&("single"===u.type||"double"===u.type)&&("single"===c.type||"double"===c.type)&&!a.features.some((t=>t.attributes[l.name]>1||t.attributes[u.name]>1||t.attributes[c.name]>1))?255:1;f.push(new y.default({value:t.attributes[r.name],label:t.attributes[r.name]+"",symbol:new S.default({style:"solid",outline:null,color:new o.default(b?[t.attributes[l.name]*n,t.attributes[u.name]*n,t.attributes[c.name]*n,1]:[0,0,0,0])})}))}}));else if(s?.[0])for(let m=s[0].min;m<=s[0].max;m++)f.push(new y.default({value:m,label:m.toString(),symbol:new S.default({style:"solid",outline:null,color:new o.default([0,0,0,0])})}));if(f.sort(((t,e)=>t.value&&"string"==typeof t.value.valueOf()?0:t.value>e.value?1:-1)),!b){const t=(0,h.R8)(T,{numColors:f.length});f.forEach(((e,n)=>e.symbol.color=new o.default(t[n].slice(1,4)))),p.colorRamp=T}if(n||i){const t=n||(0,h.R8)(i,{numColors:f.length}).map((t=>t.slice(1)));f.forEach(((e,n)=>e.symbol.color=new o.default(t[n]))),p.colorRamp=i}return new m.default({field:r.name,uniqueValueInfos:f,authoringInfo:p})}function V(t,e,n){let o;return null!=t?(o=e?t.fields.find((t=>e.toLowerCase()===t.name.toLowerCase())):function(t){let e;for(let n=0;n<t.length;n++){const o=t[n].name.toLowerCase();if("string"===t[n].type){if(o.startsWith("class")){e=t[n];break}null==e&&(o.endsWith("name")||o.endsWith("type"))&&(e=t[n])}}return e}(t.fields),o||(n||(o=t.fields.find((t=>"string"===t.type))),o||(o=F(t,"value")))):o=new a.default({name:"value"}),o}function F(t,e){return null==t?null:t.fields.find((t=>t.name.toLowerCase()===e))}function q(t){if(!(0,g.FA)(t))return null;let e;const{attributeTable:n,colormap:o}=t;if(null!=n){const t=F(n,"value"),o=V(n,null,!0);"string"===o.type&&(e={},n.features.forEach((n=>{const i=n.attributes;e[i[t.name]]=o?i[o.name]:i[t.name]})))}return l.default.createFromColormap(o,e)}function E(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"traditional";if(!(0,g.iL)(t))return null;const{extent:n}=t,o=n.width*(0,i.GA)(n.spatialReference);return new u.default({hillshadeType:e,scalingType:o>5e6?"adjusted":"none"})}function W(t,e){t=I(t,e?.variableName);const{attributeTable:n}=t;if(!(0,g.xX)(t))return null;const o=null!=t.histograms?t.histograms[0]:null,i=null!=e?.numClasses&&isFinite(e?.numClasses)?e.numClasses:5,a=new d.default({classificationMethod:e?.classificationMethod,colorRamp:e?.colorRamp});let r=e?.field||"value";const l=[],u=[],c=null!=n,m=c&&n.fields.find((t=>"count"===t.name.toLowerCase())),p=c?n.fields.find((t=>t.name.toLowerCase()===r.toLowerCase())):void 0;if(p&&c){r=p.name;const t=n.features.length;let e=0;n.features.forEach((n=>e+=(m?n.attributes[m.name]:50)/t)),n.features.forEach((n=>{const o=n.attributes[p.name],i=m?n.attributes[m.name]:50;if(i>0){u.push(i);const n=Math.max(1,Math.round(i/t/e*1e3));for(let t=0;t<n;t++)l.push(o)}}))}else{const{pixelType:e}=t,i=(o.max-o.min)/o.size,a=e.includes("s")||e.includes("u"),s=a&&1===i?Math.floor(o.min+.5):o.min,r=a&&1===i?Math.floor(o.max-.5):o.max,m=o.size;let d,f=0;o.counts.forEach((t=>f+=t/m)),o.counts.forEach(((t,e)=>{if(t>0){u.push(t);const a=Math.max(1,Math.round(t/m/f*1e3));d=c?n.features[e].attributes[p.name]:0===e?s:e===m-1?r:o.min+i*(e+.5);for(let t=0;t<a;t++)l.push(d)}}))}const y=e?.classificationMethod||"natural-breaks";let v=e?.definedInterval;"defined-interval"!==y||v||(v=function(t,e,n){let o=0,i=0;if(null!=t.attributeTable){const n=t.attributeTable;o=i=n.features[0].attributes[e.name],n.features.forEach((t=>{const n=t.attributes[e.name];n<o&&(o=n),n>i&&(i=n)}))}else if(null!=t.histograms){const e=t.histograms;o=e[0].min,i=e[0].max}return(i-o)/n}(t,p,i));const b=(0,M.t)({values:l,valueFrequency:u,normalizationTotal:null,definition:new x.A({classificationMethod:y,breakCount:i,definedInterval:v})});let w=e?.colors;if(!w){const t=e?.colorRamp||_;a.colorRamp=t;const n=(0,h.R8)(t,{numColors:b.classBreaks.length,interpolateAlpha:!0});w=n.map((t=>t.slice(1)))}const C=b.classBreaks.map(((t,e)=>new f.default({minValue:t.minValue,maxValue:t.maxValue,label:t.label,symbol:new S.default({color:w[e]})})));return new s.default({field:r,classBreakInfos:C,authoringInfo:a})}const D=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function B(t){if(!(0,g.rd)(t))return null;let e;if(null!=t.statistics&&t.statistics.length&&("vector-magdir"===t.dataType||"vector-uv"===t.dataType)){const{minMagnitude:n,maxMagnitude:o}=$(t.dataType,t.statistics);e=[new b.default({field:"Magnitude",minSize:10,maxSize:40,minDataValue:n,maxDataValue:o})]}const n=null!=t.multidimensionalInfo?D.get(t.multidimensionalInfo.variables[0].unit):void 0,o=new p.default({visualVariables:e,inputUnit:n,rotationType:"geographic"});return o.visualVariables=[...o.sizeVariables,...o.rotationVariables],o}function G(t){return{color:t.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function U(t){if("uniqueValue"===t.type){const e=t.uniqueValueInfos,n=e?.[0].symbol;return n?.symbolLayers?.length&&(t.uniqueValueInfos=e?.map((t=>({value:t.value,label:t.label,symbol:t.symbol?G(t.symbol):null})))),t}if("classBreaks"===t.type){const e=t.classBreakInfos,n=e[0].symbol;return n?.symbolLayers?.length&&(t.classBreakInfos=e.map((t=>({classMinValue:t.classMinValue,classMaxValue:t.classMaxValue,label:t.label,symbol:t.symbol?G(t.symbol):null})))),t}return t}function J(t){if(!(0,g.QJ)(t))return null;let e;if(null!=t.statistics&&t.statistics.length>0&&("vector-magdir"===t.dataType||"vector-uv"===t.dataType)){const{minMagnitude:n,maxMagnitude:i}=$(t.dataType,t.statistics);e=[new v.default({field:"Magnitude",stops:[new w.default({value:n,color:new o.default("#1020c0")}),new w.default({value:i,color:new o.default("#c02010")})]})]}return new r.default({visualVariables:e})}function $(t,e){let n,o;if("vector-magdir"===t)n=e[0].min,o=e[0].max;else{const t=e[0].min,i=e[0].max,a=e[1].min,s=e[1].max;n=0,o=Math.max(Math.abs(t),Math.abs(a),Math.abs(i),Math.abs(s))}return{minMagnitude:n,maxMagnitude:o}}},82615:(t,e,n)=>{n.r(e),n.d(e,{default:()=>d});var o,i=n(35143),a=n(42553),s=n(53084),r=n(46053),l=(n(81806),n(76460),n(6409)),u=n(28379),c=n(85842),m=n(22471);let p=o=class extends a.A{constructor(t){super(t),this.altitude=45,this.azimuth=315,this.colorRamp=null,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.scalingType="none",this.type="raster-shaded-relief",this.zFactor=1}readColorRamp(t){return(0,m.r)(t)}clone(){return new o({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,scalingType:this.scalingType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,colorRamp:(0,s.clone)(this.colorRamp)})}};(0,i._)([(0,r.MZ)({type:Number,json:{write:{isRequired:!0}}})],p.prototype,"altitude",void 0),(0,i._)([(0,r.MZ)({type:Number,json:{write:{isRequired:!0}}})],p.prototype,"azimuth",void 0),(0,i._)([(0,r.MZ)({types:m.g,json:{write:!0}})],p.prototype,"colorRamp",void 0),(0,i._)([(0,u.w)("colorRamp")],p.prototype,"readColorRamp",null),(0,i._)([(0,r.MZ)({type:["traditional","multi-directional"],json:{write:{isRequired:!0}}})],p.prototype,"hillshadeType",void 0),(0,i._)([(0,r.MZ)({type:Number,json:{write:!0}})],p.prototype,"pixelSizePower",void 0),(0,i._)([(0,r.MZ)({type:Number,json:{write:!0}})],p.prototype,"pixelSizeFactor",void 0),(0,i._)([(0,r.MZ)({type:["none","adjusted"],json:{write:{isRequired:!0}}})],p.prototype,"scalingType",void 0),(0,i._)([(0,l.e)({rasterShadedRelief:"raster-shaded-relief"}),(0,r.MZ)({json:{write:{isRequired:!0}}})],p.prototype,"type",void 0),(0,i._)([(0,r.MZ)({type:Number,json:{write:{isRequired:!0}}})],p.prototype,"zFactor",void 0),p=o=(0,i._)([(0,c.$)("esri.renderers.RasterShadedReliefRenderer")],p);const d=p},86866:(t,e,n)=>{n.d(e,{DP:()=>y,Nh:()=>v,Pg:()=>g,RP:()=>c,WF:()=>u,_N:()=>b,eH:()=>f,f4:()=>h,fP:()=>p,zj:()=>m});var o=n(30726),i=n(66486),a=n(52297),s=n(74916);const r=1,l=[.299,.587,.114];function u(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256;e=Math.min(e,256);const{size:n,counts:o}=t,i=new Uint8Array(n),a=o.reduce(((t,n)=>t+n/e),0);let s=0,r=0,l=0,u=a;for(let c=0;c<n;c++)if(l+=o[c],!(c<n-1&&l+o[c+1]<u)){for(;s<e-1&&u<l;)s++,u+=a;for(let t=r;t<=c;t++)i[t]=s;r=c+1}for(let c=r;c<n;c++)i[c]=e-1;return i}function c(t){const{minCutOff:e,maxCutOff:n,gamma:o,pixelType:i,rounding:a}=t;if(!["u8","u16","s8","s16"].includes(i))return null;const s=e.length,r="s8"===i?-127:"s16"===i?-32767:0,l=["u16","s16"].includes(i)?65536:256,u=[],c=[],{minOutput:p=0,maxOutput:d=255}=t,f=d-p;for(let m=0;m<s;m++)c[m]=n[m]-e[m],u[m]=0===c[m]?0:f/c[m];const h=[];if(o&&o.length>=s){const t=v(s,o);for(let i=0;i<s;i++){const s=[];for(let u=0;u<l;u++){if(0===c[i]){s[u]=p;continue}const l=u+r,m=(l-e[i])/c[i];let h=1;if(o[i]>1&&(h-=(1/f)**(m*t[i])),l<n[i]&&l>e[i]){const t=h*f*m**(1/o[i])+p;s[u]="floor"===a?Math.floor(t):"round"===a?Math.round(t):t}else l>=n[i]?s[u]=d:s[u]=p}h[i]=s}}else for(let m=0;m<s;m++){const t=[];for(let o=0;o<l;o++){const i=o+r;if(i<=e[m])t[o]=p;else if(i>=n[m])t[o]=d;else{const n=(i-e[m])*u[m]+p;t[o]="floor"===a?Math.floor(n):"round"===a?Math.round(n):n}}h[m]=t}if(null!=t.contrastOffset){const e=m(t.contrastOffset,t.brightnessOffset);for(let t=0;t<s;t++){const n=h[t];for(let t=0;t<l;t++)n[t]=e[n[t]]}}return{lut:h,offset:r}}function m(t,e){const n=Math.min(Math.max(t,-100),100),o=Math.min(Math.max(e??0,-100),100),i=255,a=new Uint8Array(256);for(let s=0;s<256;s++){let t=0;n>0&&n<100?t=(200*s-25500+510*o)/(2*(100-n))+128:n<=0&&n>-100?t=(200*s-25500+510*o)*(100+n)/2e4+128:100===n?(t=200*s-25500+256*(100-n)+510*o,t=t>0?i:0):-100===n&&(t=128),a[s]=t>i?i:t<0?0:t}return a}function p(t,e,n){const o=[];for(let i=0;i<e.length;i++){let a=0,s=0,r=0;"min"in e[i]?({min:a,max:s,avg:r}=e[i]):[a,s,r]=e[i];let u=r??0;"u8"!==t&&(u=255*(u-a)/(s-a)),n&&(u*=l[i]),o.push(d(u))}return o}function d(t){if(t<=0||t>=255)return r;const e=t+(150===t?0:t<150?45*Math.cos(.01047*t):17*Math.sin(.021*t)),n=Math.log(t/255),o=Math.log(e/255);if(0===o)return r;const i=n/o;return isNaN(i)?r:Math.min(9.9,Math.max(.01,i))}function f(t){const{pixels:e,mask:n,pixelType:o,bandMasks:i}=t,a=e.map(((t,e)=>function(t,e,n){let o=1/0,i=-1/0,a=0,s=0,r=0,l=0;const u=t.length,c=new Map,m=[];for(let M=0;M<u;M++){const n=t[M];if(!e||e[M]){m.push(n);const t=(c.get(n)??0)+1;c.set(n,t),t>l&&(l=t,r=n),o=n<o?n:o,i=n>i?n:i,a+=n,s++}}if(0===s)return{statistics:{min:0,max:0,avg:0,stddev:0,mode:0,median:0},histogram:null};const p=a/s;let d=0;for(let M=0;M<u;M++)e&&!e[M]||(d+=(t[M]-p)**2);const f=e?e.filter((t=>t)).length:u,h=f<=1?0:Math.sqrt(d/(f-1));m.sort(((t,e)=>t-e));const g=s>>>1,y={min:o,max:i,avg:p,stddev:h,mode:r,median:s%2?m[Math.floor(g)]:(m[g-1]+m[g])/2};if(["u8","s8","u4","u2","u1"].includes(n)){const n=i-o+1,a=new Uint32Array(n);for(let i=0;i<u;i++)e&&!e[i]||a[t[i]-o]++;return{statistics:y,histogram:{min:o-.5,max:i+.5,size:n,counts:a}}}const v=256,b=new Uint32Array(v),w=(i-o)/v;if(0===w)return{statistics:y,histogram:{min:o,max:i,size:1,counts:new Uint32Array(1).fill(s)}};const x=new Uint32Array(257);for(let M=0;M<u;M++)e&&!e[M]||x[Math.floor((t[M]-o)/w)]++;for(let M=0;M<255;M++)b[M]=x[M];return b[255]=x[255]+x[v],{statistics:y,histogram:{min:o,max:i,size:v,counts:b}}}(t,i?.[e]??n,o)));return{statistics:a.map((t=>{let{statistics:e}=t;return e})),histograms:a.map((t=>{let{histogram:e}=t;return e}))}}function h(t){if(!t?.pixels?.length)return null;const{pixels:e,mask:n,bandMasks:o,pixelType:i}=t,a=t.width*t.height,s=e.length,r=[],l=[],u=256;let c,m;for(let p=0;p<s;p++){let s=new Uint32Array(u);const d=e[p],f=o?.[p]??n;if("u8"===i){if(c=255,m=0,f){for(let t=0;t<a;t++)if(f[t]){const e=d[t];c=e<c?e:c,m=e>m?e:m,s[e]++}}else for(let t=0;t<a;t++){const e=d[t];c=e<c?e:c,m=e>m?e:m,s[e]++}s=s.slice(c,m+1)}else{let e=!1;t.statistics||(t.updateStatistics(),e=!0);const n=t.statistics;c=n[p].minValue,m=n[p].maxValue;const o=(m-c)/u;if(0===o){!n||t.validPixelCount||e||t.updateStatistics();const o=(t.validPixelCount||t.width*t.height)/u;for(let t=0;t<u;t++)s[t]=Math.round(o*(t+1))-Math.round(o*t)}else{const t=new Uint32Array(257);for(let e=0;e<a;e++)f&&!f[e]||t[Math.floor((d[e]-c)/o)]++;for(let e=0;e<255;e++)s[e]=t[e];s[255]=t[255]+t[u]}}const h="u8"===i?c-.5:c,g="u8"===i?m+.5:m;r.push({min:h,max:g,size:s.length,counts:s});let y=0,v=0,b=0;for(let t=0;t<s.length;t++)y+=s[t],v+=t*s[t];const w=v/y;for(let t=0;t<s.length;t++)b+=s[t]*(t-w)**2;const x=Math.sqrt(b/(y-1)),M=(g-h)/s.length,C=(w+("u8"===i?0:.5))*M+c,S=x*M;l.push({min:c,max:m,avg:C,stddev:S})}return{statistics:l,histograms:r}}function g(t){const e=[];for(let n=0;n<t.length;n++){const{min:o,max:i,size:a,counts:s}=t[n];let r=0,l=0;for(let t=0;t<a;t++)r+=s[t],l+=t*s[t];const u=l/r;let c=0;for(let t=0;t<a;t++)c+=s[t]*(t-u)**2;const m=(i-o)/a,p=(u+.5)*m+o,d=Math.sqrt(c/(r-1))*m;e.push({min:o,max:i,avg:p,stddev:d})}return e}function y(t,e){const{pixelBlock:n,bandIds:i,returnHistogramLut:r,rasterInfo:l}=e;let c=null,m=null,p=t.stretchType;if("number"==typeof p&&(p=s.x[p]),t.dra)if("minMax"===p&&n?.statistics)c=n.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const t=h(n);c=null!=t?t.statistics:null,m=null!=t?t.histograms:null}else c=t.statistics?.length?t.statistics:l.statistics,m="histograms"in t?t.histograms:void 0,m||(m=l.histograms);"percentClip"!==p&&"histogramEqualization"!==p||m?.length||(p="minMax");const d=c?.length||m?.length||l.bandCount,f=[],g=[];c&&!Array.isArray(c[0])&&(c=c.map((t=>[t.min,t.max,t.avg,t.stddev])));const[y,v]=(0,a.hP)(l.pixelType);if(!c?.length){c=[];for(let t=0;t<d;t++)c.push([y,v,1,1]);"standardDeviation"===p&&(p="minMax")}switch(p){case"none":for(let t=0;t<d;t++)f[t]=y,g[t]=v;break;case"minMax":for(let t=0;t<d;t++){const e=c[t];f[t]=e[0],g[t]=e[1]}break;case"standardDeviation":{const{numberOfStandardDeviations:e=2}=t;for(let t=0;t<d;t++){const n=c[t];f[t]=n[2]-e*n[3],g[t]=n[2]+e*n[3],f[t]<n[0]&&(f[t]=n[0]),g[t]>n[1]&&(g[t]=n[1])}}break;case"histogramEqualization":(0,o.Lw)(m);for(let t=0;t<d;t++)f[t]=m[t].min,g[t]=m[t].max;break;case"percentClip":(0,o.Lw)(m);for(let e=0;e<m.length;e++){const n=m[e],o=new Uint32Array(n.size),i=[...n.counts];i.length>=20&&(i[0]=i[1]=i[2]=i[i.length-1]=i[i.length-2]=0);let a=0;const s=(n.max-n.min)/n.size,r=-.5===n.min&&1===s?.5:0;for(let t=0;t<n.size;t++)a+=i[t],o[t]=a;let l=(t.minPercent||0)*a/100;f[e]=n.min+r;for(let t=0;t<n.size;t++)if(o[t]>l){f[e]=n.min+s*(t+r);break}l=(1-(t.maxPercent||0)/100)*a,g[e]=n.max+r;for(let t=n.size-2;t>=0;t--)if(o[t]<l){g[e]=n.min+s*(t+2-r);break}if(g[e]<f[e]){const t=f[e];f[e]=g[e],g[e]=t}}break;default:for(let t=0;t<d;t++){const e=c[t];f[t]=e[0],g[t]=e[1]}}let b,w,x;return"histogramEqualization"===p?((0,o.Lw)(m),w=m[0].size||256,b=0,r&&(x=m.map((t=>u(t))))):(w=t.max||255,b=t.min||0),function(t,e){if(null==e||0===e.length)return t;const n=Math.max.apply(null,e),{minCutOff:o,maxCutOff:i,minOutput:a,maxOutput:s,histogramLut:r}=t;return o.length===e.length||o.length<=n?t:{minCutOff:e.map((t=>o[t])),maxCutOff:e.map((t=>i[t])),histogramLut:r?e.map((t=>r[t])):null,minOutput:a,maxOutput:s}}({minCutOff:f,maxCutOff:g,maxOutput:w,minOutput:b,histogramLut:x},i)}function v(t,e){const n=new Float32Array(t);for(let o=0;o<t;o++)e[o]>1?e[o]>2?n[o]=6.5+(e[o]-2)**2.5:n[o]=6.5+100*(2-e[o])**4:n[o]=1;return n}function b(t,e){if(!t?.pixels?.length)return t;const{mask:n,bandMasks:o,width:a,height:s,pixels:r}=t,{minCutOff:l,maxCutOff:u,minOutput:c,maxOutput:m,gamma:p}=e,d=a*s,f=e.outputPixelType||"u8",h=t.pixels.map((()=>i.default.createEmptyBand(f,d))),g=h.length,y=m-c,b=[],w=[];for(let i=0;i<g;i++)w[i]=u[i]-l[i],b[i]=0===w[i]?0:y/w[i];const x=f.startsWith("u")||f.startsWith("s"),M=p&&p.length>=g,C=!!e.isRenderer;if(M){const t=v(g,p);for(let e=0;e<g;e++){const i=o?.[e]??n;for(let n=0;n<d;n++)if(null==i||i[n]){if(0===w[e]){h[e][n]=c;continue}const o=r[e][n],i=(o-l[e])/w[e];let a=1;if(p[e]>1&&(a-=(1/y)**(i*t[e])),o<u[e]&&o>l[e]){const t=a*y*i**(1/p[e])+c;h[e][n]=C?Math.floor(t):x?Math.round(t):t}else o>=u[e]?h[e][n]=m:h[e][n]=c}}}else for(let i=0;i<g;i++){const t=o?.[i]??n;for(let e=0;e<d;e++)if(null==t||t[e]){const t=r[i][e];if(t<u[i]&&t>l[i]){const n=(t-l[i])*b[i]+c;h[i][e]=C?Math.floor(n):x?Math.round(n):n}else t>=u[i]?h[i][e]=m:h[i][e]=c}}const S=new i.default({width:a,height:s,mask:n,bandMasks:o,pixels:h,pixelType:f});return S.updateStatistics(),S}},97200:(t,e,n)=>{n.r(e),n.d(e,{default:()=>y});var o,i=n(35143),a=n(69539),s=n(45802),r=n(42553),l=n(76931),u=n(46053),c=(n(81806),n(76460),n(47249),n(6409)),m=n(85842),p=n(37287),d=n(9922),f=n(84563);const h=new s.J({flow_from:"flow-from",flow_to:"flow-to"});let g=o=class extends((0,p.h)(r.A)){constructor(t){super(t),this.density=.8,this.color=new a.default([255,255,255,1]),this.maxPathLength=200,this.trailWidth=1.5,this.flowSpeed=10,this.trailLength=100,this.smoothing=0,this.flowRepresentation="flow-from",this.type="flow",this.authoringInfo=null,this.legendOptions=null,this.trailCap="butt",this.background="none"}clone(){const{density:t,maxPathLength:e,trailWidth:n,flowSpeed:i,trailLength:a,smoothing:s,flowRepresentation:r,trailCap:l,background:u}=this,c=this.color.clone(),m=(this.visualVariables||[]).map((t=>t.clone())),p=this.authoringInfo?.clone(),d=this.legendOptions?.clone();return new o({density:t,color:c,maxPathLength:e,trailWidth:n,flowSpeed:i,trailLength:a,trailCap:l,background:u,smoothing:s,flowRepresentation:r,visualVariables:m,authoringInfo:p,legendOptions:d})}getSymbol(t,e){}async getSymbolAsync(t,e){}getSymbols(){return[]}};(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],g.prototype,"density",void 0),(0,i._)([(0,u.MZ)({type:a.default,json:{write:{allowNull:!0}}})],g.prototype,"color",void 0),(0,i._)([(0,u.MZ)({type:Number,cast:l.cr,json:{write:!0}})],g.prototype,"maxPathLength",void 0),(0,i._)([(0,u.MZ)({type:Number,cast:l.cr,json:{write:!0}})],g.prototype,"trailWidth",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],g.prototype,"flowSpeed",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],g.prototype,"trailLength",void 0),(0,i._)([(0,u.MZ)({type:Number,cast:l.cr,json:{write:!1}})],g.prototype,"smoothing",void 0),(0,i._)([(0,u.MZ)({type:h.apiValues,json:{type:h.jsonValues,read:{reader:h.read},write:{writer:h.write}}})],g.prototype,"flowRepresentation",void 0),(0,i._)([(0,c.e)({flowRenderer:"flow"})],g.prototype,"type",void 0),(0,i._)([(0,u.MZ)({type:d.default,json:{write:!0}})],g.prototype,"authoringInfo",void 0),(0,i._)([(0,u.MZ)({type:f.A,json:{write:!0}})],g.prototype,"legendOptions",void 0),(0,i._)([(0,u.MZ)({type:String,json:{write:!0}})],g.prototype,"trailCap",void 0),(0,i._)([(0,u.MZ)({type:String,json:{write:!0}})],g.prototype,"background",void 0),g=o=(0,i._)([(0,m.$)("esri.renderers.FlowRenderer")],g);const y=g}}]);
//# sourceMappingURL=5640.fba643a2.chunk.js.map