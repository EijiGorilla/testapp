{"version":3,"file":"static/js/76106.e0a8235b.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/smartMapping/statistics/support/predominanceUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{isIntegerField as n,castIntegerFieldToFloat as a}from\"../../support/utils.js\";const e=\"no_dominant_category\";function l(n){return`(${n.map((n=>`${n} >= 0`)).join(\" OR \")})`}function u(n){return{expression:r(n,{returnFieldName:!0,defaultValue:`'${e}'`})}}function r(e,l){const{returnFieldName:u,defaultValue:r,layer:t}=l,i=[];if(u&&r){const n=e.map((n=>`${n} <= 0`)).join(\" AND \");i.push(`WHEN ${n} THEN ${r}`)}for(const o of e){const l=e.reduce(((n,a)=>(o!==a&&n.push(`${o} > ${a}`),n)),[]).join(\" AND \"),r=t&&n(t,o),s=u&&`'${o}'`?`'${o}'`:r?a(o):o;i.push(`WHEN ${l} THEN ${s}`)}return`CASE ${i.join(\" \")} ELSE ${r||\"0\"} END`}function t(n,a){const e=a.join(\" + \"),u={sqlExpression:`(${e})`,sqlWhere:l(a)},t={sqlExpression:`(( (${r(a,{layer:n})}) / (${e}) ) * 100)`,sqlWhere:`${l(a)} AND ((${e}) > 0)`};return{predominantCategory:{valueExpression:s(a)},size:{valueExpression:$(a),statisticsQuery:u,histogramQuery:u},opacity:{valueExpression:V(a),statisticsQuery:t,histogramQuery:t}}}function i(n){return n&&n.map((n=>`$feature[\"${n}\"];`)).join(\"\\n\")+\"\\n\"||\"\"}function o(n,a=!1){const e=n.map((n=>`\"${n}\"`)),l=\"\\n  if(value != null && value >= 0) {\\n    if (totalValue == null) { totalValue = 0; }\\n    totalValue = totalValue + value;\\n  }\\n  \";return`\\n  var fieldNames = [ ${e.join(\", \")} ];\\n  var numFields = ${e.length};\\n  var maxValueField = null;\\n  var maxValue = -Infinity;\\n  var value, i, totalValue = null;\\n\\n  for(i = 0; i < numFields; i++) {\\n    value = $feature[fieldNames[i]];\\n\\n    if(value > 0) {\\n      if(value > maxValue) {\\n        maxValue = value;\\n        maxValueField = fieldNames[i];\\n      }\\n      else if (value == maxValue) {\\n        maxValueField = null;\\n      }\\n    }\\n    ${a?l:\"\"}\\n  }\\n  `}function s(n){const a=o(n);return`\\n  ${i(n)}\\n  ${a}\\n  return maxValueField;\\n  `}function f(n){const a=o(n);return`\\n  ${i(n)}\\n  ${a}\\n  return maxValue;\\n  `}function v(n,a){const e=m(n),l=i(e),u=n.map((n=>n.label?`\"${n.label}\"`:`\"${n.fieldName}\"`)),r=e.map((n=>`Number($feature[\"${n}\"])`)),t=[];return a&&a.forEach(((n,a)=>{t.push(`function getValueForExpr${a}() {\\n  ${n.expression} \\n}`),r.push(`Number(getValueForExpr${a}())`),u.push(`\"${n.title||n.name}\"`)})),`\\n  ${l}\\n\\n  ${t.length?t.join(\"\\n\"):\"\"}\\n\\n  var values = [ ${r.join(\", \")} ];\\n  var aliases = [ ${u.join(\", \")} ];\\n  var numValues = ${r.length};\\n  var maxValueAlias = null;\\n  var maxValue = -Infinity;\\n  var value, i, totalValue = null;\\n\\n  for(i = 0; i < numValues; i++) {\\n    value = values[i];\\n\\n    if(value > 0) {\\n      if(value > maxValue) {\\n        maxValue = value;\\n        maxValueAlias = aliases[i];\\n      }\\n      else if (value == maxValue) {\\n        maxValueAlias = \"Tie\";\\n      }\\n    }\\n  }\\n  return maxValueAlias;\\n  `}function m(n){return n.filter((({fieldName:n})=>!!n)).map((n=>n.fieldName))}function p(n){return`\\n  ${i(n)}\\n  var fieldValues = [ ${n.map((n=>`$feature[\"${n}\"]`)).join(\", \")} ];\\n  var totalValue = Sum(fieldValues);\\n  var order = Reverse(Sort(fieldValues));\\n  return IIF(totalValue > 0, Round(((order[0] - order[1]) / totalValue) * 100, 2), null);\\n  `}function $(n){const a=i(n),e=n.map((n=>`\"${n}\"`));return`\\n  ${a}\\n  var fieldNames = [ ${e.join(\", \")} ];\\n  var numFields = ${e.length};\\n  var value, i, totalValue = null;\\n\\n  for(i = 0; i < numFields; i++) {\\n    value = $feature[fieldNames[i]];\\n\\n    if(value != null && value >= 0) {\\n      if (totalValue == null) { totalValue = 0; }\\n      totalValue = totalValue + value;\\n    }\\n  }\\n\\n  return totalValue;\\n  `}function V(n){const a=o(n,!0);return`\\n  ${i(n)}\\n  ${a}\\n\\n  var strength = null;\\n\\n  if (maxValueField != null && totalValue > 0) {\\n    strength = (maxValue / totalValue) * 100;\\n  }\\n\\n  return strength;\\n  `}function c(n,a){const e=i(m(n)),l=n.map((n=>`{\\n    value: Number($feature[\"${n.fieldName}\"]),\\n    alias: \"${n.label||n.fieldName}\"\\n    }`)),u=[];return a&&a.forEach(((n,a)=>{u.push(`function getValueForExpr${a}() {\\n  ${n.expression} \\n}`),l.push(`{\\n          value: Number(getValueForExpr${a}()),\\n          alias: \"${n.title||n.name}\"\\n          }`)})),`\\n  ${e}\\n\\n  ${u.length?u.join(\"\\n\"):\"\"}\\n\\n  var groups = [ ${l.join(\", \")} ];\\n  var numTopValues = Count(groups);\\n\\n  function getValuesArray(arr){\\n    var valuesArray = []\\n    for(var i in arr){\\n      valuesArray[i] = arr[i].value;\\n    }\\n    return valuesArray;\\n  }\\n\\n  function findAliases(top5Array, fullArray){\\n    var aliases = [];\\n    var found = \"\";\\n    for(var i in top5Array){\\n      for(var k in fullArray){\\n        if(top5Array[i] == fullArray[k].value && Find(fullArray[k].alias, found) == -1){\\n          found += fullArray[k].alias;\\n          aliases[Count(aliases)] = {\\n            alias: fullArray[k].alias,\\n            value: top5Array[i]\\n          };\\n        }\\n      }\\n    }\\n    return aliases;\\n  }\\n\\n  function getTopGroups(groupsArray){\\n    var values = getValuesArray(groupsArray);\\n    var top5Values = IIF(Max(values) > 0, Top(Reverse(Sort(values)),numTopValues), \"no data\");\\n    var top5Aliases = findAliases(top5Values,groupsArray);\\n\\n    if(TypeOf(top5Values) == \"String\"){\\n      return top5Values;\\n    } else {\\n      var content = \"\";\\n      for(var i in top5Aliases){\\n        if(top5Aliases[i].value > 0){\\n          content += (i+1) + \". \" + top5Aliases[i].alias + \" (\" + Text(top5Aliases[i].value, \"#,###\") + \")\";\\n          content += IIF(i < numTopValues-1, TextFormatting.NewLine, \"\");\\n        }\\n      }\\n    }\\n\\n    return content;\\n  }\\n\\n  getTopGroups(groups);\\n  `}export{m as fieldNamesFromFieldInfos,c as getArcadeForOrderedFields,p as getArcadeForPredominanceMargin,s as getArcadeForPredominantCategory,v as getArcadeForPredominantCategoryAlias,f as getArcadeForPredominantCategoryValue,V as getArcadeForStrengthOfPredominance,$ as getArcadeForSumOfFields,t as getPredominanceExpressions,u as getSQLForPredominantCategoryName,e as noDominantCategoryField};\n"],"names":["e","l","n","map","join","u","expression","r","returnFieldName","defaultValue","layer","t","i","push","o","reduce","a","s","sqlExpression","sqlWhere","predominantCategory","valueExpression","size","$","statisticsQuery","histogramQuery","opacity","V","arguments","length","undefined","f","v","m","label","fieldName","forEach","title","name","filter","_ref","p","c"],"sourceRoot":""}