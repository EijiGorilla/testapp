"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[75166,85685],{770:(e,a,n)=>{n.d(a,{bG:()=>i,Ty:()=>o,YJ:()=>c,Fq:()=>u,vt:()=>r});var t=n(53084),s=n(42633);class l{constructor(e){const{name:a,label:n,description:t,schemes:l}=e;this.name=a,this.label=n,this.description=t,this.schemes=l;const i=e.basemapGroups||s.Np;let r=[];Object.keys(i).forEach((e=>{r=r.concat(i[e])})),this.supportedBasemaps=r,this.basemapGroups=i}isBasemapSupported(e){const a=(0,s.T1)(e,this.supportedBasemaps);return!(!a||!this.supportedBasemaps.includes(a))}getRawSchemes(e){const{basemapId:a,basemapTheme:n}=function(e,a,n){let t=null,l=null;if(a&&(t=(0,s.T1)(a,e,!1),t)){const e=(0,s.BV)(t);null!=e&&(l=e)}return!t&&n&&(t="dark"===n?"dark-gray":"gray",l=n),t||l||(t="gray",l="light"),{basemapId:t,basemapTheme:l}}(this.supportedBasemaps,e.basemap,e.basemapTheme);let l=n;if(a){const e=(0,s.BV)(a,this.basemapGroups);null!=e&&(l=e)}let i=e.geometryType;"multipoint"===i?i="point":"mesh"===i&&(i="polygon");const r=this.schemes[i]||this.schemes.default;return{schemesInfo:(0,t.clone)(r[l]),basemapId:a,basemapTheme:n}}}function i(e){const a=e.themeDictionary,n=new Map;for(const t in a){const e=a[t];n.set(t,new l(e))}return n}function r(e,a){const n=[];return e.forEach((e=>{e.isBasemapSupported(a)&&n.push({name:e.name,label:e.label,description:e.description,basemaps:[...e.supportedBasemaps]})})),n}function o(e,a){if(!e)return;if(!a)return;let n=null;const t=[a.primaryScheme,...a.secondarySchemes];for(const s of t)if(s.name?.toLowerCase()===e.toLowerCase()){n=s;break}return n}function c(e,a,n){if(!e&&!a)return[];if(!n)return[];const t=!e?.length,s=!a?.length,l=[n.primaryScheme,...n.secondarySchemes],i=[];for(const r of l){const n=!!t||e.some((e=>r.tags.includes(e))),l=!s&&a.some((e=>r.tags.includes(e)));n&&!l&&i.push(r)}return i}function u(e){const a=e.theme;if(a)return a.getRawSchemes({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme})}},29857:(e,a,n)=>{n.r(a),n.d(a,{default:()=>w});var t=n(50076),s=n(68002),l=n(16525),i=n(90494),r=n(11563);const o=500,c=1e8,u=1280,p=12,f=30,m=15;async function h(e){const{view:a,sampleSize:n}=e;if(!e||!e.layer)throw new t.default("scale-range:missing-parameters","'layer' parameter is required");if(e.snapToLOD&&!a)throw new t.default("scale-range:missing-parameters","'view' parameter is required when 'snapToLOD' is true");e.forBinning&&(0,i.p)(e,"scale-range");const{layer:s,...l}=e,c=e.forBinning?r.Mi:r.J4,u=(0,r.Jg)(s,c,e.forBinning);if(!u)throw new t.default("scale-range:invalid-parameters","'layer' must be one of these types: "+(0,r.Ho)(c).join(", "));const p={layerAdapter:u,...l};p.sampleSize=n||o,await(a?.when());const f=null!=p.signal?{signal:p.signal}:null;return await u.load(f),p}function g(e,a,n){const t=function(e,a){const n=p,t=u/4,s=f,l=u/4,i=m,r=u/2;let o=0,c=0,h=0,g=0;switch(e){case"point":case"multipoint":{const e=a;o=e.avgMinDistance??0,c=n,h=e.minDistance??0,g=t;break}case"polyline":{const e=a;o=e.avgLength??0,c=s,h=e.minLength??0,g=l;break}case"polygon":{const e=a;o=e.avgSize??0,c=i,h=e.minSize??0,g=r;break}}return{resolutionForMinScale:o>0?o/c:null,resolutionForMaxScale:h>0?h/g:null}}(e.geometryType,a),l=n?.spatialReference||e.layer.spatialReference;return{minScale:(0,s.gB)(t.resolutionForMinScale??0,l),maxScale:(0,s.gB)(t.resolutionForMaxScale??0,l)}}function d(e,a){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(e.constraints&&"effectiveLODs"in e.constraints){const t=e.constraints.effectiveLODs,s=n?t:t.slice().reverse();let l=null;for(const e of s)if(!(n?e.scale>a:e.scale<a)){l=e;break}return l}}function v(e,a,n,s){const{view:l,snapToLOD:i,layerAdapter:r}=e;if(i&&l){const e=d(l,a),t=d(l,n,!1);a=e?e.scale:a,n=t?t.scale:n}if(a<n)throw new t.default("scale-range:invalid","calculated minScale is less than maxScale.");return n>a/2&&(n=Math.floor(n/2)),a>c&&(a=0),"polygon"!==r.geometryType&&(n=0),{minScale:Math.ceil(a),maxScale:Math.floor(n),spatialStatistics:s}}async function w(e){const a=await h(e),{view:n,sampleSize:s,layerAdapter:i,signal:r,filter:o}=a,c=await i.getSampleFeatures({view:n,sampleSize:s,returnGeometry:!0,filter:o,signal:r},"json");if(!c?.length)throw new t.default("scale-range:insufficient-info","No features are available to calculate statistics");const u=await(0,l.A)({features:c,geometryType:i.geometryType}),{minScale:p,maxScale:f}=g(i,u,n);return v(a,p,f,u)}},31650:(e,a,n)=>{n.r(a),n.d(a,{default:()=>x});n(81806);var t=n(50076),s=n(76931),l=n(68002),i=n(43996),r=n(63040),o=n(29857),c=n(90494),u=n(11563);const p=1e8,f=1128.497176,m=591657527.591555,h=[10,8,4,2],g=[100,100,60,30],d=[2,1,.75,.5],v=[32,18,12,6],w=[{level:0,resolution:156543.03392800014,scale:591657527.591555},{level:1,resolution:78271.51696399994,scale:295828763.795777},{level:2,resolution:39135.75848200009,scale:147914381.897889},{level:3,resolution:19567.87924099992,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.992452562495,scale:4622324.434309},{level:8,resolution:611.4962262813797,scale:2311162.217155},{level:9,resolution:305.74811314055756,scale:1155581.108577},{level:10,resolution:152.87405657041106,scale:577790.554289},{level:11,resolution:76.43702828507324,scale:288895.277144},{level:12,resolution:38.21851414253662,scale:144447.638572},{level:13,resolution:19.10925707126831,scale:72223.819286},{level:14,resolution:9.554628535634155,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.388657133974685,scale:9027.977411},{level:17,resolution:1.1943285668550503,scale:4513.988705},{level:18,resolution:.5971642835598172,scale:2256.994353},{level:19,resolution:.29858214164761665,scale:1128.497176}];function y(e,a){const{view:n}=e;if(!n)throw new t.default("scale-range:invalid-parameters","'view' is required");const s=a.minScale||p,l=n.constraints&&"effectiveLODs"in n.constraints&&n.constraints.effectiveLODs||w,i=[];for(let t=0;t<l.length;t++){if(l[t].scale>s)continue;const e=Number(t),a=[e-3,e,e+3,e+6];for(const n of a)n>-1&&n<l.length&&i.push(l[n].scale);break}return i.sort(((e,a)=>e-a))}function S(e,a){const{view:n,layerAdapter:s}=e;if(!n)throw new t.default("scale-range:invalid-parameters","'view' is required");const i=s.fullExtent,r=s.minScale||f,o=s.maxScale||m,c=a.minScale||0,u=a.maxScale||0;let p=null!=i?(0,l.X_)(n,i):0;return p=p<r&&p>o?p:0,{scales:[r,o,c,u,p].map(Math.round).sort(((e,a)=>e-a)).filter(((e,a,n)=>!!e&&n.indexOf(e)===a)).filter(((e,a,n)=>!a||Math.abs(e-n[a-1])>5)),fullExtentScale:p}}function b(e,a){const{spatialStatistics:n,minScale:l,maxScale:o}=a;if(!("avgSize"in n)||!n.avgSize)throw new t.default("size-range:insufficient-info","average polygon size is invalid");const c=n.avgSize,{view:u}=e;if(!u)throw new t.default("scale-range:invalid-parameters","'view' is required");const{resolution:p,scale:f}=u,m=p/f,{scales:h,fullExtentScale:g}=S(e,{minScale:l,maxScale:o}),d=[],v=[];return h.forEach(((e,a)=>{const{min:n,max:t}=function(e,a){const n=Math.ceil(e/a);let t=Math.ceil(n/4);t<4?t=4:t>16&&(t=16);const s=5*t;return{min:t,max:s<50?50:s}}(c,m*e),l=h.indexOf(g),i=l>-1&&a>l?2:1;d.push(new r.default({value:e,size:(0,s.PN)(n/i)})),v.push(new r.default({value:e,size:(0,s.PN)(t/i)}))})),{minSize:new i.default({valueExpression:"$view.scale",stops:d}),maxSize:new i.default({valueExpression:"$view.scale",stops:v})}}async function x(e){const a=await async function(e){const{view:a}=e;if(!(e&&a&&e.layer))throw new t.default("size-range:missing-parameters","'view' and 'layer' parameters are required");e.forBinning&&(0,c.p)(e,"size-range");const{layer:n,...s}=e,l=e.forBinning?u.Mi:u.J4,i=(0,u.Jg)(n,l,e.forBinning);if(!i)throw new t.default("size-range:invalid-parameters","'layer' must be one of these types: "+(0,u.Ho)(l).join(", "));const r={layerAdapter:i,...s,view:a};await a.when();const o=null!=r.signal?{signal:r.signal}:null;await i.load(o);const p=i.geometryType;if("point"!==p&&"multipoint"!==p&&"polyline"!==p&&"polygon"!==p)throw new t.default("size-range:not-supported",`sizeRange is not supported for geometryType: ${p}`);return r}(e),{view:n,layerAdapter:l,signal:p,filter:f}=a,m=await(0,o.default)({layer:l,view:n,signal:p,filter:f});switch(l.geometryType){case"point":case"multipoint":return function(e,a){const{minScale:n,maxScale:l}=a,o=y(e,{minScale:n,maxScale:l});if(!o.length)throw new t.default("scale-range:insufficient-info","not enough scale values");return{minSize:new i.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new r.default({value:e,size:(0,s.PN)(h[a])})))}),maxSize:new i.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new r.default({value:e,size:(0,s.PN)(g[a])})))})}}(a,m);case"polyline":return function(e,a){const{minScale:n,maxScale:l}=a,o=y(e,{minScale:n,maxScale:l});if(!o.length)throw new t.default("scale-range:insufficient-info","not enough scale values");return{minSize:new i.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new r.default({value:e,size:(0,s.PN)(d[a])})))}),maxSize:new i.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new r.default({value:e,size:(0,s.PN)(v[a])})))})}}(a,m);case"polygon":return b(a,m);case"mesh":case"multipatch":return null}return null}},80791:(e,a,n)=>{n.d(a,{_J:()=>c,_t:()=>o});var t=n(76931),s=n(42633);const l=s.Np.light,i=s.Np.dark;function r(e,a){return e.r===a.r&&e.g===a.g&&e.b===a.b}function o(e,a){let n=0;if(e.length===a.length){let t=e.every(((e,n)=>r(e,a[n])));t?n=1:(t=e.slice().reverse().every(((e,n)=>r(e,a[n]))),t&&(n=-1))}return n}function c(e,a){return Math.ceil(function(e){const a=e.width,n=e.height;let s=e.pixelSizeAt(e.toMap((0,t.tc)(.5*a,.5*n),{exclude:[]}));if(s<=0&&(s=e.pixelSizeAt(e.toMap((0,t.tc)(.5*a,.95*n),{exclude:[]})),s<=0&&"camera"in e)){const a=e.camera.position.clone();a.z=0,s=2*e.pixelSizeAt(a)}return s}(a)*(0,t.Lz)((0,t.cr)(e)))}}}]);
//# sourceMappingURL=85685.dee903b5.chunk.js.map