"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[82951],{16852:(e,r,t)=>{t.d(r,{C:()=>o,m:()=>i});var s=t(50076),a=t(50346);async function i(e,r,t){let i;try{i=await createImageBitmap(e)}catch(o){throw new s.default("request:server",`Unable to load ${r}`,{url:r,error:o})}return(0,a.throwIfAborted)(t),i}async function o(e,r,t,i,o){let l;try{l=await createImageBitmap(e)}catch(n){throw new s.default("request:server",`Unable to load tile ${r}/${t}/${i}`,{error:n,level:r,row:t,col:i})}return(0,a.throwIfAborted)(o),l}},36648:(e,r,t)=>{t.d(r,{V:()=>g});var s=t(35143),a=t(3825),i=t(87663),o=t(50346),l=t(90534),n=t(19898),p=t(46053),u=(t(81806),t(76460),t(47249),t(28379)),y=t(85842),d=t(49140),c=t(76797),h=t(13312),b=t(13096),m=t(95363),f=t(72945);const g=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,r){const t=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!t)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const s=this.type,a="tile"!==s&&!!r.supportsDynamicLayers,i=t.includes("query"),o=t.includes("map"),l=!!r.exportTilesAllowed,p=t.includes("tilemap"),u=t.includes("data"),y="tile"!==s&&(!r.tileInfo||a),d="tile"!==s&&(!r.tileInfo||a),c="tile"!==s,h="tile"!==s&&a&&r.currentVersion>=11.1,b=r.cimVersion?n.R.parse(r.cimVersion):null,m=b?.greaterEqual(1,4)??!1,f=b?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:o,supportsExportTiles:l,supportsIdentify:i,supportsQuery:u,supportsTileMap:p},exportMap:o?{supportsArcadeExpressionForLabeling:m,supportsCIMSymbols:f,supportsDynamicLayers:a,supportsSublayerOrderBy:h,supportsSublayerDefinitionExpression:d,supportsSublayerVisibility:y,supportsSublayersChanges:c}:null,exportTiles:l?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let t=r.currentVersion;return t||(t=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),t}async fetchRelatedService(e){const r=this.portalItem;if(!r||!(0,f.bK)(r))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then((e=>e.find((e=>"Feature Service"===e.type))??null),(()=>null)));const t=await this._relatedFeatureServicePromise;return(0,o.throwIfAborted)(e),t?{itemId:t.id,url:t.url}:null}async fetchSublayerInfo(e,r){const{source:t}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===t?.type&&(0,f.bK)(this.portalItem)&&e.originIdOf("url")<d.Gr.SERVICE){const s=await this.fetchRelatedService(r);s&&(e.url=(0,l.join)(s.url,t.mapLayerId.toString()),e.layerItemId=s.itemId)}const{url:s}=e;let i;if("data-layer"===t.type)i=(await(0,a.default)(s,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(s&&e.originIdOf("url")>d.Gr.SERVICE)try{const e=await this._fetchAllLayersAndTablesFromService(s),r=(0,b.qg)(s)?.sublayer??t.mapLayerId;i=e.get(r)}catch{}else{let s=e.id;"map-layer"===t?.type&&(s=t.mapLayerId);try{i=(await this.fetchAllLayersAndTables(r)).get(s)}catch{}}return i}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,r){await this.load(r),this._allLayersAndTablesMap||=new Map;const t=(0,b.qg)(e),s=(0,i.tE)(this._allLayersAndTablesMap,t?.url.path,(()=>(0,a.default)((0,l.join)(t?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{const r=new Map,{layers:t,tables:s}=e.data,a=[...t??[],...s??[]];for(const i of a)r.set(i.id,i);return{result:r}}),(e=>({error:e}))))),n=await s;if((0,o.throwIfAborted)(r),"result"in n)return n.result;throw n.error}};return(0,s._)([(0,p.MZ)({readOnly:!0})],r.prototype,"capabilities",void 0),(0,s._)([(0,u.w)("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),(0,s._)([(0,p.MZ)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,s._)([(0,p.MZ)({type:c.default})],r.prototype,"fullExtent",void 0),(0,s._)([(0,p.MZ)(m.id)],r.prototype,"id",void 0),(0,s._)([(0,p.MZ)({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),(0,s._)([(0,p.MZ)(m.M6)],r.prototype,"popupEnabled",void 0),(0,s._)([(0,p.MZ)({type:h.default})],r.prototype,"spatialReference",void 0),(0,s._)([(0,p.MZ)({readOnly:!0})],r.prototype,"version",void 0),(0,s._)([(0,u.w)("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=(0,s._)([(0,y.$)("esri.layers.mixins.ArcGISMapService")],r),r}},73907:(e,r,t)=>{t.d(r,{I:()=>f});var s=t(35143),a=t(19276),i=t(73763),o=t(50076),l=t(76460),n=t(68134),p=t(46053),u=(t(81806),t(47249),t(39314)),y=t(85842),d=t(49140),c=t(39568),h=t(65419);const b=a.default.ofType(c.default);function m(e,r){e&&e.forEach((e=>{r(e),e.sublayers&&e.sublayers.length&&m(e.sublayers,r)}))}const f=e=>{let r=class extends e{constructor(){super(...arguments),this.allSublayers=new i.A({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={[d.Gr.SERVICE]:{},[d.Gr.PORTAL_ITEM]:{},[d.Gr.WEB_SCENE]:{},[d.Gr.WEB_MAP]:{},[d.Gr.LINK_CHART]:{}},this.subtables=null,this.addHandles([(0,n.watch)((()=>this.sublayers),((e,r)=>this._handleSublayersChange(e,r)),n.sync),(0,n.watch)((()=>this.subtables),((e,r)=>this._handleSublayersChange(e,r)),n.sync)])}destroy(){this.allSublayers.destroy()}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:t}=this,s=(0,d.aB)(r.origin);if(s<d.Gr.SERVICE)return;if(t[s]={context:r,visibleLayers:e.visibleLayers||t[s].visibleLayers,layers:e.layers||t[s].layers},s>d.Gr.SERVICE)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:a,origin:i}=this.createSublayersForOrigin("web-document"),o=(0,u.oY)(this);o.setDefaultOrigin(i),this._set("sublayers",new b(a)),o.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const r=(0,d.aB)("web-document"===e?"web-map":e);let t=d.Gr.SERVICE,s=this.sublayersSourceJSON[d.Gr.SERVICE].layers,a=this.sublayersSourceJSON[d.Gr.SERVICE].context,i=null;const o=[d.Gr.PORTAL_ITEM,d.Gr.WEB_SCENE,d.Gr.WEB_MAP].filter((e=>e<=r));for(const d of o){const e=this.sublayersSourceJSON[d];(0,h._X)(e.layers)&&(t=d,s=e.layers,a=e.context,e.visibleLayers&&(i={visibleLayers:e.visibleLayers,context:e.context}))}const l=[d.Gr.PORTAL_ITEM,d.Gr.WEB_SCENE,d.Gr.WEB_MAP].filter((e=>e>t&&e<=r));let n=null;for(const d of l){const{layers:e,visibleLayers:r,context:t}=this.sublayersSourceJSON[d];e&&(n={layers:e,context:t}),r&&(i={visibleLayers:r,context:t})}const p=function(e,r){const t=[],s={};return e?(e.forEach((e=>{const a=new c.default;if(a.read(e,r),s[a.id]=a,null!=e.parentLayerId&&-1!==e.parentLayerId){const r=s[e.parentLayerId];r.sublayers||(r.sublayers=[]),r.sublayers.unshift(a)}else t.unshift(a)})),t):t}(s,a),u=new Map,y=new Set;if(n)for(const d of n.layers)u.set(d.id,d);if(i?.visibleLayers)for(const d of i.visibleLayers)y.add(d);return m(p,(e=>{n&&e.read(u.get(e.id),n.context),i&&e.read({defaultVisibility:y.has(e.id)},i.context)})),{origin:(0,d.OL)(t),sublayers:new b({items:p})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.addHandles([e.on("after-add",(e=>{let{item:r}=e;r.parent=this,r.layer=this})),e.on("after-remove",(e=>{let{item:r}=e;r.parent=null,r.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.addHandles(e.on("before-changes",(e=>{l.A.getLogger("esri.layers.TileLayer").error(new o.default("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return(0,s._)([(0,p.MZ)({readOnly:!0})],r.prototype,"allSublayers",void 0),(0,s._)([(0,p.MZ)({readOnly:!0,type:a.default.ofType(c.default)})],r.prototype,"serviceSublayers",void 0),(0,s._)([(0,p.MZ)({value:null,type:b,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),(0,s._)([(0,p.MZ)({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),(0,s._)([(0,p.MZ)({type:b,json:{read:{source:"tables"}}})],r.prototype,"subtables",void 0),r=(0,s._)([(0,y.$)("esri.layers.mixins.SublayersOwner")],r),r}},82951:(e,r,t)=>{t.r(r),t.d(r,{default:()=>j});var s=t(35143),a=t(3825),i=t(50076),o=t(27741),l=t(77717),n=t(50346),p=t(46053),u=t(40565),y=(t(81806),t(47249),t(28379)),d=t(85842),c=t(17707),h=t(49140),b=t(76797),m=t(68002),f=t(80963),g=t(25515),v=t(12406),S=t(36648),w=t(19502),I=t(65624),_=t(31362),x=t(11270),E=t(94729),M=t(21617),T=t(5682),L=t(73907),O=t(78817),A=t(95363),Z=t(1420),P=t(16852),R=t(39568),C=t(65419),F=t(38278),V=t(59187),G=t(67478);let N=class extends((0,I.dM)((0,O.e)((0,T.j)((0,L.I)((0,S.V)((0,w.b)((0,x.q)((0,E.A)((0,l.P)((0,M.J)((0,v.p)((0,_.d)(g.default))))))))))))){constructor(){super(...arguments),this._exportImageParameters=new Z.g({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(n.throwIfAbortError).then((()=>this._fetchService(r)))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((e=>{let{sublayers:r}=e;return r&&r.toArray().reverse()})).toArray();let i=!1;const o=(0,h.aB)(s.origin);if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers)if(o===h.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;i=(0,C.Zx)(a,e,h.Gr.SERVICE)}else if(o>h.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");i=(0,C.Zx)(a,e.sublayers,(0,h.aB)(e.origin))}const l=[],n={writeSublayerStructure:i,...s};let p=i||this.hasVisibleLayersForOrigin(o);a.forEach((e=>{const r=e.write({},n);l.push(r),p=p||"user"===e.originOf("visible")})),l.some((e=>Object.keys(e).length>1))&&(r.layers=l),p&&(r.visibleLayers=a.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,r,t,s){const a=s?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=s?.floors??null,this._exportImageParameters.scale=(0,m.X_)({extent:e,width:r})*a;const i=this._exportImageParameters.toJSON(),o=!s?.rotation||this.version<10.3?{}:{rotation:-s.rotation},l=e?.spatialReference,n=(0,f.YX)(l);i.dpi*=a;const p={};if(s?.timeExtent){const{start:e,end:r}=s.timeExtent.toJSON();p.time=e&&r&&e===r?""+e:`${e??"null"},${r??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:n,imageSR:n,size:r+","+t,...i,...o,...p}}async fetchImage(e,r,t,s){const{data:a}=await this._fetchImage("image",e,r,t,s);return a}async fetchImageBitmap(e,r,t,s){const{data:a,url:i}=await this._fetchImage("blob",e,r,t,s);return(0,P.m)(a,i,s?.signal)}async fetchRecomputedExtents(){const e={...arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:r}=await(0,a.default)(this.url,e),{extent:t,fullExtent:s,timeExtent:i}=r,o=t||s;return{fullExtent:o&&b.default.fromJSON(o),timeExtent:i&&V.default.fromJSON({start:i[0],end:i[1]})}}loadAll(){return(0,o.g)(this,(e=>{e(this.allSublayers),e(this.subtables)}))}serviceSupportsSpatialReference(e){return(0,F.D)(this,e)}async _fetchImage(e,r,t,s,o){const l={responseType:e,signal:o?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,t,s,o),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},p=this.parsedUrl.path+"/export";if(null!=l.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new i.default("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query});try{const{data:e}=await(0,a.default)(p,l);return{data:e,url:p}}catch(u){if((0,n.isAbortError)(u))throw u;throw new i.default("mapimagelayer:image-fetch-error",`Unable to load image: ${p}`,{error:u})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:t}=await(0,a.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});t&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(null==e||!this.sublayersSourceJSON[e]?.visibleLayers)}};(0,s._)([(0,p.MZ)((0,G.P6)("dateFieldsTimeReference"))],N.prototype,"dateFieldsTimeZone",void 0),(0,s._)([(0,p.MZ)({type:Boolean})],N.prototype,"datesInUnknownTimezone",void 0),(0,s._)([(0,p.MZ)()],N.prototype,"dpi",void 0),(0,s._)([(0,p.MZ)()],N.prototype,"gdbVersion",void 0),(0,s._)([(0,p.MZ)()],N.prototype,"imageFormat",void 0),(0,s._)([(0,y.w)("imageFormat",["supportedImageFormatTypes"])],N.prototype,"readImageFormat",null),(0,s._)([(0,p.MZ)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],N.prototype,"imageMaxHeight",void 0),(0,s._)([(0,p.MZ)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],N.prototype,"imageMaxWidth",void 0),(0,s._)([(0,p.MZ)()],N.prototype,"imageTransparency",void 0),(0,s._)([(0,p.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],N.prototype,"isReference",void 0),(0,s._)([(0,p.MZ)({json:{read:!1,write:!1}})],N.prototype,"labelsVisible",void 0),(0,s._)([(0,p.MZ)({type:["ArcGISMapServiceLayer"]})],N.prototype,"operationalLayerType",void 0),(0,s._)([(0,p.MZ)({json:{read:!1,write:!1}})],N.prototype,"popupEnabled",void 0),(0,s._)([(0,p.MZ)((0,G.P6)("preferredTimeReference"))],N.prototype,"preferredTimeZone",void 0),(0,s._)([(0,p.MZ)()],N.prototype,"sourceJSON",void 0),(0,s._)([(0,p.MZ)({json:{write:{ignoreOrigin:!0}}})],N.prototype,"sublayers",void 0),(0,s._)([(0,c.K)("sublayers",{layers:{type:[R.default]},visibleLayers:{type:[u.jz]}})],N.prototype,"writeSublayers",null),(0,s._)([(0,p.MZ)({type:["show","hide","hide-children"]})],N.prototype,"listMode",void 0),(0,s._)([(0,p.MZ)({json:{read:!1},readOnly:!0,value:"map-image"})],N.prototype,"type",void 0),(0,s._)([(0,p.MZ)(A.OZ)],N.prototype,"url",void 0),N=(0,s._)([(0,d.$)("esri.layers.MapImageLayer")],N);const j=N}}]);
//# sourceMappingURL=82951.de7862cf.chunk.js.map