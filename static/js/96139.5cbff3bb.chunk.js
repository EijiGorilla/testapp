"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[62675,64693,73651,75105,79219,96139],{6528:(e,t,r)=>{r.d(t,{A:()=>c});var i=r(35143),s=r(42553),o=r(46053),n=(r(81806),r(76460),r(47249),r(6409)),a=r(85842),l=r(73103);let u=class extends s.A{constructor(e){super(e)}};(0,i._)([(0,o.MZ)({json:{read:{source:"string"}}})],u.prototype,"text",void 0),(0,i._)([(0,n.e)(l.Ec,{name:"stringType"})],u.prototype,"type",void 0),u=(0,i._)([(0,a.$)("esri.rest.support.DirectionsString")],u);const c=u},62675:(e,t,r)=>{r.r(t),r.d(t,{default:()=>y});var i=r(35143),s=r(18690),o=r(46053),n=(r(81806),r(76460),r(28379)),a=r(85842),l=r(76797),u=r(23701),c=r(13312),d=r(79219),p=r(77725);let m=class extends p.default{constructor(e){super(e),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){if(!e)return[];const r=t.summary.envelope.spatialReference??t.spatialReference,i=r&&c.default.fromJSON(r);return e.map((e=>{const t=d.default.fromJSON(e);if(null!=t.geometry&&(t.geometry.spatialReference=i),null!=t.events)for(const r of t.events)null!=r.geometry&&(r.geometry.spatialReference=i);return t}))}get mergedGeometry(){return this.features?function(e,t){if(0===e.length)return new u.default({spatialReference:t});const r=[];for(const n of e)for(const e of n.paths)r.push(...e);const i=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||i.push(e)}));const{hasM:s,hasZ:o}=e[0];return new u.default({hasM:s,hasZ:o,paths:[i],spatialReference:t})}(this.features.map((e=>{let{geometry:t}=e;return t})),this.extent.spatialReference):null}get strings(){return this.features.flatMap((e=>{let{strings:t}=e;return t})).filter(s.Ru)}};(0,i._)([(0,o.MZ)({type:l.default,json:{read:{source:"summary.envelope"}}})],m.prototype,"extent",void 0),(0,i._)([(0,o.MZ)({nonNullable:!0})],m.prototype,"features",void 0),(0,i._)([(0,n.w)("features")],m.prototype,"readFeatures",null),(0,i._)([(0,o.MZ)()],m.prototype,"geometryType",void 0),(0,i._)([(0,o.MZ)({readOnly:!0})],m.prototype,"mergedGeometry",null),(0,i._)([(0,o.MZ)()],m.prototype,"routeId",void 0),(0,i._)([(0,o.MZ)()],m.prototype,"routeName",void 0),(0,i._)([(0,o.MZ)({value:null,readOnly:!0})],m.prototype,"strings",null),(0,i._)([(0,o.MZ)({json:{read:{source:"summary.totalDriveTime"}}})],m.prototype,"totalDriveTime",void 0),(0,i._)([(0,o.MZ)({json:{read:{source:"summary.totalLength"}}})],m.prototype,"totalLength",void 0),(0,i._)([(0,o.MZ)({json:{read:{source:"summary.totalTime"}}})],m.prototype,"totalTime",void 0),m=(0,i._)([(0,a.$)("esri.rest.support.DirectionsFeatureSet")],m);const y=m},64693:(e,t,r)=>{r.r(t),r.d(t,{default:()=>c});var i=r(35143),s=r(45802),o=r(42553),n=r(46053),a=(r(81806),r(76460),r(47249),r(85842));const l=new s.J({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let u=class extends o.A{constructor(e){super(e),this.description=null,this.type=null}};(0,i._)([(0,n.MZ)({type:String,json:{write:!0}})],u.prototype,"description",void 0),(0,i._)([(0,n.MZ)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,i._)([(0,a.$)("esri.rest.support.GPMessage")],u);const c=u},73103:(e,t,r)=>{r.d(t,{$n:()=>k,$r:()=>N,EM:()=>g,Ec:()=>Z,JJ:()=>h,Mm:()=>w,OC:()=>D,Sr:()=>d,UO:()=>a,Vj:()=>_,WU:()=>J,Y8:()=>n,Z7:()=>l,_6:()=>O,_H:()=>y,aJ:()=>c,ag:()=>f,cQ:()=>p,dd:()=>b,dn:()=>u,et:()=>U,fe:()=>A,gD:()=>M,hE:()=>m,hY:()=>o,iM:()=>T,mt:()=>S,ow:()=>v,vS:()=>R});var i=r(45802);const s={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},o=(0,i.O)()(s),n=(0,i.O)()({...s,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),a=(0,i.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),c=(0,i.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),d=(0,i.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),p=(0,i.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),m=(0,i.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),y=(0,i.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),f=(0,i.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),v=(0,i.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),h=(0,i.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),g=(0,i.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),N=(0,i.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),S=(0,i.O)()({1:"right",2:"left"},{useNumericKeys:!0}),T=(0,i.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),A=(0,i.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),O=(0,i.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),M=(0,i.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),k=(0,i.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),b=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),w=(0,i.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),U=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),D=(0,i.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),R=(0,i.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),_=(0,i.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),J=(0,i.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),Z=(0,i.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})},73651:(e,t,r)=>{r.r(t),r.d(t,{default:()=>c});var i=r(35143),s=r(45802),o=r(46053),n=(r(81806),r(76460),r(47249),r(85842)),a=r(64693);const l=new s.J({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let u=class extends a.default{constructor(e){super(e),this.type=null}};(0,i._)([(0,o.MZ)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,i._)([(0,n.$)("esri.rest.support.NAMessage")],u);const c=u},75105:(e,t,r)=>{r.r(t),r.d(t,{default:()=>p});var i=r(35143),s=r(42553),o=r(46053),n=(r(81806),r(76460),r(47249),r(28379)),a=r(85842),l=r(19247),u=r(86236),c=r(6528);let d=class extends s.A{constructor(e){super(e),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(e,t){return(0,u.Zn)(t.ETA,t.arriveTimeUTC)}readGeometry(e,t){return l.default.fromJSON(t.point)}};(0,i._)([(0,o.MZ)({type:Date,json:{read:{source:"arriveTimeUTC"}}})],d.prototype,"arriveTime",void 0),(0,i._)([(0,o.MZ)()],d.prototype,"arriveTimeOffset",void 0),(0,i._)([(0,n.w)("arriveTimeOffset",["arriveTimeUTC","ETA"])],d.prototype,"readArriveTimeOffset",null),(0,i._)([(0,o.MZ)({type:l.default})],d.prototype,"geometry",void 0),(0,i._)([(0,n.w)("geometry",["point"])],d.prototype,"readGeometry",null),(0,i._)([(0,o.MZ)({type:[c.A]})],d.prototype,"strings",void 0),d=(0,i._)([(0,a.$)("esri.rest.support.DirectionsEvent")],d);const p=d},79219:(e,t,r)=>{r.r(t),r.d(t,{default:()=>p});var i=r(35143),s=r(39356),o=r(46053),n=(r(81806),r(76460),r(47249),r(28379)),a=r(85842),l=r(23701),u=r(75105),c=r(6528);let d=class extends s.default{constructor(e){super(e),this.events=null,this.geometry=null,this.strings=null}readGeometry(e,t){const r=function(e){if(null==e||""===e)return null;let t=0,r=0,i=0,s=0;const o=[];let n,a,l,u,c,d,p,m,y=0,f=0,v=0;if(c=e.match(/((\+|-)[^+\-|]+|\|)/g),c||(c=[]),0===parseInt(c[y],32)){y=2;const e=parseInt(c[y],32);y++,d=parseInt(c[y],32),y++,1&e&&(f=c.indexOf("|")+1,p=parseInt(c[f],32),f++),2&e&&(v=c.indexOf("|",f)+1,m=parseInt(c[v],32),v++)}else d=parseInt(c[y],32),y++;for(;y<c.length&&"|"!==c[y];){n=parseInt(c[y],32)+t,y++,t=n,a=parseInt(c[y],32)+r,y++,r=a;const e=[n/d,a/d];f&&(u=parseInt(c[f],32)+i,f++,i=u,e.push(u/p)),v&&(l=parseInt(c[v],32)+s,v++,s=l,e.push(l/m)),o.push(e)}return{paths:[o],hasZ:f>0,hasM:v>0}}(t.compressedGeometry);return null!=r?l.default.fromJSON(r):null}};(0,i._)([(0,o.MZ)({type:[u.default]})],d.prototype,"events",void 0),(0,i._)([(0,o.MZ)({type:l.default})],d.prototype,"geometry",void 0),(0,i._)([(0,n.w)("geometry",["compressedGeometry"])],d.prototype,"readGeometry",null),(0,i._)([(0,o.MZ)({type:[c.A]})],d.prototype,"strings",void 0),d=(0,i._)([(0,a.$)("esri.rest.support.DirectionsFeature")],d);const p=d},86236:(e,t,r)=>{r.d(t,{Zn:()=>l,_s:()=>d,aZ:()=>n,lh:()=>s,nA:()=>a,o9:()=>c,p3:()=>o,r9:()=>u});var i=r(73103);function s(e,t){if(null==e)return null;const r={},s=new RegExp(`^${t}`,"i");for(const o of Object.keys(e))if(s.test(o)){const s=o.slice(t.length);r[i.et.fromJSON(s)]=e[o]}return r}function o(e,t,r){if(null!=e){t.attributes||(t.attributes={});for(const s in e){const o=i.et.toJSON(s);t.attributes[`${r}${o}`]=e[s]}}}function n(e){const t={};for(const r of Object.keys(e)){const s=r;t[i.et.fromJSON(s)]=e[r]}return t}function a(e){const t={};for(const r of Object.keys(e)){const s=r;t[i.et.toJSON(s)]=e[r]}return t}function l(e,t){return null==e||null==t?null:Math.round((e-t)/6e4)}function u(e){const t=e.toJSON(),r=t;return r.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),r.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),r.barriers&&=JSON.stringify(t.barriers),r.outSR&&=t.outSR?.wkid,r.overrides&&=JSON.stringify(t.overrides),r.polygonBarriers&&=JSON.stringify(t.polygonBarriers),r.polylineBarriers&&=JSON.stringify(t.polylineBarriers),r.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),r.stops&&=JSON.stringify(t.stops),r.travelMode&&=JSON.stringify(t.travelMode),r}function c(e){const t=e.toJSON(),r=t;return r.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),r.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),r.barriers&&=JSON.stringify(t.barriers),r.facilities&&=JSON.stringify(t.facilities),r.incidents&&=JSON.stringify(t.incidents),r.outSR&&=t.outSR?.wkid,r.overrides&&=JSON.stringify(t.overrides),r.polygonBarriers&&=JSON.stringify(t.polygonBarriers),r.polylineBarriers&&=JSON.stringify(t.polylineBarriers),r.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),r.travelMode&&=JSON.stringify(t.travelMode),r}function d(e){const t=e.toJSON(),r=t;return r.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),r.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),r.barriers&&=JSON.stringify(t.barriers),r.defaultBreaks&&=t.defaultBreaks?.join(),r.excludeSourcesFromPolygons&&=t.excludeSourcesFromPolygons?.join(),r.facilities&&=JSON.stringify(t.facilities),r.outSR&&=t.outSR?.wkid,r.overrides&&=JSON.stringify(t.overrides),r.polygonBarriers&&=JSON.stringify(t.polygonBarriers),r.polylineBarriers&&=JSON.stringify(t.polylineBarriers),r.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),r.travelMode&&=JSON.stringify(t.travelMode),r}},96139:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var i=r(35143),s=r(42553),o=r(46053),n=(r(81806),r(76460),r(47249),r(85842)),a=r(62675),l=r(77725),u=r(73651);let c=class extends s.A{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"directionLines",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"directionPoints",void 0),(0,i._)([(0,o.MZ)({type:[a.default]})],c.prototype,"directions",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"facilities",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"incidents",void 0),(0,i._)([(0,o.MZ)({type:[u.default]})],c.prototype,"messages",void 0),(0,i._)([(0,o.MZ)({type:l.default,json:{read:{source:"barriers"}}})],c.prototype,"pointBarriers",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"polylineBarriers",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"polygonBarriers",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"routes",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"traversedEdges",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"traversedJunctions",void 0),(0,i._)([(0,o.MZ)({type:l.default})],c.prototype,"traversedTurns",void 0),c=(0,i._)([(0,n.$)("esri.rest.support.ClosestFacilitySolveResult")],c);const d=c}}]);
//# sourceMappingURL=96139.5cbff3bb.chunk.js.map