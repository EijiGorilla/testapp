"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[29857,31650],{16525:(e,n,a)=>{a.d(n,{A:()=>s});var t=a(5262),l=a(27084);function i(e){let n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=[];if(n){for(const t of e)if(t.geometry){const e=t.geometry;a.push.apply(a,e.points)}}else a=e.map((e=>e.geometry));const l=[],i=[];let s=1/0,o=-1/0,r=0,c=0,u=0,f=0;for(const p of a){if(!p)continue;n?(l[0]=p[0],l[1]=p[1]):(l[0]=p.x,l[1]=p.y);let e=1/0,m=-1/0;for(const r of a){if(r===p)continue;if(!r)continue;n?(i[0]=r[0],i[1]=r[1]):(i[0]=r.x,i[1]=r.y);const a=(0,t.R3)(l,i);a>0&&(a<e&&(e=a),a<s&&(s=a),a>m&&(m=a),a>o&&(o=a))}e!==1/0&&(++u,r+=e),m!==-1/0&&(++f,c+=m)}return{minDistance:s!==1/0?s:null,maxDistance:o!==-1/0?o:null,avgMinDistance:u?r/u:null,avgMaxDistance:f?c/f:null}}function s(e){const{features:n}=e;let a=null;switch(e.geometryType){case"point":a=i(n);break;case"multipoint":a=i(n,!0);break;case"polyline":a=function(e){let n=0,a=0,l=1/0,i=-1/0;for(const s of e){const e=s.geometry;if(e){let s=0;for(const n of e.paths){const e=(0,t.Yl)(n);e>0&&(s+=e)}s>0&&(++n,a+=s,s<l&&(l=s),s>i&&(i=s))}}return{minLength:l!==1/0?l:null,maxLength:i!==-1/0?i:null,avgLength:n?a/n:null}}(n);break;case"polygon":a=function(e){let n=0,a=0,t=1/0,i=-1/0;for(const s of e){const e=s.geometry;if(e){const s=(0,l.v)(e);if(s){const e=Math.abs(s.xmax-s.xmin),l=Math.abs(s.ymax-s.ymin),o=Math.sqrt(e*l);o>0&&(++n,a+=o,o<t&&(t=o),o>i&&(i=o))}}}return{minSize:t!==1/0?t:null,maxSize:i!==-1/0?i:null,avgSize:n?a/n:null}}(n)}return Promise.resolve(a)}},29857:(e,n,a)=>{a.r(n),a.d(n,{default:()=>h});var t=a(50076),l=a(68002),i=a(16525),s=a(90494),o=a(11563);const r=500,c=1e8,u=1280,f=12,p=30,m=15;async function v(e){const{view:n,sampleSize:a}=e;if(!e||!e.layer)throw new t.default("scale-range:missing-parameters","'layer' parameter is required");if(e.snapToLOD&&!n)throw new t.default("scale-range:missing-parameters","'view' parameter is required when 'snapToLOD' is true");e.forBinning&&(0,s.p)(e,"scale-range");const{layer:l,...i}=e,c=e.forBinning?o.Mi:o.J4,u=(0,o.Jg)(l,c,e.forBinning);if(!u)throw new t.default("scale-range:invalid-parameters","'layer' must be one of these types: "+(0,o.Ho)(c).join(", "));const f={layerAdapter:u,...i};f.sampleSize=a||r,await(n?.when());const p=null!=f.signal?{signal:f.signal}:null;return await u.load(p),f}function g(e,n,a){const t=function(e,n){const a=f,t=u/4,l=p,i=u/4,s=m,o=u/2;let r=0,c=0,v=0,g=0;switch(e){case"point":case"multipoint":{const e=n;r=e.avgMinDistance??0,c=a,v=e.minDistance??0,g=t;break}case"polyline":{const e=n;r=e.avgLength??0,c=l,v=e.minLength??0,g=i;break}case"polygon":{const e=n;r=e.avgSize??0,c=s,v=e.minSize??0,g=o;break}}return{resolutionForMinScale:r>0?r/c:null,resolutionForMaxScale:v>0?v/g:null}}(e.geometryType,n),i=a?.spatialReference||e.layer.spatialReference;return{minScale:(0,l.gB)(t.resolutionForMinScale??0,i),maxScale:(0,l.gB)(t.resolutionForMaxScale??0,i)}}function w(e,n){let a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(e.constraints&&"effectiveLODs"in e.constraints){const t=e.constraints.effectiveLODs,l=a?t:t.slice().reverse();let i=null;for(const e of l)if(!(a?e.scale>n:e.scale<n)){i=e;break}return i}}function d(e,n,a,l){const{view:i,snapToLOD:s,layerAdapter:o}=e;if(s&&i){const e=w(i,n),t=w(i,a,!1);n=e?e.scale:n,a=t?t.scale:a}if(n<a)throw new t.default("scale-range:invalid","calculated minScale is less than maxScale.");return a>n/2&&(a=Math.floor(a/2)),n>c&&(n=0),"polygon"!==o.geometryType&&(a=0),{minScale:Math.ceil(n),maxScale:Math.floor(a),spatialStatistics:l}}async function h(e){const n=await v(e),{view:a,sampleSize:l,layerAdapter:s,signal:o,filter:r}=n,c=await s.getSampleFeatures({view:a,sampleSize:l,returnGeometry:!0,filter:r,signal:o},"json");if(!c?.length)throw new t.default("scale-range:insufficient-info","No features are available to calculate statistics");const u=await(0,i.A)({features:c,geometryType:s.geometryType}),{minScale:f,maxScale:p}=g(s,u,a);return d(n,f,p,u)}},31650:(e,n,a)=>{a.r(n),a.d(n,{default:()=>z});a(81806);var t=a(50076),l=a(76931),i=a(68002),s=a(43996),o=a(63040),r=a(29857),c=a(90494),u=a(11563);const f=1e8,p=1128.497176,m=591657527.591555,v=[10,8,4,2],g=[100,100,60,30],w=[2,1,.75,.5],d=[32,18,12,6],h=[{level:0,resolution:156543.03392800014,scale:591657527.591555},{level:1,resolution:78271.51696399994,scale:295828763.795777},{level:2,resolution:39135.75848200009,scale:147914381.897889},{level:3,resolution:19567.87924099992,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.992452562495,scale:4622324.434309},{level:8,resolution:611.4962262813797,scale:2311162.217155},{level:9,resolution:305.74811314055756,scale:1155581.108577},{level:10,resolution:152.87405657041106,scale:577790.554289},{level:11,resolution:76.43702828507324,scale:288895.277144},{level:12,resolution:38.21851414253662,scale:144447.638572},{level:13,resolution:19.10925707126831,scale:72223.819286},{level:14,resolution:9.554628535634155,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.388657133974685,scale:9027.977411},{level:17,resolution:1.1943285668550503,scale:4513.988705},{level:18,resolution:.5971642835598172,scale:2256.994353},{level:19,resolution:.29858214164761665,scale:1128.497176}];function y(e,n){const{view:a}=e;if(!a)throw new t.default("scale-range:invalid-parameters","'view' is required");const l=n.minScale||f,i=a.constraints&&"effectiveLODs"in a.constraints&&a.constraints.effectiveLODs||h,s=[];for(let t=0;t<i.length;t++){if(i[t].scale>l)continue;const e=Number(t),n=[e-3,e,e+3,e+6];for(const a of n)a>-1&&a<i.length&&s.push(i[a].scale);break}return s.sort(((e,n)=>e-n))}function S(e,n){const{view:a,layerAdapter:l}=e;if(!a)throw new t.default("scale-range:invalid-parameters","'view' is required");const s=l.fullExtent,o=l.minScale||p,r=l.maxScale||m,c=n.minScale||0,u=n.maxScale||0;let f=null!=s?(0,i.X_)(a,s):0;return f=f<o&&f>r?f:0,{scales:[o,r,c,u,f].map(Math.round).sort(((e,n)=>e-n)).filter(((e,n,a)=>!!e&&a.indexOf(e)===n)).filter(((e,n,a)=>!n||Math.abs(e-a[n-1])>5)),fullExtentScale:f}}function x(e,n){const{spatialStatistics:a,minScale:i,maxScale:r}=n;if(!("avgSize"in a)||!a.avgSize)throw new t.default("size-range:insufficient-info","average polygon size is invalid");const c=a.avgSize,{view:u}=e;if(!u)throw new t.default("scale-range:invalid-parameters","'view' is required");const{resolution:f,scale:p}=u,m=f/p,{scales:v,fullExtentScale:g}=S(e,{minScale:i,maxScale:r}),w=[],d=[];return v.forEach(((e,n)=>{const{min:a,max:t}=function(e,n){const a=Math.ceil(e/n);let t=Math.ceil(a/4);t<4?t=4:t>16&&(t=16);const l=5*t;return{min:t,max:l<50?50:l}}(c,m*e),i=v.indexOf(g),s=i>-1&&n>i?2:1;w.push(new o.default({value:e,size:(0,l.PN)(a/s)})),d.push(new o.default({value:e,size:(0,l.PN)(t/s)}))})),{minSize:new s.default({valueExpression:"$view.scale",stops:w}),maxSize:new s.default({valueExpression:"$view.scale",stops:d})}}async function z(e){const n=await async function(e){const{view:n}=e;if(!(e&&n&&e.layer))throw new t.default("size-range:missing-parameters","'view' and 'layer' parameters are required");e.forBinning&&(0,c.p)(e,"size-range");const{layer:a,...l}=e,i=e.forBinning?u.Mi:u.J4,s=(0,u.Jg)(a,i,e.forBinning);if(!s)throw new t.default("size-range:invalid-parameters","'layer' must be one of these types: "+(0,u.Ho)(i).join(", "));const o={layerAdapter:s,...l,view:n};await n.when();const r=null!=o.signal?{signal:o.signal}:null;await s.load(r);const f=s.geometryType;if("point"!==f&&"multipoint"!==f&&"polyline"!==f&&"polygon"!==f)throw new t.default("size-range:not-supported",`sizeRange is not supported for geometryType: ${f}`);return o}(e),{view:a,layerAdapter:i,signal:f,filter:p}=n,m=await(0,r.default)({layer:i,view:a,signal:f,filter:p});switch(i.geometryType){case"point":case"multipoint":return function(e,n){const{minScale:a,maxScale:i}=n,r=y(e,{minScale:a,maxScale:i});if(!r.length)throw new t.default("scale-range:insufficient-info","not enough scale values");return{minSize:new s.default({valueExpression:"$view.scale",stops:r.map(((e,n)=>new o.default({value:e,size:(0,l.PN)(v[n])})))}),maxSize:new s.default({valueExpression:"$view.scale",stops:r.map(((e,n)=>new o.default({value:e,size:(0,l.PN)(g[n])})))})}}(n,m);case"polyline":return function(e,n){const{minScale:a,maxScale:i}=n,r=y(e,{minScale:a,maxScale:i});if(!r.length)throw new t.default("scale-range:insufficient-info","not enough scale values");return{minSize:new s.default({valueExpression:"$view.scale",stops:r.map(((e,n)=>new o.default({value:e,size:(0,l.PN)(w[n])})))}),maxSize:new s.default({valueExpression:"$view.scale",stops:r.map(((e,n)=>new o.default({value:e,size:(0,l.PN)(d[n])})))})}}(n,m);case"polygon":return x(n,m);case"mesh":case"multipatch":return null}return null}},90494:(e,n,a)=>{a.d(n,{p:()=>i,z:()=>l});var t=a(50076);const l="aggregateCount";function i(e,n){if(!e.view)throw new t.default(`${n}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new t.default(`${n}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if("3d"===e.view.type)throw new t.default(`${n}:invalid-parameters`,"3d view is not supported for binning")}}}]);
//# sourceMappingURL=31650.1429f55a.chunk.js.map