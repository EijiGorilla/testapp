"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[27802],{27802:(e,t,l)=>{l.r(t),l.d(t,{I3STreeDebugger:()=>f});var s=l(35143),i=l(18690),r=l(46053),o=(l(81806),l(76460),l(85842)),n=l(34761),a=l(13191),h=l(20664),u=l(9392),c=l(65215),p=l(45308),d=l(29614);let f=class extends d.E{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),t=this.view.renderSpatialReference,l=this.nodeSR;return e.map((e=>function(e,t,l){const s=e.serviceObbInIndexSR;if(null==s||null==t)return null;(0,n.I0)(y,s.quaternion),(0,h.c)(b,s.center),(0,p.projectBuffer)(b,l,0,b,t,0),y[12]=b[0],y[13]=b[1],y[14]=b[2];const i=[[],[],[]];(0,h.t)(b,s.halfSize,y),(0,p.projectBuffer)(b,t,0,b,l,0),i[0].push([b[0],b[1]]),(0,h.c)(b,s.halfSize),b[0]=-b[0],(0,h.t)(b,b,y),(0,p.projectBuffer)(b,t,0,b,l,0),i[0].push([b[0],b[1]]),(0,h.c)(b,s.halfSize),b[0]=-b[0],b[1]=-b[1],(0,h.t)(b,b,y),(0,p.projectBuffer)(b,t,0,b,l,0),i[0].push([b[0],b[1]]),(0,h.c)(b,s.halfSize),b[1]=-b[1],(0,h.t)(b,b,y),(0,p.projectBuffer)(b,t,0,b,l,0),i[0].push([b[0],b[1]]),i[1].push(i[0][0]),i[1].push(i[0][1]),(0,h.c)(b,s.halfSize),b[0]=-b[0],b[2]=-b[2],(0,h.t)(b,b,y),(0,p.projectBuffer)(b,t,0,b,l,0),i[1].push([b[0],b[1]]),(0,h.c)(b,s.halfSize),b[2]=-b[2],(0,h.t)(b,b,y),(0,p.projectBuffer)(b,t,0,b,l,0),i[1].push([b[0],b[1]]),i[2].push(i[0][0]),i[2].push(i[0][3]),(0,h.c)(b,s.halfSize),b[1]=-b[1],b[2]=-b[2],(0,h.t)(b,b,y),(0,p.projectBuffer)(b,t,0,b,l,0),i[2].push([b[0],b[1]]),i[2].push(i[1][3]);const r=new c.default({rings:i,spatialReference:l});return{lij:[e.level,e.childCount,0],level:e.level,label:e.id,geometry:r}}(e,t,l))).filter(i.Ru).sort(((e,t)=>e.lij[0]===t.lij[0]?e.label>t.label?-1:1:e.lij[0]-t.lij[0]))}};(0,s._)([(0,r.MZ)({constructOnly:!0})],f.prototype,"lv",void 0),(0,s._)([(0,r.MZ)({constructOnly:!0})],f.prototype,"nodeSR",void 0),f=(0,s._)([(0,o.$)("esri.views.3d.layers.support.I3STreeDebugger")],f);const y=(0,a.vt)(),b=(0,u.vt)()},29614:(e,t,l)=>{l.d(t,{E:()=>v});var s=l(35143),i=l(69539),r=l(39356),o=l(91967),n=l(19276),a=l(15941),h=l(46053),u=(l(81806),l(76460),l(47249),l(85842)),c=l(37471),p=l(86875),d=l(86659),f=l(21405),y=l(92135),b=l(68905),g=l(48670);const w=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let v=class extends o.default{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=w.map((e=>new p.default({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=this.getTiles(),t=new Array,l=new Set((this._labels.size,this._labels.keys()));e.forEach(((s,o)=>{const h=s.lij.toString();l.delete(h);const u=s.measures?.lodLevel??s.level,p=s.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const e=new r.default({geometry:p,symbol:this._symbols[u%this._symbols.length]});this._polygons.set(h,e),t.push(e)}if(this.enableLabels){const l=(e=>{if(null!=e.label)return e.label;let t=e.lij.toString();return null!=e.loadPriority&&(t+=` (${e.loadPriority})`),e.measures&&(t+=`[${e.measures.lodLevel}]`),t})(s),u=o/(e.length-1),w=(0,a.Cc)(0,200,u),v=(0,a.Cc)(20,6,u)/.75,_=null!=s.loadPriority&&s.loadPriority>=e.length,m=new i.default([w,_?0:w,_?0:w]),S="3d"===this.view.type?()=>new c.default({verticalOffset:new g.default({screenLength:40/.75}),callout:new y.default({color:new i.default("white"),border:new b.A({color:new i.default("black")})}),symbolLayers:new n.default([new f.default({text:l,halo:{color:"white",size:1/.75},material:{color:m},size:v})])}):()=>new d.default({text:l,haloColor:"white",haloSize:1/.75,color:m,size:v}),j=this._labels.get(h);if(j){const e=S();null!=j.symbol&&JSON.stringify(e)===JSON.stringify(j.symbol)||(j.symbol=e)}else{const e=new r.default({geometry:p.extent.center,symbol:S()});this._labels.set(h,e),t.push(e)}}}));const s=new Array;l.forEach((e=>{const t=this._polygons.get(e);null!=t&&(s.push(t),this._polygons.delete(e));const l=this._labels.get(e);null!=l&&(s.push(l),this._labels.delete(e))})),this.view.graphics.removeMany(s),this.view.graphics.addMany(t)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,s._)([(0,h.MZ)({constructOnly:!0})],v.prototype,"view",void 0),(0,s._)([(0,h.MZ)({readOnly:!0})],v.prototype,"updating",void 0),(0,s._)([(0,h.MZ)()],v.prototype,"enabled",null),v=(0,s._)([(0,u.$)("esri.views.support.TileTreeDebugger")],v)}}]);
//# sourceMappingURL=27802.4dd23257.chunk.js.map