"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[15359,29365,44038,56888],{15359:(e,t,i)=>{i.r(t),i.d(t,{default:()=>c});var o,n=i(35143),r=i(42553),s=i(53084),a=i(46053),p=i(40565),u=i(85842);let l=o=class extends r.A{constructor(e){super(e),this.variableName=null,this.dimensionName=null,this.values=[],this.isSlice=!1}clone(){return new o({variableName:this.variableName,dimensionName:this.dimensionName,values:(0,s.clone)(this.values),isSlice:this.isSlice})}};(0,n._)([(0,a.MZ)({type:String,json:{write:!0}})],l.prototype,"variableName",void 0),(0,n._)([(0,a.MZ)({type:String,json:{write:!0}})],l.prototype,"dimensionName",void 0),(0,n._)([(0,a.MZ)({type:p.gK.array(p.gK.oneOf([p.gK.native(Number),p.gK.array(p.gK.native(Number))])),json:{write:!0}})],l.prototype,"values",void 0),(0,n._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],l.prototype,"isSlice",void 0),l=o=(0,n._)([(0,u.$)("esri.layers.support.DimensionalDefinition")],l);const c=l},29365:(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var o,n=i(35143),r=i(45802),s=i(42553),a=i(53084),p=i(46053),u=i(21403),l=i(28379),c=i(85842),d=i(17707),y=i(40565),m=i(19247),w=i(15359),h=i(44038);const M=(0,r.O)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),f=(0,r.O)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let _=o=class extends s.A{constructor(e){super(e),this.ascending=!0,this.itemRasterFunction=null,this.lockRasterIds=null,this.method="none",this.multidimensionalDefinition=null,this.objectIds=null,this.operation="first",this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return f.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}writeMultidimensionalDefinition(e,t,i){null!=e&&(e=e.filter((e=>{let{variableName:t,dimensionName:i}=e;return t&&"*"!==t||i}))).length&&(t[i]=e.map((e=>e.toJSON())))}readOperation(e,t){const i=t.mosaicOperation,o=t.mosaicOperator?.toLowerCase(),n=i||(o?M.toJSON(o):null);return M.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new o({ascending:this.ascending,itemRasterFunction:(0,a.clone)(this.itemRasterFunction),lockRasterIds:(0,a.clone)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,a.clone)(this.multidimensionalDefinition),objectIds:(0,a.clone)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,a.clone)(this.viewpoint),where:this.where})}};(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],_.prototype,"ascending",void 0),(0,n._)([(0,l.w)("ascending",["ascending","sortAscending"])],_.prototype,"readAscending",null),(0,n._)([(0,p.MZ)({type:h.default,json:{name:"itemRenderingRule",write:!0}})],_.prototype,"itemRasterFunction",void 0),(0,n._)([(0,p.MZ)({type:[y.jz],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],_.prototype,"lockRasterIds",void 0),(0,n._)([(0,p.MZ)({type:f.apiValues,json:{type:f.jsonValues,write:{target:"mosaicMethod",writer:f.write,isRequired:!0}}})],_.prototype,"method",void 0),(0,n._)([(0,l.w)("method",["mosaicMethod","defaultMosaicMethod"])],_.prototype,"readMethod",null),(0,n._)([(0,p.MZ)({type:[w.default],json:{write:!0}})],_.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,d.K)("multidimensionalDefinition")],_.prototype,"writeMultidimensionalDefinition",null),(0,n._)([(0,p.MZ)({type:[y.jz],json:{name:"fids",write:!0}})],_.prototype,"objectIds",void 0),(0,n._)([(0,p.MZ)({type:M.apiValues,json:{type:M.jsonValues,read:{reader:M.read},write:{target:"mosaicOperation",writer:M.write}}})],_.prototype,"operation",void 0),(0,n._)([(0,l.w)("operation",["mosaicOperation","mosaicOperator"])],_.prototype,"readOperation",null),(0,n._)([(0,p.MZ)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],_.prototype,"sortField",void 0),(0,n._)([(0,p.MZ)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],_.prototype,"sortValue",void 0),(0,n._)([(0,u.w)("sortValue")],_.prototype,"castSortValue",null),(0,n._)([(0,p.MZ)({type:m.default,json:{write:!0}})],_.prototype,"viewpoint",void 0),(0,n._)([(0,p.MZ)({type:String,json:{write:!0}})],_.prototype,"where",void 0),_=o=(0,n._)([(0,c.$)("esri.layers.support.MosaicRule")],_);const v=_},44038:(e,t,i)=>{i.r(t),i.d(t,{default:()=>C});var o=i(35143),n=i(42553),r=i(53084),s=i(46053),a=(i(81806),i(76460),i(6409)),p=i(28379),u=i(85842),l=i(17707),c=i(45802),d=i(40565),y=(i(47249),i(58646));let m=class extends n.A{constructor(){super(...arguments),this.pixelType="unknown"}};(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],m.prototype,"name",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],m.prototype,"description",void 0),(0,o._)([(0,s.MZ)({type:d.jz,json:{type:d.jz,write:!0,name:"_object_id"}})],m.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:String,json:{type:y.e8.jsonValues,read:y.e8.read,write:{writer:y.e8.write,isRequired:!0}}})],m.prototype,"pixelType",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],m.prototype,"type",void 0),m=(0,o._)([(0,u.$)("esri.layers.support.RasterFunctionInfo")],m);const w=m;let h=class extends n.A{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],h.prototype,"name",void 0),(0,o._)([(0,s.MZ)({type:Number,json:{type:d.jz,write:!0,name:"_object_id"}})],h.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"isDataset",void 0),(0,o._)([(0,s.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"isPublic",void 0),(0,o._)([(0,s.MZ)({json:{write:!0}})],h.prototype,"value",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],h.prototype,"type",void 0),h=(0,o._)([(0,u.$)("esri.layers.support.RasterFunctionVariable")],h);const M={key:"type",base:null,typeMap:{RasterFunctionVariable:h}};let f=class extends n.A{};(0,o._)([(0,s.MZ)({types:M,json:{types:M,name:"MatchVariable"}})],f.prototype,"matchVariable",void 0),(0,o._)([(0,s.MZ)({types:M,json:{types:M,name:"UnionDimension"}})],f.prototype,"unionDimension",void 0),(0,o._)([(0,s.MZ)({type:Number,json:{type:d.jz,write:!0,name:"_object_id"}})],f.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],f.prototype,"type",void 0),f=(0,o._)([(0,u.$)("esri.layers.support.RasterFunctionProperties")],f);const _=f,v=new c.J({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let g=class extends n.A{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};(0,o._)([(0,s.MZ)({type:[String],json:{write:!0}})],g.prototype,"aliases",void 0),(0,o._)([(0,s.MZ)({type:Object,json:{write:{isRequired:!0}}})],g.prototype,"arguments",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],g.prototype,"description",void 0),(0,o._)([(0,s.MZ)({type:w,json:{write:{isRequired:!0},name:"function"}})],g.prototype,"functionInfo",void 0),(0,o._)([(0,s.MZ)({type:v.apiValues,json:{type:[0,1,2],read:v.read,write:{writer:v.write,isRequired:!0}}})],g.prototype,"functionType",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"group",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"help",void 0),(0,o._)([(0,s.MZ)({type:Number,json:{type:d.jz,write:!0,name:"_object_id"}})],g.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],g.prototype,"name",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0,name:"definition"}})],g.prototype,"queryDefinition",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"tag",void 0),(0,o._)([(0,s.MZ)({type:_,json:{write:!0}})],g.prototype,"properties",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"thumbnail",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"thumbnailEx",void 0),(0,o._)([(0,s.MZ)({json:{type:["RasterFunctionTemplate"],write:!0}})],g.prototype,"type",void 0),g=(0,o._)([(0,u.$)("esri.layers.support.RasterFunctionTemplate")],g);const j=g;var b;const N=new Set(["raster","raster2","dem","fillraster"]),S=new Set(["rasters"]),Z=e=>e?.rasterFunction?O.fromJSON(e):e,F=e=>e&&e instanceof O?e.toJSON():e,A=e=>e?.functionName&&!e.declaredClass,R=e=>A(e)?new O(e):e,k=e=>e?j.fromJSON({type:"RasterFunctionTemplate",...e}):void 0,D={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:j}},json:{write:!0,name:"rasterFunctionDefinition",read:k}};let O=b=class extends n.A{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some((t=>N.has(t.toLowerCase())&&A(e[t])))||t.some((t=>S.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some((e=>A(e)))))){e=(0,r.clone)(e);for(const i of t)N.has(i.toLowerCase())?e[i]=R(e[i]):S.has(i.toLowerCase())&&Array.isArray(e[i])&&(e[i]=e[i].map((e=>R(e))))}}this._set("functionArguments",e)}readFunctionArguments(e){return(e=>{if(null==e)return null;e=(0,r.clone)(e);const t={};for(const i of Object.keys(e))N.has(i.toLowerCase())?t[i]=Z(e[i]):S.has(i.toLowerCase())&&Array.isArray(e[i])?t[i]=e[i].map(Z):t[i]=e[i];return t})(e)}writeFunctionArguments(e,t,i){const o={};for(const n of Object.keys(e))N.has(n.toLowerCase())?o[n]=F(e[n]):S.has(n.toLowerCase())&&Array.isArray(e[n])?o[n]=e[n].map(F):o[n]=F(e[n]);t[i]=o}readFunctionName(e,t){const i=t.rasterFunctionInfos;return t.name||(i?.length&&"None"!==i[0].name?i[0].name:t.rasterFunction||t.rasterFunctionDefinition?.name)}get rasterFunctionDefinition(){return this.functionDefinition?.toJSON()}set rasterFunctionDefinition(e){this.functionDefinition=k(e)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new b({functionName:this.functionName,functionArguments:(0,r.clone)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,r.clone)(this.rasterFunctionDefinition)})}};(0,o._)([(0,s.MZ)({json:{type:Object,name:"rasterFunctionArguments"}})],O.prototype,"functionArguments",null),(0,o._)([(0,p.w)("functionArguments")],O.prototype,"readFunctionArguments",null),(0,o._)([(0,l.K)("functionArguments")],O.prototype,"writeFunctionArguments",null),(0,o._)([(0,s.MZ)({json:{type:String,write:{target:"rasterFunction"}}})],O.prototype,"functionName",void 0),(0,o._)([(0,p.w)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],O.prototype,"readFunctionName",null),(0,o._)([(0,a.e)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],O.prototype,"outputPixelType",void 0),(0,o._)([(0,s.MZ)({type:String,json:{read:!0,write:!0}})],O.prototype,"variableName",void 0),(0,o._)([(0,s.MZ)()],O.prototype,"rasterFunctionDefinition",null),(0,o._)([(0,s.MZ)(D)],O.prototype,"functionDefinition",void 0),(0,o._)([(0,s.MZ)()],O.prototype,"hasClipFunction",null),O=b=(0,o._)([(0,u.$)("esri.layers.support.RasterFunction")],O);const C=O},56888:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var o=i(35143),n=i(69098),r=i(45802),s=i(42553),a=i(46053),p=(i(81806),i(76460),i(47249),i(85842)),u=i(17707),l=i(19247),c=i(19902),d=i(31608),y=i(29365);const m=new r.J({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let w=class extends(n.A.ClonableMixin(s.A)){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,t,i){e?.length&&(t.geometryType=(0,c.getJsonType)(e[0]),t.geometries=e.map((e=>e.toJSON())))}};(0,o._)([(0,a.MZ)({types:[d.yR]})],w.prototype,"geometries",void 0),(0,o._)([(0,u.K)("geometries")],w.prototype,"writeGeometries",null),(0,o._)([(0,a.MZ)({type:y.default,json:{write:!0}})],w.prototype,"mosaicRule",void 0),(0,o._)([(0,a.MZ)({type:l.default,json:{write:!0}})],w.prototype,"pixelSize",void 0),(0,o._)([(0,a.MZ)({json:{write:!0}})],w.prototype,"constantZ",void 0),(0,o._)([(0,a.MZ)({type:m.apiValues,json:{read:m.read,write:m.write}})],w.prototype,"baseType",void 0),w=(0,o._)([(0,p.$)("esri.rest.support.ImageVolumeParameters")],w);const h=w},58646:(e,t,i)=>{i.d(t,{SZ:()=>n,e8:()=>s,hm:()=>r});var o=i(45802);const n=(0,o.O)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),r=(0,o.O)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),s=(0,o.O)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"})}}]);
//# sourceMappingURL=56888.5bf0f534.chunk.js.map