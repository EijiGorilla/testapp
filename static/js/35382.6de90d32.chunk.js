"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[35382,38574,75166,85685],{770:(e,a,n)=>{n.d(a,{bG:()=>s,Ty:()=>o,YJ:()=>u,Fq:()=>c,vt:()=>t});var l=n(53084),i=n(42633);class r{constructor(e){const{name:a,label:n,description:l,schemes:r}=e;this.name=a,this.label=n,this.description=l,this.schemes=r;const s=e.basemapGroups||i.Np;let t=[];Object.keys(s).forEach((e=>{t=t.concat(s[e])})),this.supportedBasemaps=t,this.basemapGroups=s}isBasemapSupported(e){const a=(0,i.T1)(e,this.supportedBasemaps);return!(!a||!this.supportedBasemaps.includes(a))}getRawSchemes(e){const{basemapId:a,basemapTheme:n}=function(e,a,n){let l=null,r=null;if(a&&(l=(0,i.T1)(a,e,!1),l)){const e=(0,i.BV)(l);null!=e&&(r=e)}return!l&&n&&(l="dark"===n?"dark-gray":"gray",r=n),l||r||(l="gray",r="light"),{basemapId:l,basemapTheme:r}}(this.supportedBasemaps,e.basemap,e.basemapTheme);let r=n;if(a){const e=(0,i.BV)(a,this.basemapGroups);null!=e&&(r=e)}let s=e.geometryType;"multipoint"===s?s="point":"mesh"===s&&(s="polygon");const t=this.schemes[s]||this.schemes.default;return{schemesInfo:(0,l.clone)(t[r]),basemapId:a,basemapTheme:n}}}function s(e){const a=e.themeDictionary,n=new Map;for(const l in a){const e=a[l];n.set(l,new r(e))}return n}function t(e,a){const n=[];return e.forEach((e=>{e.isBasemapSupported(a)&&n.push({name:e.name,label:e.label,description:e.description,basemaps:[...e.supportedBasemaps]})})),n}function o(e,a){if(!e)return;if(!a)return;let n=null;const l=[a.primaryScheme,...a.secondarySchemes];for(const i of l)if(i.name?.toLowerCase()===e.toLowerCase()){n=i;break}return n}function u(e,a,n){if(!e&&!a)return[];if(!n)return[];const l=!e?.length,i=!a?.length,r=[n.primaryScheme,...n.secondarySchemes],s=[];for(const t of r){const n=!!l||e.some((e=>t.tags.includes(e))),r=!i&&a.some((e=>t.tags.includes(e)));n&&!r&&s.push(t)}return s}function c(e){const a=e.theme;if(a)return a.getRawSchemes({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme})}},13001:(e,a,n)=>{n.r(a),n.d(a,{createRenderer:()=>I,regenerateRenderer:()=>L,updateRenderer:()=>F});var l=n(59784),i=n(50076),r=n(53084),s=n(63860),t=n(9922),o=n(76841),u=n(44884),c=n(33766),p=n(31650),m=n(53151),d=n(53680),f=n(51006),h=n(90494),g=n(11563),y=n(38574),w=n(94439);const b=new Set(["equal-interval","natural-breaks","quantile"]),v=new Set(["HH","HL","LH","LL"]),k={2:[["HL","HH"],["LL","LH"]],3:[["HL","HM","HH"],["ML","MM","MH"],["LL","LM","LH"]],4:[["HL","HM1","HM2","HH"],["M2L","M2M1","M2M2","M2H"],["M1L","M1M1","M1M2","M1H"],["LL","LM1","LM2","LH"]]},S={2:["L","H"],3:["L","M","H"],4:["L","M1","M2","H"]},z=e=>({minValue:e.minValue,maxValue:e.maxValue});async function C(e){if(!(e?.layer&&e.view&&e.field1&&e.field2))throw new i.default("relationship-renderer:missing-parameters","'layer', 'view', 'field1' and 'field2' parameters are required");e.forBinning&&(0,h.p)(e,"relationship-renderer");const a={...e,layer:e.layer,field1:e.field1,field2:e.field2};if(a.symbolType??="2d",a.defaultSymbolEnabled??=!0,a.classificationMethod??="quantile",a.numClasses??=3,a.focus??=null,!b.has(a.classificationMethod))throw new i.default("relationship-renderer:invalid-parameters",`classification method ${a.classificationMethod} is not supported`);if(a.numClasses<2||a.numClasses>4)throw new i.default("relationship-renderer:invalid-parameters","'numClasses' must be 2, 3 or 4");if(e.focus&&!v.has(e.focus))throw new i.default("relationship-renderer:invalid-parameters","'focus' must be 'HH', 'HL', 'LH', 'LL' or null");const n=e.forBinning?g.Mi:g.J4,l=(0,g.Jg)(a.layer,n,e.forBinning);if(!l)throw new i.default("relationship-renderer:invalid-parameters","'layer' must be one of these types: "+(0,g.Ho)(n).join(", "));const r=null!=a.signal?{signal:a.signal}:null;await l.load(r);const s=l.geometryType,t=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===s&&a.outlineOptimizationEnabled,a.sizeOptimizationEnabled=("point"===s||"multipoint"===s||"polyline"===s)&&a.sizeOptimizationEnabled,"mesh"===s)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none";else{if("3d-volumetric-uniform"===a.symbolType&&"point"!==s)throw new i.default("relationship-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(t&&"polygon"===s)throw new i.default("relationship-renderer:not-supported","3d symbols are not supported for polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new i.default("relationship-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const{field1:o,field2:u}=a,c=[o.field,u.field];o.normalizationField&&c.push(o.normalizationField),u.normalizationField&&c.push(u.normalizationField);const p=(0,f.MH)(l,c,"relationship-renderer:invalid-parameters");if(p)throw p;return{...a,layer:l}}function B(e,a){const n=(0,r.clone)(k[e]);return(0,y.flatten2DArray)(n,a)}function T(e,a,n,l){const{field:i,normalizationField:r}=e,{field:s,normalizationField:t}=a,o=n.map((e=>[e.minValue,e.maxValue])),u=l.map((e=>[e.minValue,e.maxValue])),c=o.length,p=S[c];return`\n  var field1 = $feature['${i}'];\n  var field2 = $feature['${s}'];\n  var hasNormField1 = ${r?"true":"false"};\n  var hasNormField2 = ${t?"true":"false"};\n  var normField1 = ${r?`$feature['${r}']`:"null"};\n  var normField2 = ${t?`$feature['${t}']`:"null"};\n\n  if (\n    IsEmpty(field1) ||\n    IsEmpty(field2) ||\n    (hasNormField1 && (IsEmpty(normField1) || normField1 == 0)) ||\n    (hasNormField2 && (IsEmpty(normField2) || normField2 == 0))\n  ) {\n    return null;\n  }\n\n  var value1 = IIf(hasNormField1, (field1 / normField1), field1);\n  var value2 = IIf(hasNormField2, (field2 / normField2), field2);\n\n  var breaks1 = ${JSON.stringify(o)};\n  var breaks2 = ${JSON.stringify(u)};\n  var classCodes = ${JSON.stringify(p)};\n\n  function getClassCode(value, breaks) {\n    var code = null;\n\n    for (var i in breaks) {\n      var info = breaks[i];\n      if (value >= info[0] && value <= info[1]) {\n        code = classCodes[i];\n        break;\n      }\n    }\n\n    return code;\n  }\n\n  var code1 = getClassCode(value1, breaks1);\n  var code2 = getClassCode(value2, breaks2);\n\n  var classValue = IIf(IsEmpty(code1) || IsEmpty(code2), null, code1 + code2);\n  return classValue;\n  `}async function x(e,a,n){const l=await(0,s.ud)("esri/smartMapping/t9n/smartMapping"),{basemap:r,classificationMethod:c,field1:p,field2:d,focus:h,numClasses:g,signal:w}=e,b=e.layer,v=a.classBreakInfos,k=n.classBreakInfos;if(g!==v.length||v.length!==k.length)throw new i.default("relationship-renderer:error","incompatible class breaks");const S=function(e,a){return B(e,a).map((e=>({value:e,count:0})))}(g,h),z=T(e.field1,e.field2,v,k),C=(await async function(e){let a=e.relationshipScheme,n=null,l=null;const i=await(0,f.Ib)(e.basemap,e.view);if(n=null!=i.basemapId?i.basemapId:null,l=null!=i.basemapTheme?i.basemapTheme:null,a)return{scheme:(0,y.cloneScheme)(a),basemapId:n,basemapTheme:l};const r=(0,y.getSchemes)({basemapTheme:l,geometryType:e.geometryType,theme:e.theme,worldScale:e.worldScale,view:e.view});return r&&(a=r.primaryScheme,n=r.basemapId,l=r.basemapTheme),{scheme:a,basemapId:n,basemapTheme:l}}({basemap:r,geometryType:b.geometryType,theme:"default",relationshipScheme:e.relationshipScheme,worldScale:!!e.symbolType?.includes("3d-volumetric"),view:e.view})).scheme,x=await(0,m.createRenderer)({layer:b,basemap:r,valueExpression:z,valueExpressionTitle:l.relationship.legendTitle,numTypes:-1,sortEnabled:!1,defaultSymbolEnabled:e.defaultSymbolEnabled,typeScheme:{colors:(0,y.getColors)(C,g,h),...C},statistics:{uniqueValueInfos:S},legendOptions:e.legendOptions,outlineOptimizationEnabled:e.outlineOptimizationEnabled,sizeOptimizationEnabled:e.sizeOptimizationEnabled,symbolType:e.symbolType,colorMixMode:e.colorMixMode,edgesType:e.edgesType,filter:e.filter,view:e.view,signal:w}),M=x.renderer,F=M.uniqueValueInfos,I=l.relationship;for(const i of F??[])i.label=I[i.value];const L=new t.default({type:"relationship",classificationMethod:c,numClasses:g,focus:h,field1:new u.K({field:p.field,normalizationField:p.normalizationField,label:p.label,classBreakInfos:v.map((e=>{let{minValue:a,maxValue:n}=e;return new o.n({minValue:a,maxValue:n})}))}),field2:new u.K({field:d.field,normalizationField:d.normalizationField,label:d.label,classBreakInfos:k.map((e=>{let{minValue:a,maxValue:n}=e;return new o.n({minValue:a,maxValue:n})}))})});return M.authoringInfo=L,{renderer:M,classBreaks:{field1:a,field2:n},uniqueValueInfos:x.uniqueValueInfos,relationshipScheme:C,basemapId:x.basemapId,basemapTheme:x.basemapTheme}}async function M(e){const{layer:a,classificationMethod:n,field1:l,field2:r,numClasses:s,filter:t,view:o,signal:u}=e,c={layer:a,classificationMethod:n,field:l.field,normalizationField:l.normalizationField,normalizationType:l.normalizationField?"field":null,minValue:l.minValue,maxValue:l.maxValue,analyzeData:!(null!=l.minValue&&null!=l.maxValue),numClasses:s,filter:t,view:o,signal:u},p={layer:a,classificationMethod:n,field:r.field,normalizationField:r.normalizationField,normalizationType:r.normalizationField?"field":null,minValue:r.minValue,maxValue:r.maxValue,analyzeData:!(null!=r.minValue&&null!=r.maxValue),numClasses:s,filter:t,view:o,signal:u},[m,d]=await Promise.all([(0,f.Pv)(c),(0,f.Pv)(p)]);if(!m||!d)throw new i.default("relationship-renderer:error","error when calculating class breaks");return{field1:m.result,field2:d.result}}async function F(e){const a=await async function(e){if(!e?.renderer||!e.numClasses)throw new i.default("update-relationship-renderer:missing-parameters","'renderer' and 'numClasses' parameters are required");const{field1:a,field2:n,renderer:l,numClasses:r,colors:s}=e,t=r**2;if((a||n)&&!(a&&n&&a.field&&n.field))throw new i.default("update-relationship-renderer:missing-parameters","'field1' and 'field2' parameters are required");if(a&&!a.classBreakInfos||n&&!n.classBreakInfos)throw new i.default("update-relationship-renderer:missing-parameters","'field1.classBreakInfos' and 'field2.classBreakInfos' are required");if(!l.authoringInfo)throw new i.default("update-relationship-renderer:missing-parameters","'renderer.authoringInfo' is required");if(l.uniqueValueInfos?.length!==t)throw new i.default("update-relationship-renderer:invalid-parameters",`Renderer must have ${t} unique value infos to support ${r} classes`);if(s&&s.length!==t)throw new i.default("update-relationship-renderer:invalid-parameters",`The scheme must have ${t} colors`);return e}(e),{field1:n,field2:r,renderer:s,numClasses:c,focus:p,colors:m}=a,d=s.clone();d.valueExpression=T(n,r,n.classBreakInfos,r.classBreakInfos);const f=d.uniqueValueInfos??[];if(function(e,a,n){const l=B(a,n);e.sort(((e,a)=>{const n=l.indexOf(e.value),i=l.indexOf(a.value);let r=0;return n<i?r=-1:n>i&&(r=1),r}))}(f,c,p),m){const e=(0,l.Iy)(m,m.length);f.forEach(((a,n)=>(0,w.dt)(a.symbol,e[n])))}return function(e,a){e.authoringInfo??=new t.default;const n=e.authoringInfo;n.numClasses=a.numClasses,n.focus=a.focus||null,n.focus||delete n.focus;const{field1:l,field2:i}=a;n.field1=new u.K({field:l.field,normalizationField:l.normalizationField,label:l.label,classBreakInfos:l.classBreakInfos.map((e=>new o.n(z(e))))}),n.field2=new u.K({field:i.field,normalizationField:i.normalizationField,label:i.label,classBreakInfos:i.classBreakInfos.map((e=>new o.n(z(e))))}),e.authoringInfo=n}(d,a),d}async function I(e){const a=await C(e),{field1:n,field2:l}=await M(a);return x(a,n,l)}async function L(e){const{creatorParameters:a,view:n,signal:l,filter:r,renderer:s}=await async function(e){const a="regenerate-relationship-renderer";await(0,d.AC)(e,a);const n=await(0,d.mE)(e),l=(0,d.UJ)(n);if(!l||!["relationship","relationship-size"].includes(l))throw new i.default(`${a}:invalid-parameters`,"Renderer is invalid");const{layer:r,forBinning:s,filter:t,view:o,signal:u}=e,c=(0,d.DW)(n),p=(0,d.Rv)(n),{field1:m,field2:f,classificationMethod:h,focus:g,numClasses:y}=n.authoringInfo,w={field:m.field,normalizationField:m.normalizationField,label:m.label},b={field:f.field,normalizationField:f.normalizationField,label:f.label},v=await C({layer:r,field1:w,field2:b,classificationMethod:h,numClasses:y,focus:g,outlineOptimizationEnabled:c,sizeOptimizationEnabled:p,forBinning:s,filter:t,view:o,signal:u});return{...e,creatorParameters:v,renderer:n}}(e),{layer:t,field1:o,field2:u,numClasses:m,focus:h,outlineOptimizationEnabled:g,sizeOptimizationEnabled:y}=a,{field1:w,field2:b}=await M(a),[v,k,S]=await Promise.all([F({field1:{...o,classBreakInfos:w.classBreakInfos},field2:{...u,classBreakInfos:b.classBreakInfos},renderer:s,numClasses:m,focus:h}),g?(0,c.A)({layer:t,view:n,signal:l,filter:r}).catch(f.ou):null,y?(0,p.default)({layer:t,view:n,signal:l,filter:r}).catch(f.ou):null]);return(0,d.ke)(v,k?.visualVariables,d._i),(0,d.ke)(v,S?.minSize,d.kc),{renderer:v}}},29857:(e,a,n)=>{n.r(a),n.d(a,{default:()=>w});var l=n(50076),i=n(68002),r=n(16525),s=n(90494),t=n(11563);const o=500,u=1e8,c=1280,p=12,m=30,d=15;async function f(e){const{view:a,sampleSize:n}=e;if(!e||!e.layer)throw new l.default("scale-range:missing-parameters","'layer' parameter is required");if(e.snapToLOD&&!a)throw new l.default("scale-range:missing-parameters","'view' parameter is required when 'snapToLOD' is true");e.forBinning&&(0,s.p)(e,"scale-range");const{layer:i,...r}=e,u=e.forBinning?t.Mi:t.J4,c=(0,t.Jg)(i,u,e.forBinning);if(!c)throw new l.default("scale-range:invalid-parameters","'layer' must be one of these types: "+(0,t.Ho)(u).join(", "));const p={layerAdapter:c,...r};p.sampleSize=n||o,await(a?.when());const m=null!=p.signal?{signal:p.signal}:null;return await c.load(m),p}function h(e,a,n){const l=function(e,a){const n=p,l=c/4,i=m,r=c/4,s=d,t=c/2;let o=0,u=0,f=0,h=0;switch(e){case"point":case"multipoint":{const e=a;o=e.avgMinDistance??0,u=n,f=e.minDistance??0,h=l;break}case"polyline":{const e=a;o=e.avgLength??0,u=i,f=e.minLength??0,h=r;break}case"polygon":{const e=a;o=e.avgSize??0,u=s,f=e.minSize??0,h=t;break}}return{resolutionForMinScale:o>0?o/u:null,resolutionForMaxScale:f>0?f/h:null}}(e.geometryType,a),r=n?.spatialReference||e.layer.spatialReference;return{minScale:(0,i.gB)(l.resolutionForMinScale??0,r),maxScale:(0,i.gB)(l.resolutionForMaxScale??0,r)}}function g(e,a){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(e.constraints&&"effectiveLODs"in e.constraints){const l=e.constraints.effectiveLODs,i=n?l:l.slice().reverse();let r=null;for(const e of i)if(!(n?e.scale>a:e.scale<a)){r=e;break}return r}}function y(e,a,n,i){const{view:r,snapToLOD:s,layerAdapter:t}=e;if(s&&r){const e=g(r,a),l=g(r,n,!1);a=e?e.scale:a,n=l?l.scale:n}if(a<n)throw new l.default("scale-range:invalid","calculated minScale is less than maxScale.");return n>a/2&&(n=Math.floor(n/2)),a>u&&(a=0),"polygon"!==t.geometryType&&(n=0),{minScale:Math.ceil(a),maxScale:Math.floor(n),spatialStatistics:i}}async function w(e){const a=await f(e),{view:n,sampleSize:i,layerAdapter:s,signal:t,filter:o}=a,u=await s.getSampleFeatures({view:n,sampleSize:i,returnGeometry:!0,filter:o,signal:t},"json");if(!u?.length)throw new l.default("scale-range:insufficient-info","No features are available to calculate statistics");const c=await(0,r.A)({features:u,geometryType:s.geometryType}),{minScale:p,maxScale:m}=h(s,c,n);return y(a,p,m,c)}},31650:(e,a,n)=>{n.r(a),n.d(a,{default:()=>S});n(81806);var l=n(50076),i=n(76931),r=n(68002),s=n(43996),t=n(63040),o=n(29857),u=n(90494),c=n(11563);const p=1e8,m=1128.497176,d=591657527.591555,f=[10,8,4,2],h=[100,100,60,30],g=[2,1,.75,.5],y=[32,18,12,6],w=[{level:0,resolution:156543.03392800014,scale:591657527.591555},{level:1,resolution:78271.51696399994,scale:295828763.795777},{level:2,resolution:39135.75848200009,scale:147914381.897889},{level:3,resolution:19567.87924099992,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.992452562495,scale:4622324.434309},{level:8,resolution:611.4962262813797,scale:2311162.217155},{level:9,resolution:305.74811314055756,scale:1155581.108577},{level:10,resolution:152.87405657041106,scale:577790.554289},{level:11,resolution:76.43702828507324,scale:288895.277144},{level:12,resolution:38.21851414253662,scale:144447.638572},{level:13,resolution:19.10925707126831,scale:72223.819286},{level:14,resolution:9.554628535634155,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.388657133974685,scale:9027.977411},{level:17,resolution:1.1943285668550503,scale:4513.988705},{level:18,resolution:.5971642835598172,scale:2256.994353},{level:19,resolution:.29858214164761665,scale:1128.497176}];function b(e,a){const{view:n}=e;if(!n)throw new l.default("scale-range:invalid-parameters","'view' is required");const i=a.minScale||p,r=n.constraints&&"effectiveLODs"in n.constraints&&n.constraints.effectiveLODs||w,s=[];for(let l=0;l<r.length;l++){if(r[l].scale>i)continue;const e=Number(l),a=[e-3,e,e+3,e+6];for(const n of a)n>-1&&n<r.length&&s.push(r[n].scale);break}return s.sort(((e,a)=>e-a))}function v(e,a){const{view:n,layerAdapter:i}=e;if(!n)throw new l.default("scale-range:invalid-parameters","'view' is required");const s=i.fullExtent,t=i.minScale||m,o=i.maxScale||d,u=a.minScale||0,c=a.maxScale||0;let p=null!=s?(0,r.X_)(n,s):0;return p=p<t&&p>o?p:0,{scales:[t,o,u,c,p].map(Math.round).sort(((e,a)=>e-a)).filter(((e,a,n)=>!!e&&n.indexOf(e)===a)).filter(((e,a,n)=>!a||Math.abs(e-n[a-1])>5)),fullExtentScale:p}}function k(e,a){const{spatialStatistics:n,minScale:r,maxScale:o}=a;if(!("avgSize"in n)||!n.avgSize)throw new l.default("size-range:insufficient-info","average polygon size is invalid");const u=n.avgSize,{view:c}=e;if(!c)throw new l.default("scale-range:invalid-parameters","'view' is required");const{resolution:p,scale:m}=c,d=p/m,{scales:f,fullExtentScale:h}=v(e,{minScale:r,maxScale:o}),g=[],y=[];return f.forEach(((e,a)=>{const{min:n,max:l}=function(e,a){const n=Math.ceil(e/a);let l=Math.ceil(n/4);l<4?l=4:l>16&&(l=16);const i=5*l;return{min:l,max:i<50?50:i}}(u,d*e),r=f.indexOf(h),s=r>-1&&a>r?2:1;g.push(new t.default({value:e,size:(0,i.PN)(n/s)})),y.push(new t.default({value:e,size:(0,i.PN)(l/s)}))})),{minSize:new s.default({valueExpression:"$view.scale",stops:g}),maxSize:new s.default({valueExpression:"$view.scale",stops:y})}}async function S(e){const a=await async function(e){const{view:a}=e;if(!(e&&a&&e.layer))throw new l.default("size-range:missing-parameters","'view' and 'layer' parameters are required");e.forBinning&&(0,u.p)(e,"size-range");const{layer:n,...i}=e,r=e.forBinning?c.Mi:c.J4,s=(0,c.Jg)(n,r,e.forBinning);if(!s)throw new l.default("size-range:invalid-parameters","'layer' must be one of these types: "+(0,c.Ho)(r).join(", "));const t={layerAdapter:s,...i,view:a};await a.when();const o=null!=t.signal?{signal:t.signal}:null;await s.load(o);const p=s.geometryType;if("point"!==p&&"multipoint"!==p&&"polyline"!==p&&"polygon"!==p)throw new l.default("size-range:not-supported",`sizeRange is not supported for geometryType: ${p}`);return t}(e),{view:n,layerAdapter:r,signal:p,filter:m}=a,d=await(0,o.default)({layer:r,view:n,signal:p,filter:m});switch(r.geometryType){case"point":case"multipoint":return function(e,a){const{minScale:n,maxScale:r}=a,o=b(e,{minScale:n,maxScale:r});if(!o.length)throw new l.default("scale-range:insufficient-info","not enough scale values");return{minSize:new s.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new t.default({value:e,size:(0,i.PN)(f[a])})))}),maxSize:new s.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new t.default({value:e,size:(0,i.PN)(h[a])})))})}}(a,d);case"polyline":return function(e,a){const{minScale:n,maxScale:r}=a,o=b(e,{minScale:n,maxScale:r});if(!o.length)throw new l.default("scale-range:insufficient-info","not enough scale values");return{minSize:new s.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new t.default({value:e,size:(0,i.PN)(g[a])})))}),maxSize:new s.default({valueExpression:"$view.scale",stops:o.map(((e,a)=>new t.default({value:e,size:(0,i.PN)(y[a])})))})}}(a,d);case"polygon":return k(a,d);case"mesh":case"multipatch":return null}return null}},38574:(e,a,n)=>{n.r(a),n.d(a,{cloneScheme:()=>y,flatten2DArray:()=>w,flipColors:()=>v,getColors:()=>b,getMatchingSchemes:()=>k,getSchemeByName:()=>h,getSchemes:()=>f,getSchemesByTag:()=>g,getThemes:()=>d});var l=n(69539),i=n(18690),r=n(53084),s=n(89132),t=n(770),o=n(80791);const u={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"},darker:{color:[26,26,26,.25],width:"1px"}},c={lightBasemaps:{primary:"relationship-blue-orange-brown",secondary:["relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green","relationship-blue-red-pink","relationship-blue-green-brightgreen","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal"]},darkBasemaps:{primary:"relationship-blue-green-brightgreen",secondary:["relationship-blue-red-pink","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal","relationship-blue-orange-brown","relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green"]}},p="#aaaaaa",m=(0,t.bG)({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features based on relationship between two attributes.",schemes:{point:{light:{common:{noDataColor:p,outline:u.light,size:"8px"},primary:c.lightBasemaps.primary,secondary:c.lightBasemaps.secondary},dark:{common:{noDataColor:p,outline:u.darker,size:"8px"},primary:c.darkBasemaps.primary,secondary:c.darkBasemaps.secondary}},polyline:{light:{common:{noDataColor:p,width:"2px"},primary:c.lightBasemaps.primary,secondary:c.lightBasemaps.secondary},dark:{common:{noDataColor:p,width:"2px"},primary:c.darkBasemaps.primary,secondary:c.darkBasemaps.secondary}},polygon:{light:{common:{noDataColor:p,outline:u.light,fillOpacity:.8},primary:c.lightBasemaps.primary,secondary:c.lightBasemaps.secondary},dark:{common:{noDataColor:p,outline:u.dark,fillOpacity:.8},primary:c.darkBasemaps.primary,secondary:c.darkBasemaps.secondary}}}}}});function d(e){return(0,t.vt)(m,e)}function f(e){const a=(0,t.Fq)({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme,theme:m.get("default")});if(!a)return;const{schemesInfo:n,basemapId:l,basemapTheme:r}=a,s={...e,basemap:l};return{primaryScheme:B(s,n.primary,n.common),secondarySchemes:n.secondary.map((e=>B(s,e,n.common))).filter(i.Ru),basemapId:l,basemapTheme:r}}function h(e){return(0,t.Ty)(e.name,f(e))}function g(e){return(0,t.YJ)(e.includedTags,e.excludedTags,f(e))}function y(e){if(!e)return;const a={...e};return a.colorsForClassBreaks=a.colorsForClassBreaks.map((e=>({numClasses:e.numClasses,colors:e.colors.map((e=>e.map((e=>new l.default(e)))))}))),a.tags=[...a.tags],a.noDataColor&&(a.noDataColor=new l.default(a.noDataColor)),"outline"in a&&a.outline&&(a.outline={color:a.outline.color&&new l.default(a.outline.color),width:a.outline.width}),a}function w(e,a){e=(0,r.clone)(e);let n=[];const l=(a||"HH").split(""),i=l[0],s=l[1];"L"===i&&e.reverse();const t="H"===s;return e.forEach((e=>{t&&e.reverse(),n=n.concat(e)})),n}function b(e,a,n){let i;return e.colorsForClassBreaks.some((e=>(e.numClasses===a&&(i=e.colors),!!i))),i=i?.map((e=>e.map((e=>new l.default(e))))),i?w(i,n):null}function v(e,a){const n=a?e:y(e);return n.colorsForClassBreaks.forEach((e=>{const a=e.colors.reverse(),n=[];for(let l=0;l<e.numClasses;l++){const e=[];a.forEach((a=>{e.push(a[l])})),n.push(e)}e.colors=n})),n}function k(e){const a=e.theme||"default",n=e.geometryType,l=e.colors,i=e.numClasses,r=m.get(a);if(!r)return[];const s=r.supportedBasemaps,t=[];return s.forEach((e=>{const r=f({theme:a,basemap:e,geometryType:n});if(r){let e=C(r.primaryScheme,l,i);e&&t.push(e),r.secondarySchemes.forEach((a=>{e=C(a,l,i),e&&t.push(e)}))}})),t}function S(e,a,n,l){let i;const r=b(e,n,l);return r&&1===(0,o._t)(a,r)&&(i=e),i}function z(e,a,n,l){let i,r=1;do{i=S(e,a,n,l),i||(e=v(e),r++)}while(!i&&r<=4);return i}function C(e,a,n){return z(e,a,n,"HH")||z(e,a,n,"HL")||z(e,a,n,"LH")||z(e,a,n,"LL")}function B(e,a,n){const i="mesh"!==e.geometryType&&e.worldScale?e.view:null,r=s.A[a],t=e.theme||"default";if(!r)return;const u=t+"/"+e.basemap+"/"+a,c=[];for(const l in r)if("stops"!==l&&"name"!==l&&"tags"!==l){const e=+l,a=r[l];c.push({numClasses:e,colors:a})}switch(e.geometryType){case"point":case"multipoint":{const e=n;return function(e,a){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:T(e.colorsForClassBreaks),noDataColor:new l.default(e.noDataColor),outline:{color:new l.default(e.outline.color),width:e.outline.width},size:a?(0,o._J)(e.size,a):e.size,opacity:e.opacity}}({id:u,name:r.name,tags:r.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:1,outline:e.outline,size:e.size},i)}case"polyline":{const e=n;return function(e,a){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:T(e.colorsForClassBreaks),noDataColor:new l.default(e.noDataColor),opacity:e.opacity,width:a?(0,o._J)(e.width,a):e.width}}({id:u,name:r.name,tags:r.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:1,width:e.width},i)}case"polygon":{const e=n;return function(e){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:T(e.colorsForClassBreaks),noDataColor:new l.default(e.noDataColor),outline:{color:new l.default(e.outline.color),width:e.outline.width},opacity:e.opacity}}({id:u,name:r.name,tags:r.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:e.fillOpacity,outline:e.outline})}case"mesh":{const e=n;return function(e){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:T(e.colorsForClassBreaks),noDataColor:new l.default(e.noDataColor),opacity:e.opacity}}({id:u,name:r.name,tags:r.tags,colorsForClassBreaks:c,noDataColor:e.noDataColor,opacity:e.fillOpacity})}}}function T(e){return e.map((e=>({numClasses:e.numClasses,colors:e.colors.map((e=>e.map((e=>new l.default(e)))))})))}},80791:(e,a,n)=>{n.d(a,{_J:()=>u,_t:()=>o});var l=n(76931),i=n(42633);const r=i.Np.light,s=i.Np.dark;function t(e,a){return e.r===a.r&&e.g===a.g&&e.b===a.b}function o(e,a){let n=0;if(e.length===a.length){let l=e.every(((e,n)=>t(e,a[n])));l?n=1:(l=e.slice().reverse().every(((e,n)=>t(e,a[n]))),l&&(n=-1))}return n}function u(e,a){return Math.ceil(function(e){const a=e.width,n=e.height;let i=e.pixelSizeAt(e.toMap((0,l.tc)(.5*a,.5*n),{exclude:[]}));if(i<=0&&(i=e.pixelSizeAt(e.toMap((0,l.tc)(.5*a,.95*n),{exclude:[]})),i<=0&&"camera"in e)){const a=e.camera.position.clone();a.z=0,i=2*e.pixelSizeAt(a)}return i}(a)*(0,l.Lz)((0,l.cr)(e)))}}}]);
//# sourceMappingURL=35382.6de90d32.chunk.js.map