"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[73814],{73814:(e,t,a)=>{a.d(t,{load:()=>d});var r=a(50076),n=a(13096),l=a(11668),o=a(77491),s=a(24883),i=a(79942),u=a(64130),c=a(72945),p=a(81589),y=a(67061);async function d(e,t){const a=e.instance.portalItem;if(a?.id)return await a.load(t),function(e){const t=e.instance.portalItem;if(!t?.type||!e.supportedTypes.includes(t.type))throw new r.default("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:t?.type,expectedType:e.supportedTypes.join(", ")})}(e),e.validateItem&&e.validateItem(a),async function(e,t){const a=e.instance,n=a.portalItem;if(!n)return;const{url:s,title:d}=n,m=(0,i.v)(n,"portal-item");if("group"===a.type)return async function(e,t,a){const n=e.portalItem;if(!e.sourceIsPortalItem)return;const{title:s,type:p}=n;if("Group Layer"===p){if(!(0,c.Y)(n,"Map"))throw new r.default("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return async function(e,t){const a=e.portalItem,n=await a.fetchData("json");if(!n)return;if(!t.populateGroupLayer)throw new r.default("portal:missing-populate-group-layer","Missing populate group layer");const l=(0,i.v)(a,"web-map");e.read(n,l),await t.populateGroupLayer(e,n,{context:l}),e.resourceReferences={portalItem:a,paths:l.readResourcePaths??[]}}(e,a)}return e.read({title:s},t),async function(e,t){let a;const{portalItem:n}=e;if(!n)return;const s=n.type,i=t.layerModuleTypeMap;if(!i)throw new r.default("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(s){case"Feature Service":case"Feature Collection":a=i.FeatureLayer;break;case"Stream Service":a=i.StreamLayer;break;case"Scene Service":a=i.SceneLayer;break;default:throw new r.default("portal:unsupported-item-type-as-group",`The item type '${s}' is not supported as a 'IGroupLayer'`)}const c=new o.v;let[p,d]=await Promise.all([a(),w(t,c)]),m=()=>p;if("Feature Service"===s){const t=(0,u.pJ)(d)?.customParameters;d=n.url?await(0,u.bO)(d,n.url,c):{},m=await async function(e,t){const{layers:a,tables:r}=e,n=[...a??[],...r??[]];if(!n.length)return;const l=new Set,o=[];for(const{layerType:c}of n){const e=c??"ArcGISFeatureLayer";if(l.has(e))continue;l.add(e);const a=t[(0,u.K8)(e)];o.push(a())}const s=await Promise.all(o),i=new Map;return Array.from(l).forEach(((e,t)=>{i.set(e,s[t])})),e=>{let{layerType:t}=e;const a=t??"ArcGISFeatureLayer";return i.get(a)}}(d,i)||m;const a=await async function(e,t){const{layersJSON:a}=await(0,l.Q)(e,t);if(!a)return null;const r=[...a.layers,...a.tables];return e=>r.find((t=>t.id===e.id))}(n.url,{customParameters:t,loadContext:c});return await f(e,m,m,d,i,a)}return"Scene Service"===s&&n.url&&(d=await(0,u.nu)(n,d,c)),(0,u.XH)(d)>0?await f(e,m,null,d,i):await async function(e,t,a){const{portalItem:r}=e;if(!r?.url)return;const n=await(0,y.V)(r.url);n&&f(e,t,null,{layers:n.layers?.map(u._r),tables:n.tables?.map(u._r)},a)}(e,m,i)}(e,a)}(a,m,e);s&&"media"!==a.type&&a.read({url:s},m);const h=new o.v,g=await w(e,h,t);return g&&a.read(g,m),a.resourceReferences={portalItem:n,paths:m.readResourcePaths??[]},"subtype-group"!==a.type&&a.read({title:d},m),(0,p.L)(a,m)}(e,t)}async function f(e,t,a,r,n,l){let o=r.layers||[];const s=r.tables||[];if("Feature Collection"===e.portalItem?.type?(o.forEach(((e,t)=>{e.id=t,"Table"===e?.layerDefinition?.type&&s.push(e)})),o=o.filter((e=>"Table"!==e?.layerDefinition?.type))):(o.reverse(),s.reverse()),o.forEach((a=>{const n=l?.(a);if(n||!l){const l=m(e,t(a),r,a,n);e.add(l)}})),s.length){const t=a?null:await n.FeatureLayer();s.forEach((n=>{const o=l?.(n);if(o||!l){const l=m(e,a?a(n):t,r,n,o);e.tables.add(l)}}))}}function m(e,t,a,r,n){const l=e.portalItem,o={portalItem:l.clone(),layerId:r.id};null!=r.url&&(o.url=r.url);const i=new t(o);if("sourceJSON"in i&&(i.sourceJSON=n),"subtype-group"!==i.type&&"catalog"!==i.type&&(i.sublayerTitleMode="service-name"),"Feature Collection"===l.type){const e={origin:"portal-item",portal:l.portal||s.default.getDefault()};i.read(r,e);const t=a.showLegend;null!=t&&i.read({showLegend:t},e)}return i}async function w(e,t,a){if(!1===e.supportsData)return;const r=e.instance,l=r.portalItem;if(!l)return;let o=null;try{o=await l.fetchData("json",a)}catch(s){}if(function(e){return"stream"!==e.type&&"layerId"in e}(r)){let e=null;const a=await async function(e,t,a){if(t?.layers&&t?.tables)return(0,u.XH)(t);const r=(0,n.qg)(e.url);if(!r)return 1;const l=await a.fetchServiceMetadata(r.url.path,{customParameters:(0,u.pJ)(t)?.customParameters}).catch((()=>null));return(t?.layers?.length??l?.layers?.length??0)+(t?.tables?.length??l?.tables?.length??0)}(l,o,t);if((o?.layers||o?.tables)&&a>0){if(null==r.layerId){const e=(0,u.l)(r.type),t=e?.length?(0,u.Ju)(o,e)[0]:(0,u.pJ)(o);t&&(r.layerId=t.id)}e=function(e,t){const{layerId:a}=t,r=e.layers?.find((e=>e.id===a))||e.tables?.find((e=>e.id===a));return r&&function(e,t){const a="layerType"in e&&e.layerType,{type:r}=t;return!("feature"===r&&a&&"ArcGISFeatureLayer"!==e.layerType||"catalog"===r&&!a||"oriented-imagery"===r&&!a||"subtype-group"===r&&!a)}(r,t)?r:null}(o,r),"OrientedImageryLayer"===e?.layerType&&"oriented-imagery"===r.type&&r.supportedSourceTypes.add("Feature Layer"),e&&null!=o.showLegend&&(e.showLegend=o.showLegend)}return a>1&&"sublayerTitleMode"in r&&"service-name"!==r.sublayerTitleMode&&(r.sublayerTitleMode="item-title-and-service-name"),e}return o}}}]);
//# sourceMappingURL=73814.ef4cad25.chunk.js.map