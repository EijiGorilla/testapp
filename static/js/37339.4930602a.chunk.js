"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[37339],{37339:(e,t,s)=>{s.r(t),s.d(t,{default:()=>g});var r=s(35143),i=s(45802),n=s(42553),a=s(46053),o=(s(81806),s(76460),s(47249),s(85842)),l=s(65215),p=s(80963);const c=new i.J({preserveShape:"preserve-shape",planar:"planar",geodesic:"geodesic"}),u=new i.J({esriAcres:"acres",esriHectares:"hectares",esriSquareMiles:"square-miles",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareFeet:"square-feet",esriSquareYards:"square-yards",esriAres:"ares"}),h=new i.J({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let y=class extends n.A{constructor(e){super(e),this.areaUnit=null,this.calculationType=null,this.lengthUnit=null,this.polygons=null}toJSON(){const e={};if(this.polygons&&this.polygons.length>0){const t=this.polygons.map((e=>e.toJSON()));e.polygons=JSON.stringify(t);const s=this.polygons[0].spatialReference;e.sr=(0,p.YX)(s)}if(this.lengthUnit&&(e.lengthUnit=h.toJSON(this.lengthUnit)),this.areaUnit){const t=u.toJSON(this.areaUnit);e.areaUnit="string"==typeof t?JSON.stringify({areaUnit:t}):t}return this.calculationType&&(e.calculationType=c.toJSON(this.calculationType)),e}};(0,r._)([(0,a.MZ)({type:String,json:{write:!0}})],y.prototype,"areaUnit",void 0),(0,r._)([(0,a.MZ)({type:String,json:{write:!0}})],y.prototype,"calculationType",void 0),(0,r._)([(0,a.MZ)({type:String,json:{write:!0}})],y.prototype,"lengthUnit",void 0),(0,r._)([(0,a.MZ)({type:[l.default],json:{write:!0}})],y.prototype,"polygons",void 0),y=(0,r._)([(0,o.$)("esri.rest.support.AreasAndLengthsParameters")],y);const g=y}}]);
//# sourceMappingURL=37339.4930602a.chunk.js.map