"use strict";(self.webpackChunktestapp=self.webpackChunktestapp||[]).push([[11334],{11334:(e,t,i)=>{i.d(t,{default:()=>d});var a=i(39356),o=i(18690),r=i(50346),n=i(10851),s=i(19247),l=i(9624),c=i(56623),u=i(86017),p=i(19562);class d{constructor(e){this.viewModel=e,this._updateBestFeatureFootprintElevation=!1,this.createFootprints=async e=>{const{coverageFrustums:t,currentBestFeature:i,isAdditionalCoverageVisible:s,view:d}=this.viewModel,f=t.filter(o.Ru);for(const o of f){let t=o.clone();if(!d.spatialReference.equals(t.spatialReference)){const{components:i,spatialReference:a,origin:o,vertexAttributes:s,vertexSpace:p}=t;if("local"===p.type){const i=await(0,l.projectWithZConversion)(o,d.spatialReference,e);(0,r.throwIfAborted)(e),t.centerAt(i)}else{const o=s.position,l=Float64Array.from(await(0,u.PT)([...o],a.clone(),d.spatialReference.clone(),e));(0,r.throwIfAborted)(e),t=new n.default({vertexAttributes:new c.H({position:l}),components:i,spatialReference:d.spatialReference.clone()})}}o.imageID===i.attributes.objectId?(this.viewModel.bestFeatureFootprint=new a.default({attributes:{imageID:o.imageID},geometry:t,symbol:p.Xg.clone(),visible:!1}),this._updateBestFeatureFootprintElevation=!0):this.viewModel.additionalFootprints.push(new a.default({attributes:{imageID:o.imageID},geometry:t,symbol:p.Mi.clone(),visible:s}))}},this.updateFootprint=async(e,t)=>{const{bestFeatureFootprint:i,currentBestFeature:n,activeViewer:c,footprintExtent:d,view:f}=this.viewModel,w=c?.imageSize;if(!(n&&i?.geometry&&w&&d))return void this.viewModel.updateCurrentCoveragePolygon(null);const{attributes:{cameraHeight:h,location:m,cameraPitch:v,horizontalFieldOfView:g,verticalFieldOfView:b,cameraRoll:y},elevationSample:F}=n;F&&this._updateBestFeatureFootprintElevation&&(this.updateGroundElevation([i],F),this._updateBestFeatureFootprintElevation=!1);const R=m.toArray(),{vertexAttributes:{position:M},spatialReference:A}=i.geometry,C=await async function(e,t,i,a){return Float64Array.from((await Promise.all(e.reduce(((e,t,i)=>{const a=Math.floor(i/3);return e[a]=e[a]??[],e[a].push(t),e}),new Array).map((async e=>(await(0,l.projectWithZConversion)(new s.default(e,t),i,a)).toArray())))).flat())}(M,A,m.spatialReference),I=await this.viewModel.getMapPoint(e,{feature:n,mode:"default",imageSize:w});(0,r.throwIfAborted)(t);let V=I.filter(o.Ru);if(!V.length)return;V[0].spatialReference.equals(m.spatialReference)||(V=await Promise.all(V.map((async e=>{const i=await(0,l.projectWithZConversion)(e,m.spatialReference,t);return(0,r.throwIfAborted)(t),i}))));const P=await(0,u.WD)(e.map((e=>{let{x:t,y:i}=e;return[t,i]})),V.map((e=>e.toArray())),{cameraHeight:h,cameraLocation:R,cameraPitch:v,frustumVertices:C,horizontalFieldOfView:g,imageHeight:w[1],imageWidth:w[0],inSRS:{wkid:m.spatialReference.wkid},outSRS:{wkid:f.spatialReference.wkid},verticalFieldOfView:b,cameraRoll:y??0,options:t});this.viewModel.updateCurrentCoveragePolygon(new a.default({attributes:{imageID:n.attributes.objectId},geometry:P,symbol:p.Xg.clone(),visible:this.viewModel.currentCoverageVisible}))},this.updateFootprintPanorama=async(e,t)=>{await(0,r.waitTick)(t);const{horizontalFieldOfView:i,pitch:o,verticalFieldOfView:n,yaw:s}=e,l=this.viewModel.currentBestFeature?.clone();if(!l)return;const{attributes:c}=l;c.orientedImageryType=null,c.cameraHeading=(s+c.cameraHeading)%360,c.cameraPitch=o,c.horizontalFieldOfView=i,c.verticalFieldOfView=n,c.cameraRoll=0;const{frustum:d}=(0,u.ns)(c);d?this.viewModel.updateCurrentCoveragePolygon(new a.default({attributes:{imageID:c.objectId},geometry:d,symbol:p.Xg.clone(),visible:this.viewModel.currentCoverageVisible})):this.viewModel.updateCurrentCoveragePolygon(null)}}updateGroundElevation(e,t){const{geometry:i}=this.viewModel.currentBestFeature,a=t.queryElevation(i);e.forEach((e=>{const{geometry:t}=e;switch(t?.type){case"mesh":{const{vertexAttributes:{position:e}}=t,i=Math.floor(e.length/3);for(let t=0;t<i;t+=1)e[3*t+2]+=a?.z??0;break}case"point":t.z=(t.z??0)+(a?.z??0)}}))}}}}]);
//# sourceMappingURL=11334.186acdc9.chunk.js.map